%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 740_1.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: user
%%CreationDate: 7/1/2013
%%BoundingBox: 0 0 1000 1000
%%HiResBoundingBox: 0 0 1000 1000
%%CropBox: 0 0 1000 1000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 128 8%%BeginData: 34163 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD82FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FF
%CAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFF
%A8FFCAFFA8FFCFFFFFFFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FF
%CAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFF
%A8FFCAFFA8FFCAFFA8FFCFFFFFCFFFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8
%FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCF
%FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFFFFFCFFFCFFFA8FFCFFFA8FFCFFFA8
%FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCF
%FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FD04FFA8FFA8CFA8FFA8CFA8
%FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8
%CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFFFFFA8FFA8CFA8
%FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8
%CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFFFCFFF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF
%FFFFCFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF
%CFFFCAFD04FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8CFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8CFA8FD04FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFF
%A8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FF
%CFFFA8FFCFFFA8FFCFFFA8FFCFFD05FFA8FFCFFFA8FFCFFFA8FFCFFFA8FF
%CFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFF
%A8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFD04FFA8CFA8FFA8CFA8FFA8CFA8FF
%A8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CF
%A8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8FFFFFFA8CFA8FFA8CFA8FF
%A8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CF
%A8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8FD04FFCAFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFD05FFCAFF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFD04FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%CAFFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFCAFFFFCFFFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCF
%FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8
%FFCFFFA8FFCFFFA8FFFFFFCFFFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCF
%FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8
%FFCFFFA8FFCFFFA8FFCFFFA8FD04FFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8
%CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8
%FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFFFFFA8FFA8CFA8FFA8CFA8FFA8
%CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8
%FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFFFCFFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFFFFFCFFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFD04FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8A7FD05
%7DA8A8CFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FF
%FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8CFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8CFA8FD04FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FF7D7D
%FD0427F8272727F85252A8A8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCF
%FFA8FFCFFD05FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCF
%FFA8FFFD05A8FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCF
%FFA8FFCFFD04FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA87D27
%27F827F827F827F827F827F827F8527DFFA8CFA8FFA8CFA8FFA8CFA8FFA8
%CFA8FFA8CFA8FFA8FFFFFFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8
%FFA8CFA8FF7D7D2727F827F827275252A8A8CFA8FFA8CFA8FFA8CFA8FFA8
%CFA8FFA8CFA8FFA8CFA8FFA8FD04FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FFCAFFA85220272727202727272027272720272727202752A8CAFFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFD05FFCAFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFA87D27272027277D7D527D27202727527DFFCFFFCAFFCF
%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFD04FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8CF7D27F827F827F827F827F827F827F827F827F827F827F8
%7DA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCAFFFFFFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FF7D27F827F85227277D7D27A852272727F8
%2727A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCAFFFFCFFFCFFF
%A8FFCFFFA8FFCFFFA8FFCFFFA8FF5327F8272727F8272727F8272727F827
%2727F8272727F827277DA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFFFFF
%CFFFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFF52272727527D27275252
%272727525227277D2727F87DCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFF
%A8FD04FFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CF5227F827F827F827F827
%F827F827F827F827F827F827F827F827F87DA8FFA8CFA8FFA8CFA8FFA8CF
%A8FFA8CFA8FFFFFFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FF27275227
%7DCFA727A7CFA8A827A8A8FF7D27A8FF2727F852A8CFA8FFA8CFA8FFA8CF
%A8FFA8CFA8FFA8CFA8FFFFCFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF7D2727
%27202752A8A8FF28272027522720FD0B27207DCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCAFFFFFFCFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF52527D277D
%FFCA5252FFCAFFA827A8FFCFFF277DCFFF52522752CAFFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFCAFD04FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA727F85252
%7DA8FFA8CFA827F827F827275227272752527DA8A87D522727F8A8A8FFA8
%FFA8FFA8FFA8FFA8FFA8CFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%CF5227A82752FFA8A8F8A8A8FFA8CA27A8A8FFA87DF8CFA8CA277D2752A8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FD04FFA8FFCFFFA8FFCFFFA8FFCF
%FFA85227527D5227A8A8FFA852F82727277DFFCFA87DCFCAFFA8FFCFFFA8
%FF7D7D7DFFCFFFA8FFCFFFA8FFCFFFA8FFCFFD05FFA8FFCFFFA8FFCFFFA8
%FFCFFFA8FF7D27A87D27FFA8FF7D52A8FFCFFFA827A8FFA8FFCF527DFFCA
%A827A827A8A8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFD04FFA8CFA8FFA8CFA8
%FFA8CFA8FFA87DF852527D7D2752CF52272727F82752CFA8FFA8CFA8FFA8
%CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8FFFFFFA8CFA8
%FFA8CFA8FFA8CFA8FFA8CFA827F852F827527D522727FD057DF8FD057D27
%27527D52FD0427CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8FD04FFCAFFCFFF
%CAFFCFFFCAFFCFFF7DA8A753527D27525227272720525227A8FFCFFFCAFF
%CFFFCAFFCFFFCAFFCFFFCAA8A8FFCAFFCFFFCAFFCFFFCAFFCFFD05FFCAFF
%CFFFCAFFCFFFCAFFCFFFCA7D27A827527D52525227FD05522E2727FD0552
%2052525352277D527DFFCFFFCAFFCFFFCAFFCFFFCAFFCFFD04FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA82720CFA852F827F827F827277D7DCFA8FFA8CF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCAFFFFFF
%A8FFA8FFA8FFA8FFA8FFA8FFA8CF277DA8527DFFA8CFA827A8CFA8FFA8CF
%27A8A8FFA8FFA8277DFFA8CF277D7D27A8FFA8FFA8FFA8FFA8FFA8FFA8FF
%CAFFFFCFFFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA783CFA852272727F82727
%277DFFA8FFA87D7DA87DFFCFFFA8FFCFFFA8FFCFCF7DFFCFFFA8FFCFFFA8
%FFCFFFA8FFFFFFCFFFCFFFA8FFCFFFA8FFCFFFA8FF7D27A8A827CFA8FFCF
%7D27FFCFFFA8FFCF527DFFCFFFA8FF527DA8FFCF7D27FF27A8A8FFCFFFA8
%FFCFFFA8FFCFFFA8FD04FFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FF52
%27F827F827F82752A82727527D7DA8A87D7DFFA8CFA8FFA8CFA8A82752A8
%FFA8CFA8FFA8CFA8FFA8CFA8FFFFFFA8FFA8CFA8FFA8CFA8FFA8CFA85352
%CF5252A8CFA8FF5252A8FFA8CFA8FF27A1A8FFA8CFA87D52CFA8FFA827A8
%5252CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFFFCFFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFF272720272727202727527D7D522720277DFFA8FFCFFFCAFF
%CFFFCAFFA85227FFCFFFCAFFCFFFCAFFCFFFCAFFFFFFCFFFCFFFCAFFCFFF
%CAFFCFFFCAFF277DCA5252FFCAFFCF7D52FFCFFFCAFFCF527DFFCFFFCAFF
%7D52CAFFCFFF27A87D52CAFFCFFFCAFFCFFFCAFFCFFFCAFD04FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8CF5227F827F827F827F82752FFA8FF7D7D7DA8
%A8A87DFFA8FFA8FFA8CFA8FF27277DFFA8FFA8FFA8FFA8FFA8CFA8FFFFFF
%A8FFA8FFA8FFA8FFA8FFA8FFA827A1CF277DA8FFA8FF527DA8FFA8FFA8FF
%27A7A8FFA8FFA8A827CFA8FFA85252A827CFA8FFA8FFA8FFA8FFA8FFA8CF
%A8FD04FFA8FFCFFFA8FFCFFFA8FFCFFFA8FF7D27F8272727F8FD0427CFCF
%FFA8FFCFFF7DA8A87D527DCFFFA8CFCFCF5227277DA8FFCFFFA8FFCFFFA8
%FFCFFD05FFA8FFCFFFA8FFCFFFA8FFCFA827FFCF527DFFCFFFA8527DFFA8
%FFCFFFA852A7FFA8FFCFFFA127CFFFA8FF527DA827A8FFA8FFCFFFA8FFCF
%FFA8FFCFFD04FFA8CFA8FFA8CFA8FFA8CFA8FFA87D2752F827F827F827F8
%27F87DA8FFA8CFA8FFA8A852FFA852F87DA85227FF7D27F8277DCFA8FFA8
%CFA8FFA8CFA8FFA8FFFFFFA8CFA8FFA8CFA8FFA8CFA8FFA827525227FD05
%5227FD0752F8FD0752F8FD05522752F8A8A8CFA8FFA8CFA8FFA8CFA8FFA8
%FD04FFCAFFCFFFCAFFCFFFCAFFA8FF2727275220272727202727277DFFCF
%FFCAFFCFFFCA7D7D7D202727A820277DA82727277DCAFFCFFFCAFFCFFFCA
%FFCFFD05FFCAFFCFFFCAFFCFFFCAFFCFA8277D5227527D5259524B527D52
%7D52595227527D527D527D5227527D527D274C5227A8FFCAFFCFFFCAFFCF
%FFCAFFCFFD04FFA8FFA8FFA8FFA8FFA8FFA87D52A87D272727F827F827F8
%27F87DA8FFA8FFA8FFA8FFA87D2727F8275227F852FD04277DCFA8FFA8FF
%A8FFA8FFA8FFCAFFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA827A8FF27A8A8FF
%A8CF277DA8CFA8FFA8FF27A8A8CFA8FFA8A827FFA8CFA87D52FF27A8A8FF
%A8FFA8FFA8FFA8FFA8FFCAFFFFCFFFCFFFA8FFCFFFA8FFCFFF7D2727A827
%527D52F8272727F82752FFA8FFCFFFA8FFCFFFA8522727F827272752527D
%7DF8A8CFFFA8FFCFFFA8FFCFFFA8FFFFFFCFFFCFFFA8FFCFFFA8FFCFFFA8
%FF27A8A8527DFFA8FFCF5252FFCFFFA8FFCF527DFFCFFFA8FF7D52A8FFCF
%FF527DA827A8FFCFFFA8FFCFFFA8FFCFFFA8FD04FFA8FFA8CFA8FFA8CFA8
%FFA8A8F827F8277DFFA87DF827F827F8272752277DA8CFA8FFA852F827F8
%27F827F85252522727A8FFA8CFA8FFA8CFA8FFA8CFA8FFFFFFA8FFA8CFA8
%FFA8CFA8FFA8CFA8527DCF2E7DA8CFA8FF5252A8FFA8CFA8FF27A1A8FFA8
%CFA87D27CFA8FFA8277D7D27CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFFFCFFF
%CFFFCAFFCFFFCAFFCFFFA852272720CFCFFFCA7D272720272727202727FF
%CAFFCFA82027272720272727202727272EFFCFFFCAFFCFFFCAFFCFFFCAFF
%FFFFCFFFCFFFCAFFCFFFCAFFCFFFCAFF5252CA7D27FFCAFFCF7D52FFCFFF
%CAFFCF527DFFCFFFCAFF5252CAFFCFCF27CF527DCAFFCFFFCAFFCFFFCAFF
%CFFFCAFD04FFA8FFA8FFA8FFA8FFA8FFA8CF5227F827A8FFA8FFA8A85227
%F827F827F8277DCFA8FF7D27F827F827F827F827F82728CFA8FFA8FFA8FF
%A8FFA8FFA8CFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8A820CFA727A8CF
%A8FF7D52A8FFA8FFA8FF27A8A8FFA8FFA85252CFA8FF7D27A8277DCFA8FF
%A8FFA8FFA8FFA8FFA8CFA8FD04FFA8FFCFFFA8FFCFFFA8FFCFA8F827277D
%A8FFCFFFA8FF2727F8272727F87DCFFFA8A82727F8272727F827272752FF
%CFFFA8FFCFFFA8FFCFFFA8FFCFFD05FFA8FFCFFFA8FFCFFFA8FFCFFFA827
%7DFF277DCFFFA8A827CFA8FFCFFFA8277DFFA8FFCFFF27A8CFFFA8527DA8
%27FFCFFFA8FFCFFFA8FFCFFFA8FFCFFD04FFA8CFA8FFA8CFA8FFA8CFA8FF
%A852F827F8A8A8FFA8CF7D27F827F827F82752FFA8CF527D2727F827F827
%F82752CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8FFFFFFA8CFA8FFA8CFA8FF
%A8CFA8FFA8CF52277D52277D52522727275227522752F852275227522727
%27525252F87D277DA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8FD04FFCAFFCFFF
%CAFFCFFFCAFFCFFF7DFD0427CFCFFFCAA8272720272727207DCFFFA82752
%27202727272027277D7DA8CFFFCAFFCFFFCAFFCFFFCAFFCFFD05FFCAFFCF
%FFCAFFCFFFCAFFCFFFCAFF27275227277D527D2752FD057D27FD057D5227
%7D7D7D20522727CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFD04FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FF2727F82752FFA8CF2727F827F827F827F8CFA87DF8
%27F827F827F827F827F827A8FFA8FFA8FFA8FFA8FFA8FFA8FFCAFFFFFFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8F8A85252A8CFA87D27CFA8FFA8FF27
%A8A8CFA8FF277DA8FFA1277D277DCFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCA
%FFFFCFFFCFFFA8FFCFFFA8FFCFFFA8FFCFA8F8272752A8FFA827F8272727
%F82727277DFF2727F8272727F8272727F827A8FFA8FFCFFFA8FFCFFFA8FF
%CFFFA8FFFFFFCFFFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA87D27CF277DCFFF
%A827A8FFA8FFA827A8FFCFFF7D27A8FFA827524C52FFCFFFA8FFCFFFA8FF
%CFFFA8FFCFFFA8FD04FFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA87DF827F8A8
%A87DF827F827F827F827F827F827F827F827F827F827F8277DFFA8CFA8FF
%A8CFA8FFA8CFA8FFA8CFA8FFFFFFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CF
%A852277DF87DA8CF2752A8CFA8A827A8A8FFA82752FFA852272727CFA8FF
%A8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFFFCFFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCA7D27277DA8272720272727202727272027272720272727202727
%2752FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFFFFFCFFFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFCAFFCF52277D27A8CACA27A8CAFFA827A8FFCF7D27FFCF
%52202752FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFD04FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA87DF8527D27F827F827F827F827F827F827F8
%27F827F827F82752CFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFFFFFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA852F827F852522727522752F8
%272752F8275252F82752FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8
%FD04FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA87D2752FD0427F8272727
%F8272727F8272727F82727277DFFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FF
%CFFD05FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFA8FD0427525227
%A87D52A87DF8522727F8527DFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8
%FFCFFD04FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8A82727F827F8
%27F827F827F827F827F827F827F852A1CFA8FFA8CFA8FFA8CFA8FFA8CFA8
%FFA8CFA8FFA8FFFFFFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8
%CF7D52F827F827527D277D2727F827277DA8FFA8CFA8FFA8CFA8FFA8CFA8
%FFA8CFA8FFA8CFA8FFA8FD04FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFF7D522727202727272027272720FD0427A8CFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFD05FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFA85252272720272727527DA7FFCAFFCFFFCAFFCFFFCAFF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFD04FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8CFA8A85227F827F827F827F827277D7DFFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCAFFFFFFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFFD05A8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCAFFFFCFFFCFFFA8FFCFFFA8
%FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFA8A8FD057DA8A8FFA8FFCFFFA8
%FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFFFFFCFFFCFFFA8FFCF
%FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCAFFA8FFCFFFA8FFCFFFA8
%FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FD04FFA8FFA8
%CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8CFA8A8A8CAA8CAA8CFA8CFA8
%CFA8A8A8CAA8A8A8CFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFFF
%FFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8CFFD06A8A7A8A8A8
%A7FD04A8CAA8A8A8CFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFFF
%CFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFA8CFA8CFA8A8A8CAFD0BA8CA
%A8A8A8FFA8CFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFFFFFCFFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFA8FFA8CFA8CFA8A8A8CAFD0BA8CAA8A8A8FF
%A8CFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFD04FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8CAA8CFA8A8A7A8A8A87DA87DA87DA87DA77DA87DA87DFD
%08A8CFA8CFA8FFA8FFA8FFA8FFA8FFA8CFA8FFFFFFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8CAA8CFA8A8A7A8A8A87DA87DA87DA87DA77DA87DA87DFD08
%A8CFA8CFA8FFA8FFA8FFA8FFA8FFA8CFA8FD04FFA8FFCFFFA8FFCFFFA8FF
%CFFFA8FFA8CFA8CFFD06A8A7A8A7A87DA8A7A8A1FD08A8CFA8CFA8FFCFFF
%A8FFCFFFA8FFCFFFA8FFCFFD05FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFA8CF
%A8CFFD06A8A7A8A7A87DA8A7A8A1FD08A8CFA8CFA8FFCFFFA8FFCFFFA8FF
%CFFFA8FFCFFD04FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8CFFD06
%A8A7A8A7A8A7A8A7A8A7FD08A8CFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FF
%A8FFFFFFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8CFFD06A8A7A8A7
%A8A7A8A7A8A7FD08A8CFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8FD04FF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFD
%05FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF
%CFFD04FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8CFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFCAFFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8CFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFCAFFFFCFFFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCF
%FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8
%FFCFFFA8FFCFFFA8FFCFFFA8FFFFFFCFFFCFFFA8FFCFFFA8FFCFFFA8FFCF
%FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8
%FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FD04FFA8FFA8CFA8FFA8CFA8FFA8
%CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8
%FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFFFFFA8FFA8CFA8FFA8
%CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8
%FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFFFCFFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFFFFF
%CFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFD04FFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FF
%A8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CF
%A8FFA8CFA8FFFFFFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FF
%A8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CF
%A8FFA8CFA8FFA8CFA8FD04FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFCFFD05FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFFCFFDFCFFFD08FFCAFFA8FFCAFFA8FFCAFFA8
%FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCA
%FFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCFFFFFFFCAFFA8FFCAFFA8
%FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCA
%FFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCFFFFFCFFFCFFF
%A8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FF
%CFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFFFFF
%CFFFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FF
%CFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFF
%A8FD04FFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FF
%A8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CF
%A8FFA8CFA8FFFFFFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FF
%A8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CF
%A8FFA8CFA8FFA8CFA8FFFFCFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFFCAFFFFFFCFFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFD04FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFFFFFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FD04FFA8FFCF
%FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8
%FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFD05FFA8
%FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCF
%FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFD04
%FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8
%CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8
%FFA8FFFFFFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8
%CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8
%FFA8CFA8FFA8FD04FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FFCAFFCFFFCAFFCFFD05FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFD04FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFCAFFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCAFFFFCFFFCFFFA8FFCFFFA8FF
%CFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFF
%A8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFFFFFCFFFCFFFA8FF
%CFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFF
%A8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FD04FFA8FF
%A8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CF
%A8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FF
%FFFFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CF
%A8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FF
%A8CFA8FFFFCFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FFCAFFCFFFCAFFFFFFCFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FFCAFFCFFFCAFFCFFFCAFD04FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FD04FFA8FFCFFFA8FFCFFFA8
%FFCFFFA8FFCFFFA8FFCFFFA8FFCFFF7DA8A85252A827FD04A8FFA8FFCFFF
%A8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFD05FFA8FFCFFFA8FFCFFF
%A8FFCFFFA8FFCFFFA8FFCFFFA8FFA8A87D7D525227FD04527DA8FFA8FFCF
%FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFD04FFA8CFA8FFA8CFA8
%FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FF7D52A87D2052A85227A87D52A8
%CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8FFFFFFA8CFA8
%FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA87D5227F827F827F827F827F8
%27F82727527DCFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8FD04
%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFA8A8CAA87DA8CACFA8FFA8
%FFA8FFA8FFCFA87DCFCFCFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FD05FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF7D2720272752272752
%FF7D27A87DFD04272027277DA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF
%CFFD04FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CF7D52A87DF8277DA8
%F8272752A8522727F8A8522727A87DA7A8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFCAFFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA87DF827F827
%F8272727F8272727F8272727F8272027F827F82758FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFCAFFFFCFFFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FF7D
%27A87D272727FF2727F82727CFFD042752FF272721A87D7DA8FFCFFFA8FF
%CFFFA8FFCFFFA8FFCFFFA8FFFFFFCFFFCFFFA8FFCFFFA8FFCFFFA8FFCFFF
%A8522727F8277DA85227527D597D5227527D7D7D27277DA852FD0427A8CF
%FFA8FFCFFFA8FFCFFFA8FFCFFFA8FD04FFA8FFA8CFA8FFA8CFA8FFA8CFA8
%FFA8CF7D277D7DF827F87D7D27F827F827A852F827F8277D7DF827F8A852
%7DA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFFFFFA8FFA8CFA8FFA8CFA8
%FFA8CFA8FF7D27F87DF8277DFFA852F8A8A8CFA8A8F87DA8FFA8A8F852A8
%CF5227F827F8A8A8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFFFCFFFCFFFCAFF
%CFFFCAFFCFFFCAFFCFFFA7277DA820272727A87D2727202727A852272727
%2052A827202752FF27A8CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFFFFFCFFF
%CFFFCAFFCFFFCAFFCFFFCAFF7D2727A82727A8FFCFA8207DCFFFCAFFA827
%7DFFCFFFCA7D277DCAFF7D27275227A8CAFFCFFFCAFFCFFFCAFFCFFFCAFD
%04FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA827F8CF2727F82727A8F827F827
%F827A852F827F827F8A85227F82758A827CFA8FFA8FFA8FFA8FFA8FFA8FF
%A8CFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8CF7D2727A82727A8CFA8FF2727
%A8FFA8FFA8A8F87DA8FFA8CFA85220CFA8FF7D275252F8A8A8FFA8FFA8FF
%A8FFA8FFA8CFA8FD04FFA8FFCFFFA8FFCFFFA8FFCFFFA8FF7DA8A8A87D7D
%7DA8A87D52FD047DFF7D7D587D7D7DA8CF7D7D7DA8CFA8A8FFCFFFA8FFCF
%FFA8FFCFFFA8FFCFFD05FFA8FFCFFFA8FFCFFFA8FFA827F8A853277DFFCF
%FFA72752FFA8FFCFFFA8277DFFA8FFCFFF7D277DFFA8FF5227522727A8A8
%FFCFFFA8FFCFFFA8FFCFFD04FFA8CFA8FFA8CFA8FFA8CFA8FFA8A8277DA8
%FD057DA8A87D7D7DA87D7DA8A87D7D7DA87D7DA8A87D7D527DA8527DFFA8
%CFA8FFA8CFA8FFA8CFA8FFA8FFFFFFA8CFA8FFA8CFA8FFA8CFA852F827F8
%27F827F8272727F827275227522752F827275227522727F8272727F827F8
%27F82727CFA8FFA8CFA8FFA8CFA8FFA8FD04FFCAFFCFFFCAFFCFFFCAFFCF
%FF522752A82027272720CF27272027272720A852272027272720A8522720
%2727CA2753CFFFCAFFCFFFCAFFCFFFCAFFCFFD05FFCAFFCFFFCAFFCFFFCA
%A8277DA85227FD057D2727527D527D527D5227277D527D527D52522752FD
%047D207D7D277DFFCFFFCAFFCFFFCAFFCFFD04FFA8FFA8FFA8FFA8FFA8FF
%A8FFA827F8A85227F827F852A827F827F827F8277D53F827F827F8277D7D
%F827F8277D7DF8A8A8FFA8FFA8FFA8FFA8FFA8FFCAFFFFFFA8FFA8FFA8FF
%A8FFA8CF2727A8CAF852A8CFA8FFA82752FFA8CFA8FFA8FFF87DA8CFA8FF
%A8CF7D277DCFA8FFA85227CF2727A8FFA8FFA8FFA8FFA8FFCAFFFFCFFFCF
%FFA8FFCFFFA8FFCFFFA87D2727A8522727F82752A8F8272727F82727A852
%272727F827277D7D272727F87DA8277DFFCFFFA8FFCFFFA8FFCFFFA8FFFF
%FFCFFFCFFFA8FFCFFFA8FF7D277DFF7D277DFFCFFFA8A8277DA8FFCFFFA8
%FFA82752FFCFFFA8FFCFCFF87DCFFFA8FF7D277DA827A8A8FFCFFFA8FFCF
%FFA8FD04FFA8FFA8CFA8FFA8CFA8FFA8CF522752A8F827F827F87D7D27F8
%27F827F8277D52F827F827F82752A8F827F82727A8F852A8FFA8CFA8FFA8
%CFA8FFA8CFA8FFFFFFA8FFA8CFA8FFA8CFA852F8A8A85227CFA8FFA8CF7D
%277DCFA8FFA8CFA8CFF852A8FFA8CFA8FFA85227FFA8CFA8A8F852A82752
%CFA8FFA8CFA8FFA8CFA8FFFFCFFFCFFFCAFFCFFFCAFFCFFFA852277D7D27
%272720277DA820272727202727A85227272720272752A82727272027A852
%27FFCFFFCAFFCFFFCAFFCFFFCAFFFFFFCFFFCFFFCAFFCFFFCAFF2752CAFF
%277DCAFFCFFFCA7D27A8CAFFCFFFCAFFCA2752FFCFFFCAFFCFFF5227A8FF
%CAFFCF5227FF5227A8FFCFFFCAFFCFFFCAFD04FFA8FFA8FFA8FFA8FFA8FF
%A8A8F8277D7DF827F827F8A87D27F827F827F8277D52F827F827F82727A8
%2727F827F8A85227A8FFA8FFA8FFA8FFA8FFA8CFA8FFFFFFA8FFA8FFA8FF
%A8CFA72752CF7D277DCFA8FFA8CF5227A8CFA8FFA8FFA8FFF852A8FFA8FF
%A8FFA87DF8A8A8FFA8FF5227A87DF8A8A8FFA8FFA8FFA8CFA8FD04FFA8FF
%CFFFA8FFCFFFA8FFA727F8A87D27F82727277D7D2727F8272727F8A85227
%F8272727F827A827F82727277D7D27A8A8FFCFFFA8FFCFFFA8FFCFFD05FF
%A8FFCFFFA8FFCFA8F8A8CFA8F8A8CFFFA8FFCF52F8FFCFFFA8FFCFFFA827
%52FFA8FFCFFFA8FF7D27A7FFCFFFA87D27A87D277DFFA8FFCFFFA8FFCFFD
%04FFA8CFA8FFA8CFA8FFA8CFA8A87D7DA8A8FD057DA8FD087DA8A8FD077D
%CFFD057DA8A77DA8CFA8FFA8CFA8FFA8CFA8FFA8FFFFFFA8CFA8FFA8CFA8
%FF7D272752272727522752275227272752275227522752F8272752275227
%522727F82727522752FD0427F87DA8CFA8FFA8CFA8FFA8FD04FFCAFFCFFF
%CAFFCFFFCAFFA87D7DCFA87D7DA87D7DA8A87DA87DA87DA77DFFA87D7DA8
%7DA87DA8CAA87DA87D7DA8CF7DCFCAFFCFFFCAFFCFFFCAFFCFFD05FFCAFF
%CFFFCAFFCFA82052525220FD06522720FD08522727FD0752272727FD0552
%275227277DFFCAFFCFFFCAFFCFFD04FFA8FFA8FFA8FFA8FFA8FFA8A8F827
%7D7DF827F827F87D5227F827F827F8277D52F827F827F827F8CAF827F827
%F87D52277DCFA8FFA8FFA8FFA8FFA8FFCAFFFFFFA8FFA8FFA8FFA8FF7D27
%7DFF7D277DFFA8FFA8FF5227A8FFA8FFA8FFA8CFF87DA8FFA8FFA8FFA87D
%F8A8A8FFA8CF7D27A8A7F8A8A8FFA8FFA8FFA8FFCAFFFFCFFFCFFFA8FFCF
%FFA8FFCFFFA827277D7D272727F8277D7DF8272727F82727A852272727F8
%272752A8272727F827A77DF8CFCFFFA8FFCFFFA8FFCFFFA8FFFFFFCFFFCF
%FFA8FFCFFFA8A8277DA8A8277DA8FFCFFFA87D27FFA8FFCFFFA8FFCA2752
%FFCFFFA8FFCFFF5227A8FFA8FFCF7DF8FF7D27A8FFCFFFA8FFCFFFA8FD04
%FFA8FFA8CFA8FFA8CFA8FFA8CF272752A7F827F827F87D7D27F827F827F8
%277D52F827F827F82752A8F827F827F8A82827A8FFA8CFA8FFA8CFA8FFA8
%CFA8FFFFFFA8FFA8CFA8FFA8CFA8272ECFA82752CFA8FFA8CF5227A8CFA8
%FFA8CFA8CFF852A8FFA8CFA8FFA852F8CFA8CFA8FF2727A852F8CFA8FFA8
%CFA8FFA8CFA8FFFFCFFFCFFFCAFFCFFFCAFFCFFFCA7D2752A82727272027
%7DA820272727202727A8522727272027277DA72727272052A82752FFCFFF
%CAFFCFFFCAFFCFFFCAFFFFFFCFFFCFFFCAFFCFFFCAFF5227A8FF5227CAFF
%CFFFCAA827A8CAFFCFFFCAFFCA2752FFCFFFCAFFCFFF2752CFFFCAFFA827
%52FF2753CAFFCFFFCAFFCFFFCAFD04FFA8FFA8FFA8FFA8FFA8FFA8CF7D27
%27A82727F827F87DA127F827F827F8277D52F827F827F8277D7DF827F827
%52A8F87DA8FFA8FFA8FFA8FFA8FFA8CFA8FFFFFFA8FFA8FFA8FFA8FFA8A8
%F87DA87DF8A8A8FFA8CF7D277DCFA8FFA8FFA8FFF852A8FFA8FFA8FFA827
%52FFA8FFA87DF8A87D277DCFA8FFA8FFA8FFA8CFA8FD04FFA8FFCFFFA8FF
%CFFFA8FFCFA8F827A87DF8FD0427CF2727F8272727F8A85227F8272727F8
%A87D27F82727A87D27A8FFA8FFCFFFA8FFCFFFA8FFCFFD05FFA8FFCFFFA8
%FFCFFFA82727FFA82752FFA8FFCFFFF87DCFFFA8FFCFFFA82752FFA8FFCF
%FFA8A827A7A8FFCFFF2752A82727FFCFFFA8FFCFFFA8FFCFFD04FFA8CFA8
%FFA8CFA8FFA8CFA8FFA852F8537D27F827F827A752F827F827F8277D52F8
%27F827F827A152F827F827A82752FFA8CFA8FFA8CFA8FFA8CFA8FFA8FFFF
%FFA8CFA8FFA8CFA8FFA8CF7D2752A82727527D527D5227F8FD0752F827FD
%06522727527D527D5227527DF87DA8FFA8CFA8FFA8CFA8FFA8FD04FFCAFF
%CFFFCAFFCFFFCAFFCFFFA8527DFF7DA77DA77DFFA8A87DA87DA87DFFA8A8
%7DA87DA87DFFA7837D7D7DCF52A8CFFFCAFFCFFFCAFFCFFFCAFFCFFD05FF
%CAFFCFFFCAFFCFFFCAFF52FD052720272752272727522E52525227272752
%2E52525227272752FD072752CAFFCFFFCAFFCFFFCAFFCFFD04FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8CFA8A8A8FFFD057DA8527D527D527DA87D527D527D
%52A8A8FD047DFF7DA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFCAFFFFFFA8FFA8
%FFA8FFA8FFA8FFA8A8F827A77DF87DA8FFA8A8F87DA8FFA8FFA8A8F87DA8
%FFA8FFA87DF87DA8FFA852F87D2727A8CFA8FFA8FFA8FFA8FFA8FFCAFFFF
%CFFFCFFFA8FFCFFFA8FFCFFFA8FFCFFF2727A852F8272752A8272727F827
%27A8FD0427F827A87DF827277D7D27A8FFA8FFCFFFA8FFCFFFA8FFCFFFA8
%FFFFFFCFFFCFFFA8FFCFFFA8FFCFFFA8A82752A85227A8A8FFCF52F8FFCF
%FFA8FFA8277DFFCFFFA8FF2727A8FFCF7DF85252277DFFCFFFA8FFCFFFA8
%FFCFFFA8FD04FFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8A8F87DA827F827F8
%A85227F827F827A752F827F82727A82027F852A8277DFFA8CFA8FFA8CFA8
%FFA8CFA8FFA8CFA8FFFFFFA8FFA8CFA8FFA8CFA8FFA8CFA8A8F8527D27F8
%A8A8FF7D2752FFA8CFA8A8F87DA8FFA8CF52277DCFA87DF82727277DCFA8
%FFA8CFA8FFA8CFA8FFA8CFA8FFFFCFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAA827A87D2727277DA82727202727CF5227272720A87D272027A87D7DFF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFFFFFCFFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFA82027522727A8CFFF5227A8FFCAFFA8277DFFCFFFA82752FFCA7D
%27272027A7FFCAFFCFFFCAFFCFFFCAFFCFFFCAFD04FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA87D27A85227F827A852F827F827A827F827F852A827
%F827A17D7DCFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFFFFFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8A8FD0427F87D7D7DF8527D7D5252F852527D7D
%27F87D7D52F827F852A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FD04FFA8
%FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8A852A85227277D7DFD0427FF2727
%2027A87DF827A8A87DFFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFD05FF
%A8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFF7D272727F8272727F82727522127
%2752F8272727F8FD04277DCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFD04
%FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8A87DCF7DA87DCFA7A8A8
%CAA8CFA8A8A8FF7D7DA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8
%FFA8FFFFFFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA87D2727F82727
%27F852A87DF8A87D27F827F827F82752A8A8FFA8CFA8FFA8CFA8FFA8CFA8
%FFA8CFA8FFA8FD04FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA
%FFCF7D52FF522752CF2752A8A852FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FFCAFFCFFFCAFFCFFD05FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FF7D7D272720FD07272027272752A8A8FFCAFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFD04FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA87D7DCF2E527D527DFF7DCFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFCAFFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8CFA8CF7D7DFD04522752527D7DA8A8CFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFCAFFFFCFFFCFFFA8FFCFFFA8FFCFFFA8FFCF
%FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFA8FFA8FFCFFFA8FFCFFFA8FFCFFFA8
%FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFFFFFCFFFCFFFA8FFCFFFA8FFCF
%FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCAFFA8FFCFFFA8FFCFFFA8
%FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FD04FFA8FFA8CFA8FFA8
%CFA8FFA8CFA8FFA8CFA8FFA8CFA8CFA8CAA8CFA8A8A8CFA8A8A8CAA8A8A8
%CFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFFFFFA8FFA8
%CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8CFA8CAA8CFA8A8A8CFA8A8A8
%CAA8A8A8CFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFFF
%CFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFA8FFA8FFA8CAA8CFFD0BA8CF
%A8CFA8FFA8FFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFFFFFCFFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFA8FFA8FFA8FFA8CAA8CFFD0BA8CFA8CFA8FF
%A8FFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFD04FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8CFA8CFFD06A87DA87DA87DA87DA87DA8A1A8A1FD08A8CF
%A8CFA8FFA8FFA8FFA8FFA8FFA8CFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8CFA8CFFD06A87DA87DA87DA87DA87DA8A1A8A1FD08A8CFA8CFA8FF
%A8FFA8FFA8FFA8FFA8CFA8FD04FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFA8CF
%A8CFFD06A8A7A8A7A87DA8A1A87DFD08A8CFA8CFA8FFCFFFA8FFCFFFA8FF
%CFFFA8FFCFFD05FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFA8CFA8CFFD06A8A7
%A8A7A87DA8A1A87DFD08A8CFA8CFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFD
%04FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8CFFD06A8A7A8A7A87DA8A7A87D
%A8A7A8A1A8A7A8A7FD04A8CFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8FF
%FFFFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8CFFD06A8A7A8A7A87DA8A7A87D
%A8A7A8A1A8A7A8A7FD04A8CFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8FD
%04FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCAFFA8FFA8CFA8FFA8CF
%A8CFA8CFA8FFA8CFA8FFA8FFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF
%CFFD05FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCAFFA8FFA8CFA8FF
%A8CFA8CFA8CFA8FFA8CFA8FFA8FFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFD04FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFCAFFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFCAFFFFCFFFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8
%FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCF
%FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFFFFFCFFFCFFFA8FFCFFFA8FFCFFFA8
%FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCF
%FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FD04FFA8FFA8CFA8FFA8CFA8
%FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8
%CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFFFFFA8FFA8CFA8
%FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8
%CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFFFCFFF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF
%FFFFCFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF
%CFFFCAFD04FFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CF
%A8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FF
%A8CFA8FFA8CFA8FFFFFFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CF
%A8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FF
%A8CFA8FFA8CFA8FFA8CFA8FD04FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFFCFFD05FFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFD81FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">1000_1000</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2013-07-01T22:55:25+04:00</xmp:MetadataDate>
         <xmp:ModifyDate>2013-07-01T22:55:25+04:00</xmp:ModifyDate>
         <xmp:CreateDate>2013-07-01T22:55:25+04:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9PXNzLHLxWlKDtkJSIKQ&#xA;FL67P4j7sjxlNO+uz+I+7HjK0767P4j7seMrTvrs/iPux4ytO+uz+I+7HjK0767P4j7seMrTvrs/&#xA;iPux4ytO+uz+I+7HjK0767P4j7seMrTvrs/iPux4ytO+uz+I+7HjK0767P4j7seMrTvrs/iPux4y&#xA;tO+uz+I+7HjK0q21zLJLxalKHtkoyJKCHXNzLHLxWlKDtjKRBUBS+uz+I+7I8ZTTvrs/iPux4ytO&#xA;+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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:2B3050C37FE2E211B26DD50D97C8EAE3</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:2B3050C37FE2E211B26DD50D97C8EAE3</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:D6A4487C44E2E211B26DD50D97C8EAE3</stRef:instanceID>
            <stRef:documentID>xmp.did:D6A4487C44E2E211B26DD50D97C8EAE3</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:45F024ADAEFDE111A762E6726BF76652</stEvt:instanceID>
                  <stEvt:when>2012-09-13T18:29:23+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5D189CE7DB70E211B10191B735343B2E</stEvt:instanceID>
                  <stEvt:when>2013-02-07T08:07:36+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D6A4487C44E2E211B26DD50D97C8EAE3</stEvt:instanceID>
                  <stEvt:when>2013-07-01T22:55:04+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2B3050C37FE2E211B26DD50D97C8EAE3</stEvt:instanceID>
                  <stEvt:when>2013-07-01T22:55:25+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1000.000000</stDim:w>
            <stDim:h>1000.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Группа образцов по умолчанию</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Белый</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Черный</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK красный</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK желтый</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK зеленый</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK голубой</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK синий</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK пурпурный</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=15 M=100 Y=90 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>14.999998</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>90.000004</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=90 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>90.000004</xmpG:magenta>
                           <xmpG:yellow>84.999996</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=80 Y=95 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>80.000001</xmpG:magenta>
                           <xmpG:yellow>94.999999</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=50 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=35 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>35.000002</xmpG:magenta>
                           <xmpG:yellow>84.999996</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=5 M=0 Y=90 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>5.000001</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>90.000004</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=20 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>19.999999</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=10 Y=100 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>84.999996</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=90 M=30 Y=95 K=30</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>90.000004</xmpG:cyan>
                           <xmpG:magenta>30.000001</xmpG:magenta>
                           <xmpG:yellow>94.999999</xmpG:yellow>
                           <xmpG:black>30.000001</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=75 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=80 M=10 Y=45 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>80.000001</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>44.999999</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=70 M=15 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>69.999999</xmpG:cyan>
                           <xmpG:magenta>14.999998</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=50 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>84.999996</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=95 Y=5 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>94.999999</xmpG:magenta>
                           <xmpG:yellow>5.000001</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=100 Y=25 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>25.000000</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=100 Y=35 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000002</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>35.000002</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=10 M=100 Y=50 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>10.000002</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=95 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>94.999999</xmpG:magenta>
                           <xmpG:yellow>19.999999</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=25 Y=40 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>25.000000</xmpG:magenta>
                           <xmpG:yellow>39.999998</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=45 Y=50 K=5</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999998</xmpG:cyan>
                           <xmpG:magenta>44.999999</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>5.000001</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=50 Y=60 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>60.000002</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=55 M=60 Y=65 K=40</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>55.000001</xmpG:cyan>
                           <xmpG:magenta>60.000002</xmpG:magenta>
                           <xmpG:yellow>64.999998</xmpG:yellow>
                           <xmpG:black>39.999998</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=40 Y=65 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>39.999998</xmpG:magenta>
                           <xmpG:yellow>64.999998</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=30 M=50 Y=75 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>30.000001</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=60 Y=80 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000002</xmpG:cyan>
                           <xmpG:magenta>60.000002</xmpG:magenta>
                           <xmpG:yellow>80.000001</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=65 Y=90 K=35</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999998</xmpG:cyan>
                           <xmpG:magenta>64.999998</xmpG:magenta>
                           <xmpG:yellow>90.000004</xmpG:yellow>
                           <xmpG:black>35.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=70 Y=100 K=50</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999998</xmpG:cyan>
                           <xmpG:magenta>69.999999</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>50.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=70 Y=80 K=70</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>69.999999</xmpG:magenta>
                           <xmpG:yellow>80.000001</xmpG:yellow>
                           <xmpG:black>69.999999</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Оттенки серого</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=90</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>89.999402</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=80</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>79.998797</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=70</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>69.999701</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=60</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>59.999102</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=50</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>50.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=40</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>39.999402</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=30</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>29.998803</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=20</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>19.999701</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>9.999102</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=5</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>4.998803</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Яркие тона</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=100 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=75 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>75.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=10 Y=95 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>94.999999</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=10 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>84.999996</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=90 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>90.000004</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=60 M=90 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>60.000002</xmpG:cyan>
                           <xmpG:magenta>90.000004</xmpG:magenta>
                           <xmpG:yellow>0.003099</xmpG:yellow>
                           <xmpG:black>0.003099</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1000 li
1000 1000 li
1000 0 li
cp
clp
[1 0 0 1 0 0 ]ct
1e3 1e3 mo
0 1e3 li
0 0 li
1e3 0 li
1e3 1e3 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
10.0001 510 mo
10.0001 990 li
490 990 li
490 510 li
10.0001 510 li
.05 .05 .1 0 cmyk
f
490 10.0001 mo
10.0001 10.0001 li
10.0001 490 li
490 490 li
490 10.0001 li
f
510 990 mo
990 990 li
990 510 li
510 510 li
510 990 li
f
510 10.0001 mo
510 490 li
990 490 li
990 10.0001 li
510 10.0001 li
f
249.999 950.192 mo
170.681 950.192 106.381 937.015 106.381 920.759 cv
106.381 904.502 170.681 891.323 249.999 891.323 cv
329.317 891.323 393.617 904.502 393.617 920.759 cv
393.617 937.015 329.317 950.192 249.999 950.192 cv
level3{
gsave
clp
[143.617 0 0 29.4347 249.999 920.758 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~%1O4O%1O4N%1O4M%1O4K%1O4J%1O4I%1O4H%1O4F%1O4E%1O4D%1O4C%1O4A%1O4@%1O4?%1O4=%1O4<
%1O4;%1O4:%1O48%1O47%1O46%1O45%1O43%1O42%1O41%1O40%1O4.%1O4-%1O4,%1O4+%1O4)%1O4(
%1O4'%1O4&%1O4$%1O4#%1O4"%1O4!%1O3t%1O3s%1O3r%1O3q%1O3o%1O3n%1O3m%1O3l%1O3j%1O3i
%1O3h%1O3g%1O3e%1O3d%1O3c%1O3b%1O3`%1O3_%1O3^%1O3]%1O3[%1O3Z%1O3Y%1O3X%1O3V%1O3U
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[143.617 0 0 29.4347 249.999 920.758 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
12 12 25 <~:/4PZ:/+GW9h\5R91hfK8kDTG8OuBC84Q0>7R]a7779O36pj=/6UF+*5sR\#5X.It5<_7o4Zkhh4?GVd
4$,Ja3]]8]3&iiU2`EWQ2E!EM2)R3I1G^dA1,:R=0ek@90JG.5/hS_-/M/M)/1`;%.k<)!.4HYn-n$Gj
-RU8g-71&c,pX`\,9nEW+sJ3S+X&!O+<M[H*Zc@C*??.?*#oq;)]BV4)&X;/(`4)+(Ddl'()7Pu'GM5p
',)#m&eYfi&J5Qc%hB0]%LrsY%1NaU$k*LO$47+I#mgnE#RC\A#6tG;"U,&5"9\i1!s8W-!WiB'!!!!!
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
342.727 646.362 mo
349.68 654.685 355.811 663.913 360.957 673.817 cv
362.529 673.692 363.967 673.573 365.248 673.458 cv
366.857 673.306 368.301 673.147 369.541 672.981 cv
364.082 664.519 357.691 656.603 350.504 649.419 cv
343.516 642.429 335.834 636.187 327.609 630.825 cv
332.971 635.556 338.043 640.757 342.727 646.362 cv
cp
0 0 0 1 cmyk
f
220.807 615.474 mo
221.655 614.56 222.494 613.698 223.352 612.851 cv
217.082 614.942 210.913 617.659 204.979 620.981 cv
204.071 621.485 203.177 622.001 202.277 622.54 cv
206.054 622.784 210.162 623.001 214.486 623.19 cv
216.528 620.405 218.641 617.825 220.807 615.474 cv
cp
f
168.559 684.126 mo
161.804 683.876 155.645 683.595 150.209 683.296 cv
148.244 687.671 146.502 692.11 145.014 696.509 cv
139.729 712.091 136.82 728.55 136.387 745.452 cv
181.914 745.452 li
182.145 728.333 183.735 711.603 186.631 695.688 cv
187.267 692.157 188.018 688.501 188.871 684.753 cv
181.55 684.567 174.727 684.356 168.559 684.126 cv
cp
f
208.285 653.13 mo
205.325 660.147 202.693 667.806 200.443 675.938 cv
203.2 676.003 206.021 676.044 208.875 676.095 cv
222.328 676.319 236.398 676.44 250.737 676.454 cv
250.492 667.569 250.217 659.45 249.926 652.306 cv
249.64 645.292 249.317 638.815 248.963 633.034 cv
240.811 633.007 232.794 632.872 225.117 632.651 cv
223.07 632.587 221.064 632.522 219.105 632.448 cv
215.188 638.419 211.554 645.362 208.285 653.13 cv
cp
f
154.479 674.435 mo
158.996 674.665 163.823 674.872 168.904 675.062 cv
175.764 675.319 183.229 675.542 191.089 675.735 cv
193.583 666.39 196.547 657.612 199.922 649.608 cv
202.609 643.228 205.557 637.325 208.709 632.005 cv
206.072 631.868 203.564 631.716 201.181 631.567 cv
197.221 631.3 193.605 631.015 190.402 630.687 cv
182.582 636.778 175.372 643.983 168.932 652.116 cv
163.537 658.925 158.691 666.417 154.479 674.435 cv
cp
f
136.424 693.595 mo
137.641 690.009 139.038 686.349 140.587 682.687 cv
139.803 682.632 139.057 682.581 138.352 682.526 cv
132.699 682.079 128.494 681.626 125.585 681.12 cv
123.15 685.532 120.929 690.073 118.992 694.655 cv
112.178 710.782 108.443 727.868 107.9 745.452 cv
127.314 745.452 li
127.756 727.563 130.818 710.128 136.424 693.595 cv
cp
f
144.598 673.872 mo
149.457 664.001 155.243 654.79 161.813 646.491 cv
166.866 640.106 172.402 634.228 178.322 628.954 cv
177.543 628.769 176.848 628.589 176.244 628.401 cv
166.516 634.298 157.516 641.378 149.453 649.466 cv
142.39 656.524 136.068 664.323 130.652 672.687 cv
132.911 672.954 135.723 673.218 139.057 673.479 cv
140.748 673.614 142.593 673.743 144.598 673.872 cv
cp
f
181.914 754.521 mo
136.378 754.521 li
136.82 771.417 139.716 787.872 145.014 803.46 cv
146.502 807.843 148.244 812.288 150.204 816.673 cv
155.677 816.378 161.846 816.101 168.559 815.856 cv
174.879 815.616 181.697 815.409 188.871 815.229 cv
188.023 811.481 187.271 807.815 186.631 804.284 cv
183.735 788.374 182.145 771.644 181.914 754.521 cv
cp
f
247.989 619.517 mo
247.832 617.903 247.681 616.386 247.551 614.999 cv
247.533 614.942 li
246.598 608.677 li
239.977 610.692 233.559 615.05 227.479 621.628 cv
226.888 622.255 226.316 622.915 225.727 623.601 cv
233.07 623.8 240.613 623.923 248.35 623.96 cv
248.225 622.394 248.109 620.903 247.989 619.517 cv
cp
f
323.326 804.446 mo
322.576 807.974 321.713 811.606 320.75 815.257 cv
327.412 815.437 333.613 815.644 339.229 815.87 cv
345.254 816.12 350.727 816.396 355.508 816.69 cv
357.6 812.251 359.457 807.794 361.012 803.413 cv
366.59 787.858 369.646 771.417 370.117 754.521 cv
328.877 754.521 li
328.609 771.708 326.738 788.489 323.326 804.446 cv
cp
f
361.012 696.56 mo
359.443 692.165 357.6 687.718 355.508 683.286 cv
350.809 683.581 345.346 683.853 339.229 684.106 cv
333.648 684.329 327.436 684.536 320.75 684.726 cv
321.713 688.376 322.576 692.009 323.326 695.54 cv
326.738 711.493 328.609 728.269 328.877 745.452 cv
370.117 745.452 li
369.646 728.565 366.59 712.12 361.012 696.56 cv
cp
f
258.99 651.927 mo
259.308 659.585 259.58 667.827 259.806 676.454 cv
274.218 676.435 288.1 676.306 301.096 676.075 cv
303.688 676.038 306.209 675.987 308.693 675.938 cv
306.061 667.864 303 660.272 299.588 653.351 cv
295.715 645.501 291.387 638.47 286.707 632.431 cv
284.813 632.509 282.857 632.573 280.848 632.638 cv
273.66 632.858 266.006 632.987 258.054 633.034 cv
258.391 638.626 258.703 644.97 258.99 651.927 cv
cp
f
140.587 817.286 mo
139.038 813.626 137.641 809.964 136.424 806.378 cv
130.818 789.854 127.756 772.417 127.314 754.521 cv
107.9 754.521 li
108.443 772.118 112.178 789.194 118.992 805.327 cv
120.929 809.909 123.15 814.45 125.585 818.853 cv
128.49 818.354 132.689 817.89 138.352 817.456 cv
139.057 817.401 139.809 817.345 140.587 817.286 cv
cp
f
314.461 697.431 mo
313.58 693.272 312.553 689.081 311.4 684.946 cv
308.113 685.024 304.719 685.089 301.252 685.153 cv
288.339 685.38 274.476 685.499 260.027 685.532 cv
260.109 689.253 260.197 693.056 260.258 696.946 cv
260.539 712.405 260.682 728.722 260.705 745.452 cv
319.801 745.452 li
319.527 728.938 317.744 712.788 314.461 697.431 cv
cp
f
290.87 623.177 mo
294.365 623.015 297.629 622.835 300.625 622.642 cv
299.625 622.079 298.629 621.526 297.639 621.011 cv
292.604 618.341 287.436 616.063 282.133 614.177 cv
282.521 614.519 282.885 614.854 283.272 615.2 cv
285.867 617.608 288.422 620.29 290.87 623.177 cv
cp
f
260.258 803.04 mo
260.197 806.917 260.109 810.729 260.027 814.45 cv
274.194 814.474 288.063 814.603 301.252 814.829 cv
304.732 814.884 308.113 814.958 311.4 815.036 cv
312.553 810.892 313.58 806.71 314.461 802.552 cv
317.744 787.185 319.527 771.044 319.801 754.521 cv
260.705 754.521 li
260.682 771.251 260.539 787.567 260.258 803.04 cv
cp
f
307.721 649.341 mo
311.695 657.399 315.209 666.265 318.141 675.716 cv
325.826 675.522 332.783 675.292 338.854 675.038 cv
343.309 674.858 347.361 674.665 351.002 674.462 cv
346.576 666.478 341.469 658.999 335.766 652.181 cv
328.934 644.007 321.271 636.763 312.994 630.669 cv
310.275 630.978 307.066 631.272 303.451 631.53 cv
301.58 631.665 299.625 631.798 297.564 631.909 cv
301.201 637.188 304.613 643.034 307.721 649.341 cv
cp
f
283.272 884.776 mo
282.885 885.126 282.521 885.472 282.133 885.81 cv
287.422 883.919 292.604 881.642 297.639 878.981 cv
298.643 878.446 299.625 877.907 300.625 877.345 cv
297.611 877.146 294.352 876.966 290.889 876.81 cv
288.418 879.714 285.854 882.388 283.272 884.776 cv
cp
f
360.957 826.161 mo
355.816 836.054 349.689 845.294 342.727 853.62 cv
338.033 859.226 332.971 864.44 327.602 869.165 cv
335.82 863.8 343.516 857.552 350.504 850.567 cv
357.678 843.384 364.082 835.464 369.541 826.991 cv
368.301 826.833 366.857 826.677 365.248 826.524 cv
363.957 826.405 362.514 826.28 360.957 826.161 cv
cp
f
351.002 825.511 mo
347.361 825.317 343.299 825.114 338.873 824.935 cv
332.441 824.677 325.471 824.446 318.141 824.261 cv
315.209 833.702 311.705 842.573 307.721 850.642 cv
304.613 856.948 301.215 862.794 297.564 868.073 cv
299.611 868.188 301.58 868.317 303.438 868.446 cv
306.992 868.704 310.205 868.999 312.994 869.308 cv
321.271 863.218 328.934 855.976 335.762 847.802 cv
341.445 841.001 346.572 833.522 351.002 825.511 cv
cp
f
299.594 846.63 mo
303 839.714 306.061 832.116 308.693 824.044 cv
306.209 823.993 303.688 823.942 301.105 823.905 cv
288.025 823.671 274.148 823.542 259.806 823.519 cv
259.58 832.153 259.308 840.401 258.99 848.046 cv
258.703 855.007 258.391 861.356 258.054 866.958 cv
265.868 866.993 273.535 867.124 280.848 867.339 cv
282.857 867.405 284.813 867.474 286.707 867.548 cv
291.387 861.507 295.715 854.472 299.594 846.63 cv
cp
f
257.017 881.263 mo
256.237 888.354 li
256.339 888.368 li
256.025 890.378 li
255.965 890.784 li
263.291 888.565 270.396 884.315 277.108 878.114 cv
277.717 877.548 278.33 876.966 278.934 876.366 cv
272.125 876.173 264.924 876.058 257.449 876.026 cv
257.303 877.894 257.164 879.649 257.017 881.263 cv
cp
f
374.561 681.396 mo
372.557 681.774 369.803 682.134 366.088 682.489 cv
365.797 682.517 365.479 682.544 365.156 682.577 cv
366.766 686.19 368.246 689.851 369.555 693.499 cv
375.488 710.054 378.729 727.536 379.195 745.452 cv
392.1 745.452 li
391.561 727.858 387.82 710.769 380.992 694.624 cv
379.088 690.118 376.936 685.675 374.561 681.396 cv
cp
f
369.555 806.47 mo
368.254 810.079 366.779 813.755 365.146 817.409 cv
365.479 817.438 365.797 817.466 366.088 817.503 cv
369.803 817.849 372.557 818.194 374.561 818.581 cv
376.945 814.267 379.111 809.821 380.992 805.358 cv
387.82 789.214 391.561 772.118 392.1 754.521 cv
379.195 754.521 li
378.729 772.446 375.488 789.915 369.555 806.47 cv
cp
f
214.486 876.79 mo
210.24 876.972 206.146 877.196 202.277 877.44 cv
203.177 877.979 204.071 878.507 204.979 879.009 cv
210.913 882.323 217.068 885.038 223.352 887.142 cv
222.494 886.298 221.655 885.421 220.807 884.513 cv
218.686 882.222 216.561 879.626 214.486 876.79 cv
cp
f
161.813 853.491 mo
155.243 845.183 149.453 835.979 144.598 826.11 cv
142.593 826.239 140.734 826.368 139.057 826.501 cv
135.732 826.755 132.925 827.026 130.652 827.294 cv
136.055 835.644 142.376 843.444 149.453 850.521 cv
157.525 858.603 166.539 865.688 176.244 871.585 cv
176.848 871.392 177.543 871.208 178.322 871.028 cv
172.402 865.763 166.866 859.88 161.813 853.491 cv
cp
f
227.479 878.354 mo
233.578 884.97 240.023 889.317 246.656 891.323 cv
246.966 889.673 li
247.621 884.237 li
247.73 883.056 247.865 881.798 247.989 880.46 cv
248.109 879.073 248.225 877.593 248.35 876.026 cv
240.645 876.058 233.043 876.183 225.727 876.39 cv
226.316 877.067 226.888 877.722 227.479 878.354 cv
cp
f
199.922 850.374 mo
196.547 842.37 193.583 833.587 191.089 824.247 cv
183.302 824.433 175.838 824.657 168.904 824.915 cv
163.713 825.11 158.877 825.317 154.479 825.538 cv
158.678 833.55 163.537 841.042 168.932 847.853 cv
175.372 855.989 182.582 863.204 190.402 869.294 cv
193.574 868.985 197.197 868.69 201.181 868.423 cv
203.568 868.267 206.086 868.124 208.709 867.985 cv
205.557 862.655 202.609 856.755 199.922 850.374 cv
cp
f
250.963 685.532 mo
236.578 685.509 222.384 685.384 208.736 685.173 cv
205.127 685.099 201.596 685.034 198.138 684.96 cv
197.156 689.124 196.289 693.269 195.547 697.315 cv
192.758 712.649 191.223 728.837 190.982 745.452 cv
251.641 745.452 li
251.613 728.606 251.465 712.364 251.193 697.099 cv
251.125 693.157 251.046 689.304 250.963 685.532 cv
cp
f
257.017 618.687 mo
257.164 620.333 257.303 622.089 257.449 623.96 cv
264.9 623.929 272.105 623.813 278.934 623.62 cv
278.33 623.024 277.717 622.435 277.108 621.872 cv
270.373 615.661 263.259 611.397 255.914 609.181 cv
256.246 611.286 li
257.017 618.687 li
cp
f
195.547 802.667 mo
196.289 806.71 197.156 810.858 198.138 815.013 cv
201.596 814.944 205.127 814.88 208.736 814.81 cv
222.342 814.599 236.537 814.474 250.963 814.45 cv
251.046 810.679 251.125 806.815 251.193 802.878 cv
251.465 787.595 251.613 771.349 251.641 754.521 cv
190.982 754.521 li
191.223 771.136 192.758 787.323 195.547 802.667 cv
cp
f
200.443 824.04 mo
202.693 832.167 205.325 839.845 208.285 846.86 cv
211.54 854.587 215.188 861.54 219.105 867.524 cv
221.07 867.45 223.07 867.396 225.117 867.331 cv
232.808 867.114 240.834 866.985 248.963 866.958 cv
249.317 861.161 249.64 854.688 249.926 847.673 cv
250.217 840.54 250.492 832.421 250.737 823.519 cv
236.523 823.542 222.457 823.661 208.875 823.888 cv
206.021 823.938 203.2 823.979 200.443 824.04 cv
cp
f
750.001 447.452 mo
670.684 447.452 606.383 434.274 606.383 418.017 cv
606.383 401.761 670.684 388.583 750.001 388.583 cv
829.318 388.583 893.619 401.761 893.619 418.017 cv
893.619 434.274 829.318 447.452 750.001 447.452 cv
level3{
gsave
clp
[143.618 0 0 29.4347 750.001 418.017 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[143.618 0 0 29.4347 750.001 418.017 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
653.437 309.385 mo
652.752 309.438 652.088 309.484 651.467 309.535 cv
646.468 309.922 642.759 310.33 640.195 310.771 cv
638.046 306.886 636.089 302.875 634.378 298.83 cv
628.363 284.591 625.069 269.519 624.589 253.992 cv
641.721 253.992 li
642.112 269.787 644.814 285.172 649.762 299.757 cv
650.839 302.928 652.071 306.158 653.437 309.385 cv
cp
875.411 245.988 mo
864.023 245.988 li
863.613 230.172 860.752 214.75 855.518 200.136 cv
854.364 196.918 853.057 193.686 851.638 190.491 cv
851.919 190.469 852.201 190.442 852.46 190.418 cv
855.735 190.104 858.167 189.789 859.938 189.451 cv
862.031 193.228 863.934 197.152 865.611 201.128 cv
871.637 215.379 874.937 230.459 875.411 245.988 cv
cp
875.411 253.992 mo
874.937 269.521 871.637 284.609 865.611 298.856 cv
863.952 302.796 862.037 306.717 859.938 310.529 cv
858.167 310.188 855.735 309.88 852.46 309.572 cv
852.201 309.543 851.919 309.517 851.627 309.494 cv
853.069 306.267 854.369 303.028 855.518 299.843 cv
860.752 285.229 863.613 269.812 864.023 253.992 cv
875.411 253.992 li
cp
831.84 341.454 mo
837.982 334.101 843.391 325.95 847.927 317.216 cv
849.304 317.324 850.576 317.434 851.715 317.538 cv
853.133 317.674 854.411 317.813 855.507 317.955 cv
850.688 325.429 845.034 332.419 838.702 338.759 cv
832.536 344.925 825.744 350.438 818.487 355.169 cv
823.23 351 827.695 346.401 831.84 341.454 cv
cp
779.364 368.95 mo
781.646 366.842 783.906 364.483 786.088 361.919 cv
789.146 362.058 792.019 362.215 794.681 362.396 cv
793.801 362.887 792.932 363.367 792.047 363.836 cv
787.604 366.185 783.026 368.196 778.362 369.862 cv
778.702 369.562 779.022 369.258 779.364 368.95 cv
cp
728.577 361.551 mo
735.036 361.367 741.747 361.258 748.548 361.229 cv
748.436 362.609 748.33 363.919 748.229 365.14 cv
748.118 366.32 748.002 367.435 747.902 368.474 cv
747.321 373.272 li
747.051 374.729 li
741.197 372.961 735.506 369.119 730.125 363.278 cv
729.604 362.726 729.101 362.147 728.577 361.551 cv
cp
652.088 317.52 mo
653.566 317.397 655.206 317.287 656.978 317.169 cv
661.262 325.887 666.372 334.01 672.173 341.338 cv
676.631 346.978 681.518 352.167 686.739 356.815 cv
686.054 356.976 685.438 357.137 684.904 357.31 cv
676.342 352.104 668.388 345.852 661.262 338.716 cv
655.015 332.472 649.438 325.589 644.668 318.218 cv
646.673 317.981 649.151 317.745 652.088 317.52 cv
cp
624.589 245.988 mo
625.069 230.464 628.363 215.39 634.378 201.152 cv
636.089 197.109 638.046 193.099 640.195 189.213 cv
642.764 189.654 646.475 190.058 651.467 190.449 cv
652.088 190.5 652.745 190.547 653.437 190.592 cv
652.071 193.826 650.839 197.054 649.762 200.224 cv
644.814 214.813 642.112 230.198 641.721 245.988 cv
624.589 245.988 li
cp
686.739 143.171 mo
681.518 147.825 676.631 153.015 672.173 158.646 cv
666.372 165.975 661.268 174.102 656.978 182.815 cv
655.206 182.697 653.577 182.587 652.088 182.465 cv
649.146 182.236 646.662 182.004 644.668 181.767 cv
649.45 174.385 655.029 167.501 661.262 161.27 cv
668.378 154.14 676.323 147.889 684.904 142.681 cv
685.438 142.848 686.054 143.01 686.739 143.171 cv
cp
728.577 138.441 mo
729.101 137.841 729.604 137.259 730.125 136.706 cv
735.494 130.896 741.156 127.056 746.998 125.278 cv
747.823 130.806 li
747.839 130.854 li
747.955 132.077 748.09 133.415 748.229 134.839 cv
748.33 136.066 748.436 137.377 748.548 138.764 cv
741.717 138.73 735.059 138.621 728.577 138.441 cv
cp
786.075 138.071 mo
783.912 135.521 781.657 133.158 779.364 131.03 cv
779.022 130.727 778.702 130.429 778.362 130.13 cv
783.039 131.792 787.604 133.804 792.047 136.156 cv
792.921 136.617 793.801 137.102 794.681 137.597 cv
792.035 137.77 789.157 137.927 786.075 138.071 cv
cp
851.715 182.446 mo
850.584 182.55 849.317 182.656 847.927 182.764 cv
843.387 174.022 837.977 165.877 831.84 158.536 cv
827.707 153.583 823.23 148.994 818.499 144.819 cv
825.756 149.553 832.536 155.063 838.702 161.231 cv
845.046 167.571 850.688 174.556 855.507 182.029 cv
854.411 182.172 853.139 182.312 851.715 182.446 cv
cp
718.66 361.903 mo
720.489 364.402 722.365 366.693 724.239 368.718 cv
724.984 369.517 725.728 370.293 726.485 371.036 cv
720.935 369.187 715.507 366.787 710.267 363.858 cv
709.47 363.412 708.678 362.954 707.886 362.476 cv
711.298 362.26 714.91 362.062 718.66 361.903 cv
cp
724.239 131.272 mo
722.324 133.346 720.46 135.627 718.66 138.081 cv
714.839 137.92 711.216 137.729 707.886 137.513 cv
708.678 137.038 709.47 136.58 710.267 136.132 cv
715.507 133.203 720.947 130.802 726.485 128.959 cv
725.728 129.702 724.984 130.47 724.239 131.272 cv
cp
800.946 338.824 mo
804.462 331.703 807.551 323.876 810.142 315.542 cv
816.611 315.707 822.762 315.912 828.435 316.139 cv
832.345 316.298 835.932 316.473 839.144 316.647 cv
835.233 323.714 830.709 330.314 825.692 336.317 cv
819.666 343.533 812.901 349.921 805.6 355.3 cv
803.138 355.026 800.301 354.767 797.164 354.54 cv
795.522 354.422 793.787 354.312 791.982 354.204 cv
795.202 349.546 798.204 344.389 800.946 338.824 cv
cp
722.733 353.728 mo
719.275 348.444 716.058 342.31 713.187 335.484 cv
710.572 329.29 708.25 322.523 706.263 315.347 cv
708.696 315.297 711.188 315.253 713.708 315.212 cv
725.693 315.015 738.107 314.908 750.651 314.89 cv
750.438 322.742 750.193 329.905 749.937 336.205 cv
749.683 342.396 749.401 348.11 749.085 353.221 cv
741.91 353.247 734.83 353.36 728.042 353.555 cv
726.233 353.607 724.469 353.664 722.733 353.728 cv
cp
713.708 184.772 mo
711.188 184.731 708.696 184.69 706.263 184.638 cv
708.25 177.462 710.572 170.698 713.187 164.504 cv
716.069 157.654 719.275 151.522 722.733 146.257 cv
724.463 146.32 726.233 146.377 728.042 146.435 cv
734.813 146.628 741.894 146.744 749.085 146.769 cv
749.401 151.872 749.683 157.586 749.937 163.779 cv
750.193 170.083 750.438 177.248 750.651 185.096 cv
738.001 185.078 725.581 184.97 713.708 184.772 cv
cp
839.144 183.337 mo
835.932 183.516 832.351 183.685 828.424 183.844 cv
823.06 184.063 816.923 184.266 810.142 184.438 cv
807.551 176.098 804.451 168.274 800.946 161.162 cv
798.204 155.6 795.188 150.44 791.982 145.782 cv
793.801 145.679 795.522 145.566 797.176 145.444 cv
800.365 145.214 803.198 144.955 805.6 144.685 cv
812.901 150.065 819.666 156.451 825.695 163.667 cv
830.726 169.684 835.237 176.285 839.144 183.337 cv
cp
819.619 245.988 mo
819.379 230.822 817.727 216.017 814.719 201.935 cv
814.057 198.816 813.295 195.612 812.439 192.39 cv
818.342 192.227 823.827 192.044 828.75 191.846 cv
834.149 191.624 838.973 191.38 843.117 191.121 cv
844.963 195.031 846.592 198.959 847.979 202.839 cv
852.898 216.572 855.601 231.08 856.011 245.988 cv
819.619 245.988 li
cp
678.428 316.116 mo
684.548 315.892 691.136 315.692 698.011 315.527 cv
700.209 323.774 702.828 331.526 705.808 338.592 cv
708.175 344.218 710.776 349.432 713.562 354.129 cv
711.246 354.249 709.024 354.377 706.914 354.516 cv
703.402 354.752 700.204 355.011 697.402 355.287 cv
690.503 349.912 684.137 343.548 678.452 336.363 cv
673.692 330.354 669.403 323.742 665.696 316.672 cv
669.577 316.475 673.847 316.289 678.428 316.116 cv
cp
689.911 253.992 mo
690.116 269.102 691.517 283.87 694.072 297.915 cv
694.642 301.029 695.304 304.267 696.054 307.569 cv
689.718 307.727 683.704 307.914 678.124 308.12 cv
672.199 308.336 666.753 308.586 661.925 308.849 cv
660.196 304.975 658.659 301.055 657.341 297.185 cv
652.669 283.424 650.114 268.903 649.72 253.992 cv
689.911 253.992 li
cp
706.914 145.475 mo
709.019 145.607 711.233 145.739 713.562 145.861 cv
710.776 150.557 708.175 155.767 705.808 161.396 cv
702.828 168.462 700.209 176.21 698.011 184.457 cv
691.071 184.288 684.483 184.088 678.428 183.864 cv
673.944 183.699 669.684 183.516 665.696 183.312 cv
669.415 176.232 673.692 169.621 678.452 163.614 cv
684.137 156.437 690.503 150.076 697.402 144.699 cv
700.231 144.984 703.421 145.24 706.914 145.475 cv
cp
678.124 191.862 mo
683.568 192.066 689.589 192.254 696.054 192.416 cv
695.298 195.72 694.636 198.956 694.072 202.066 cv
691.517 216.11 690.116 230.879 689.911 245.988 cv
649.731 245.988 li
650.114 231.066 652.681 216.544 657.341 202.794 cv
658.659 198.91 660.196 194.993 661.93 191.131 cv
666.726 191.396 672.161 191.643 678.124 191.862 cv
cp
697.917 245.988 mo
698.126 231.323 699.481 217.037 701.942 203.503 cv
702.599 199.932 703.362 196.272 704.229 192.604 cv
707.282 192.665 710.396 192.724 713.583 192.783 cv
725.628 192.977 738.154 193.084 750.85 193.099 cv
750.927 196.435 750.996 199.834 751.055 203.312 cv
751.295 216.784 751.424 231.119 751.448 245.988 cv
697.917 245.988 li
cp
704.229 307.381 mo
703.362 303.712 702.599 300.054 701.942 296.481 cv
699.481 282.943 698.126 268.659 697.917 253.992 cv
751.448 253.992 li
751.424 268.839 751.295 283.186 751.055 296.669 cv
750.996 300.147 750.927 303.554 750.85 306.882 cv
738.121 306.901 725.589 307.01 713.583 307.205 cv
710.396 307.261 707.282 307.315 704.229 307.381 cv
cp
828.75 308.136 mo
823.797 307.937 818.323 307.753 812.439 307.595 cv
813.295 304.374 814.057 301.168 814.719 298.05 cv
817.727 283.972 819.379 269.158 819.619 253.992 cv
856.011 253.992 li
855.601 268.903 852.898 283.409 847.979 297.144 cv
846.604 301.01 844.963 304.946 843.117 308.859 cv
838.896 308.597 834.066 308.356 828.75 308.136 cv
cp
759.056 296.813 mo
759.302 283.159 759.429 268.761 759.448 253.992 cv
811.606 253.992 li
811.366 268.573 809.79 282.823 806.894 296.38 cv
806.115 300.05 805.205 303.745 804.192 307.396 cv
801.292 307.331 798.307 307.269 795.235 307.216 cv
783.591 307.018 771.354 306.904 758.852 306.886 cv
758.927 303.596 759.001 300.237 759.056 296.813 cv
cp
759.448 245.988 mo
759.429 231.221 759.302 216.823 759.056 203.177 cv
759.001 199.743 758.927 196.388 758.852 193.099 cv
771.604 193.076 783.837 192.967 795.235 192.769 cv
798.296 192.716 801.292 192.656 804.192 192.588 cv
805.205 196.239 806.115 199.935 806.894 203.604 cv
809.79 217.161 811.366 231.412 811.606 245.988 cv
759.448 245.988 li
cp
757.11 146.768 mo
764.131 146.729 770.883 146.617 777.226 146.422 cv
779 146.365 780.725 146.304 782.399 146.238 cv
786.527 151.564 790.347 157.772 793.765 164.702 cv
796.778 170.811 799.479 177.509 801.802 184.634 cv
799.609 184.679 797.382 184.724 795.097 184.758 cv
783.627 184.96 771.376 185.072 758.656 185.096 cv
758.457 177.479 758.217 170.205 757.936 163.447 cv
757.685 157.305 757.408 151.705 757.11 146.768 cv
cp
757.936 336.535 mo
758.217 329.785 758.457 322.51 758.656 314.89 cv
771.313 314.908 783.562 315.021 795.108 315.227 cv
797.382 315.265 799.609 315.306 801.802 315.351 cv
799.479 322.477 796.778 329.176 793.771 335.282 cv
790.347 342.209 786.527 348.415 782.399 353.746 cv
780.725 353.681 779 353.619 777.226 353.563 cv
770.771 353.371 764.009 353.255 757.11 353.225 cv
757.408 348.279 757.685 342.678 757.936 336.535 cv
cp
755.223 125.722 mo
761.705 127.676 767.982 131.436 773.926 136.92 cv
774.464 137.415 775.004 137.935 775.537 138.464 cv
769.511 138.633 763.151 138.733 756.577 138.764 cv
756.446 137.109 756.322 135.56 756.194 134.109 cv
755.516 127.582 li
755.223 125.722 li
cp
755.505 372.111 mo
756.194 365.854 li
756.322 364.421 756.446 362.875 756.577 361.229 cv
763.17 361.257 769.53 361.359 775.537 361.528 cv
775.004 362.058 774.464 362.569 773.926 363.07 cv
767.999 368.545 761.733 372.293 755.268 374.254 cv
755.316 373.892 li
755.599 372.121 li
755.505 372.111 li
cp
872.991 198.008 mo
866.257 182.108 856.626 167.832 844.37 155.564 cv
832.108 143.315 817.837 133.688 801.938 126.967 cv
785.489 120.017 768.011 116.495 749.964 116.487 cv
748.253 116.487 li
744.953 116.51 li
744.075 116.524 li
743.061 116.54 li
743.423 116.534 li
727.81 117.324 712.353 120.919 698.011 126.989 cv
682.104 133.725 667.837 143.353 655.589 155.607 cv
643.344 167.865 633.714 182.146 627.003 198.036 cv
620.063 214.448 616.534 231.892 616.518 249.906 cv
616.528 250.12 li
616.534 268.085 620.063 285.521 627.003 301.944 cv
633.714 317.839 643.344 332.111 655.589 344.377 cv
667.843 356.632 682.116 366.266 698.011 372.995 cv
712.366 379.075 727.54 382.544 743.154 383.326 cv
743.711 383.362 li
744.191 383.362 li
744.713 383.513 li
748.424 383.501 li
750.034 383.501 li
768.029 383.501 785.489 379.97 801.938 373.023 cv
817.825 366.298 832.108 356.677 844.37 344.415 cv
856.626 332.149 866.262 317.868 872.991 301.971 cv
879.931 285.542 883.464 268.093 883.482 250.116 cv
883.482 249.859 li
883.464 231.885 879.931 214.44 872.991 198.008 cv
cp
0 0 0 1 cmyk
f
750 950.192 mo
670.683 950.192 606.382 937.015 606.382 920.759 cv
606.382 904.502 670.683 891.323 750 891.323 cv
829.317 891.323 893.618 904.502 893.618 920.759 cv
893.618 937.015 829.317 950.192 750 950.192 cv
level3{
gsave
clp
[143.618 0 0 29.4347 750 920.758 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[143.618 0 0 29.4347 750 920.758 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
904.289 744.861 mo
892.192 744.861 li
891.573 728.758 888.015 713.047 881.61 698.149 cv
880.396 695.327 879.009 692.415 877.479 689.474 cv
880.934 689.192 883.631 688.906 885.685 688.604 cv
888.094 692.269 890.318 696.106 892.302 700.021 cv
899.541 714.286 903.572 729.366 904.289 744.861 cv
cp
904.289 755.12 mo
903.571 770.621 899.541 785.702 892.301 799.964 cv
890.392 803.742 888.166 807.579 885.684 811.375 cv
883.637 811.073 880.99 810.796 877.469 810.516 cv
878.962 807.653 880.352 804.737 881.61 801.828 cv
888.015 786.934 891.573 771.224 892.192 755.12 cv
904.289 755.12 li
cp
852.071 845.08 mo
859.584 837.588 866.227 829.286 871.82 820.398 cv
873.294 820.497 874.664 820.595 875.901 820.689 cv
876.919 820.771 877.878 820.854 878.768 820.937 cv
873.112 828.032 866.545 834.716 859.225 840.823 cv
855.226 844.155 851.006 847.305 846.6 850.25 cv
848.466 848.574 850.292 846.85 852.071 845.08 cv
cp
813.961 842.168 mo
818.225 834.974 821.996 827.064 825.177 818.648 cv
832.63 818.811 840.007 819.013 847.114 819.249 cv
850.908 819.377 854.678 819.523 858.585 819.694 cv
854.041 826.332 848.819 832.605 843.045 838.364 cv
835.719 845.674 827.503 852.155 818.624 857.633 cv
815.523 857.351 812.111 857.097 808.476 856.878 cv
807.045 856.792 805.557 856.71 804.021 856.631 cv
807.553 852.215 810.892 847.357 813.961 842.168 cv
cp
759.056 634.211 mo
758.924 632.837 758.797 631.533 758.664 630.287 cv
757.814 623.49 li
757.747 623.131 li
765.027 625.188 772.115 628.826 778.843 633.966 cv
772.489 634.097 765.85 634.18 759.056 634.211 cv
cp
847.1 680.734 mo
840.354 680.963 832.981 681.164 825.178 681.332 cv
822.019 672.971 818.247 665.063 813.961 657.819 cv
810.921 652.68 807.581 647.824 804.018 643.357 cv
805.56 643.278 807.046 643.195 808.49 643.105 cv
812.199 642.883 815.606 642.629 818.624 642.35 cv
827.506 647.833 835.721 654.314 843.048 661.62 cv
848.795 667.347 854.016 673.621 858.585 680.291 cv
855.104 680.444 851.25 680.593 847.1 680.734 cv
cp
875.905 679.293 mo
874.671 679.388 873.306 679.484 871.82 679.582 cv
866.227 670.695 859.585 662.397 852.072 654.91 cv
850.311 653.151 848.489 651.428 846.613 649.743 cv
851.011 652.686 855.226 655.835 859.225 659.167 cv
866.531 665.251 873.1 671.934 878.77 679.048 cv
877.902 679.13 876.953 679.211 875.905 679.293 cv
cp
801.188 866.769 mo
797.563 868.348 793.83 869.789 790.038 871.075 cv
791.756 869.629 793.445 868.101 795.088 866.507 cv
797.206 866.588 799.244 866.675 801.188 866.769 cv
cp
757.947 875.1 mo
758.666 869.659 li
758.797 868.442 758.924 867.148 759.055 865.781 cv
765.786 865.811 772.425 865.893 778.843 866.026 cv
772.145 871.147 765.071 874.781 757.795 876.844 cv
758.126 875.114 li
757.947 875.1 li
cp
805.841 681.676 mo
792.036 681.879 777.187 681.996 761.69 682.023 cv
761.446 674.412 761.156 667.221 760.828 660.636 cv
760.535 654.681 760.217 649.248 759.88 644.468 cv
768.37 644.423 776.395 644.305 783.747 644.117 cv
785.786 644.063 787.772 644.004 789.705 643.941 cv
794.645 649.304 799.232 655.542 803.346 662.49 cv
806.823 668.363 809.966 674.776 812.698 681.572 cv
810.451 681.61 808.171 681.646 805.841 681.676 cv
cp
825.282 755.12 mo
824.918 769.771 822.974 784.062 819.498 797.613 cv
818.613 801.087 817.573 804.649 816.403 808.214 cv
813.041 808.151 809.587 808.092 806.042 808.042 cv
791.842 807.84 777.027 807.726 761.991 807.702 cv
762.074 804.634 762.155 801.507 762.216 798.328 cv
762.507 784.846 762.67 770.313 762.7 755.12 cv
825.282 755.12 li
cp
760.828 839.347 mo
761.156 832.777 761.446 825.588 761.69 817.962 cv
777.054 817.984 791.906 818.101 805.856 818.309 cv
808.172 818.341 810.451 818.375 812.697 818.411 cv
809.97 825.2 806.829 831.614 803.353 837.494 cv
799.231 844.441 794.642 850.68 789.705 856.044 cv
787.772 855.98 785.786 855.923 783.745 855.868 cv
775.913 855.675 767.889 855.56 759.88 855.523 cv
760.217 850.736 760.535 845.3 760.828 839.347 cv
cp
761.991 692.28 mo
777.558 692.255 792.373 692.141 806.042 691.942 cv
809.575 691.892 813.04 691.834 816.403 691.771 cv
817.574 695.338 818.614 698.9 819.498 702.372 cv
822.974 715.923 824.918 730.212 825.282 744.861 cv
762.7 744.861 li
762.67 729.666 762.507 715.136 762.216 701.664 cv
762.155 698.474 762.074 695.349 761.991 692.28 cv
cp
837.207 744.861 mo
836.843 729.508 834.799 714.471 831.128 700.153 cv
830.396 697.278 829.576 694.381 828.688 691.52 cv
835.524 691.358 841.871 691.181 847.572 690.988 cv
853.966 690.771 859.746 690.529 864.766 690.273 cv
866.9 694.083 868.807 697.934 870.437 701.729 cv
876.343 715.468 879.647 729.974 880.265 744.861 cv
837.207 744.861 li
cp
880.265 755.12 mo
879.647 770.007 876.343 784.513 870.436 798.255 cv
868.853 801.965 866.946 805.815 864.766 809.708 cv
859.84 809.457 854.06 809.216 847.571 808.992 cv
841.659 808.793 835.313 808.615 828.689 808.463 cv
829.574 805.61 830.394 802.712 831.128 799.831 cv
834.799 785.518 836.844 770.48 837.207 755.12 cv
880.265 755.12 li
cp
795.073 633.483 mo
793.436 631.89 791.751 630.361 790.032 628.909 cv
793.809 630.189 797.539 631.631 801.178 633.22 cv
799.256 633.311 797.216 633.398 795.073 633.483 cv
cp
747.099 865.782 mo
746.813 868.701 li
746.737 869.374 746.659 870.025 746.584 870.654 cv
745.707 876.989 li
745.599 877.476 li
738.849 875.587 732.278 871.78 726.044 866.143 cv
725.946 866.056 li
732.861 865.906 739.961 865.814 747.099 865.782 cv
cp
628.828 810.378 mo
627.895 810.438 li
622.089 810.812 617.691 811.203 614.485 811.634 cv
611.966 807.797 609.68 803.865 607.685 799.938 cv
600.461 785.688 596.435 770.615 595.712 755.12 cv
614.92 755.12 li
615.511 771.196 618.874 786.87 624.922 801.723 cv
626.084 804.573 627.396 807.479 628.828 810.378 cv
cp
725.936 633.937 mo
726.053 633.833 li
732.261 628.236 738.794 624.443 745.49 622.546 cv
746.319 627.179 li
746.341 627.264 li
746.435 628.083 746.537 628.95 746.646 629.859 cv
747.099 634.21 li
739.93 634.173 732.826 634.081 725.936 633.937 cv
cp
722.779 855.859 mo
720.713 855.91 718.692 855.964 716.705 856.023 cv
712.558 850.685 708.721 844.544 705.296 837.762 cv
702.281 831.809 699.565 825.305 697.212 818.409 cv
699.788 818.366 702.414 818.328 705.063 818.293 cv
719.474 818.096 734.51 817.984 749.773 817.962 cv
749.53 825.29 749.244 832.332 748.923 838.908 cv
748.618 845.104 748.287 850.687 747.938 855.52 cv
739.443 855.55 730.984 855.664 722.779 855.859 cv
cp
710.747 866.49 mo
712.715 868.709 714.727 870.769 716.743 872.629 cv
711.652 871.018 706.65 869.087 701.815 866.866 cv
704.891 866.719 707.842 866.595 710.747 866.49 cv
cp
661.383 819.226 mo
668.899 818.997 676.802 818.798 684.884 818.633 cv
687.576 826.933 690.767 834.747 694.372 841.87 cv
697.023 847.12 699.923 852.045 703.006 856.533 cv
700.785 856.634 698.641 856.74 696.579 856.854 cv
692.33 857.092 688.475 857.351 685.112 857.623 cv
676.769 852.175 669.03 845.719 662.107 838.43 cv
656.638 832.678 651.684 826.393 647.361 819.726 cv
651.63 819.552 656.338 819.384 661.383 819.226 cv
cp
628.798 820.673 mo
630.455 820.558 632.276 820.453 634.233 820.346 cv
639.504 829.19 645.775 837.464 652.88 844.942 cv
657.776 850.102 663.115 854.925 668.781 859.309 cv
658.627 854.071 649.195 847.842 640.73 840.778 cv
633.534 834.785 627.06 828.212 621.463 821.22 cv
623.627 821.029 626.084 820.846 628.798 820.673 cv
cp
595.712 744.861 mo
596.435 729.365 600.461 714.294 607.685 700.048 cv
609.686 696.107 611.973 692.176 614.485 688.352 cv
617.621 688.771 622.019 689.162 627.891 689.548 cv
628.195 689.568 628.507 689.589 628.825 689.608 cv
627.384 692.53 626.073 695.434 624.922 698.259 cv
618.874 713.114 615.511 728.788 614.921 744.861 cv
595.712 744.861 li
cp
652.881 655.043 mo
645.8 662.496 639.528 670.77 634.234 679.639 cv
632.278 679.53 630.466 679.426 628.794 679.313 cv
625.94 679.127 623.521 678.946 621.463 678.765 cv
627.067 671.767 633.543 665.193 640.731 659.206 cv
649.2 652.138 658.631 645.909 668.777 640.684 cv
663.111 645.071 657.773 649.893 652.881 655.043 cv
cp
694.372 658.119 mo
690.765 665.245 687.574 673.058 684.884 681.352 cv
676.66 681.182 668.758 680.981 661.383 680.754 cv
656.451 680.604 651.744 680.437 647.363 680.256 cv
651.72 673.547 656.675 667.26 662.107 661.546 cv
669.022 654.271 676.762 647.819 685.112 642.366 cv
688.409 642.638 692.165 642.89 696.582 643.138 cv
698.638 643.246 700.778 643.354 703.007 643.456 cv
699.917 647.952 697.017 652.877 694.372 658.119 cv
cp
705.063 681.691 mo
704.744 681.688 li
702.202 681.652 699.685 681.617 697.212 681.576 cv
699.564 674.683 702.281 668.179 705.296 662.227 cv
708.753 655.383 712.59 649.241 716.703 643.961 cv
718.686 644.021 720.712 644.074 722.78 644.129 cv
731.106 644.327 739.565 644.442 747.938 644.471 cv
748.287 649.294 748.618 654.875 748.923 661.078 cv
749.244 667.653 749.529 674.695 749.773 682.024 cv
734.471 682.002 719.434 681.89 705.063 681.691 cv
cp
691.453 702.234 mo
692.227 698.729 693.104 695.218 694.063 691.785 cv
704.881 691.958 li
719.521 692.154 734.724 692.263 750.079 692.281 cv
750.164 695.409 750.24 698.593 750.307 701.843 cv
750.593 715.251 750.756 729.719 750.792 744.861 cv
686.511 744.861 li
686.824 730.166 688.486 715.83 691.453 702.234 cv
cp
710.747 633.493 mo
707.666 633.383 704.679 633.26 701.818 633.124 cv
706.653 630.902 711.652 628.974 716.739 627.366 cv
714.717 629.235 712.706 631.291 710.747 633.493 cv
cp
750.307 798.138 mo
750.24 801.388 750.164 804.576 750.079 807.698 cv
734.674 807.723 719.473 807.834 704.88 808.03 cv
701.2 808.084 697.598 808.137 694.063 808.199 cv
693.103 804.761 692.226 801.249 691.453 797.752 cv
688.486 784.151 686.824 769.814 686.511 755.12 cv
750.792 755.12 li
750.756 770.254 750.593 784.721 750.307 798.138 cv
cp
674.594 744.861 mo
626.845 744.861 li
627.422 729.973 630.555 715.446 636.16 701.665 cv
637.717 697.846 639.512 694.019 641.502 690.279 cv
647.436 690.549 653.974 690.793 660.945 691.006 cv
667.458 691.21 674.496 691.394 681.884 691.551 cv
681.091 694.513 680.375 697.459 679.753 700.323 cv
676.639 714.576 674.903 729.555 674.594 744.861 cv
cp
674.594 755.12 mo
674.904 770.424 676.639 785.404 679.753 799.658 cv
680.383 802.532 681.1 805.479 681.886 808.435 cv
674.753 808.585 667.715 808.768 660.946 808.976 cv
654.137 809.184 647.598 809.427 641.498 809.699 cv
639.506 805.936 637.711 802.107 636.16 798.313 cv
630.561 784.57 627.424 770.044 626.831 755.12 cv
674.594 755.12 li
cp
903.226 695.896 mo
894.828 679.377 882.817 664.535 867.524 651.782 cv
852.226 639.05 834.439 629.063 814.66 622.098 cv
794.197 614.893 772.428 611.235 749.955 611.227 cv
741.838 611.276 li
741.838 611.274 li
741.394 611.281 li
741.39 611.294 li
722.104 612.147 703.228 615.79 685.274 622.121 cv
665.468 629.11 647.687 639.104 632.424 651.827 cv
617.13 664.584 605.133 679.421 596.768 695.926 cv
588.099 713.005 583.692 731.166 583.674 749.965 cv
583.686 750.125 li
583.692 768.81 588.094 786.954 596.768 804.055 cv
605.125 820.548 617.122 835.387 632.425 848.159 cv
647.706 860.891 665.487 870.884 685.274 877.863 cv
703.128 884.163 722.038 887.77 741.469 888.581 cv
742.688 888.618 li
743.334 888.773 li
750.042 888.762 li
772.421 888.762 794.162 885.104 814.661 877.893 cv
834.476 870.904 852.262 860.913 867.525 848.195 cv
882.822 835.441 894.833 820.6 903.226 804.081 cv
911.896 786.979 916.305 768.824 916.328 750.12 cv
916.328 749.854 li
916.305 731.156 911.896 713.003 903.226 695.896 cv
cp
0 0 0 1 cmyk
f
250 447.452 mo
170.682 447.452 106.382 434.274 106.382 418.017 cv
106.382 401.761 170.682 388.583 250 388.583 cv
329.318 388.583 393.618 401.761 393.618 418.017 cv
393.618 434.274 329.318 447.452 250 447.452 cv
level3{
gsave
clp
[143.617 0 0 29.4347 250 418.017 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[143.617 0 0 29.4347 250 418.017 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
154.907 170.631 mo
155.167 170.548 155.432 170.455 155.736 170.303 cv
156.405 169.967 157.381 169.637 158.102 169.071 cv
157.136 169.684 155.985 170.145 155.126 170.54 cv
154.907 170.631 li
cp
0 0 0 1 cmyk
f
299.384 301.949 mo
299.374 303.189 299.024 304.684 298.708 305.889 cv
298.402 307.053 297.464 307.709 297.308 308.936 cv
297.142 310.248 297.095 311.59 296.803 312.889 cv
296.535 314.092 295.928 315.57 295.386 316.646 cv
295.191 317.033 294.977 317.385 294.801 317.789 cv
294.58 318.297 294.464 318.869 294.228 319.361 cv
293.855 320.143 293.219 320.469 292.603 320.641 cv
291.806 320.859 290.666 320.996 290.369 319.902 cv
290.11 318.941 289.766 317.895 290.022 316.797 cv
290.119 316.385 290.04 315.902 290.147 315.504 cv
290.283 314.994 290.712 314.676 290.86 314.139 cv
290.934 313.861 290.936 313.572 291.017 313.32 cv
291.191 312.779 291.428 312.418 291.504 311.82 cv
291.572 311.289 291.559 310.719 291.753 310.203 cv
291.913 309.775 292.139 309.641 292.103 309.133 cv
292.08 308.813 291.864 308.551 291.845 308.203 cv
291.822 307.766 291.856 307.463 292.05 307.086 cv
292.55 306.105 293.524 304.926 294.189 304.23 cv
294.673 303.725 295.241 303.611 295.628 302.93 cv
295.881 302.482 296.09 302.063 296.358 301.643 cv
296.793 300.961 297.217 300.035 297.708 299.42 cv
299.291 297.436 299.399 300.48 299.384 301.949 cv
cp
208.842 183.209 mo
207.808 183.054 206.753 182.576 205.86 182.04 cv
205.418 181.774 205.059 181.226 204.863 180.626 cv
205.084 180.296 205.528 180.14 205.83 180.009 cv
206.43 179.748 207.118 179.379 207.731 179.274 cv
208.499 179.143 209.106 179.846 209.871 179.827 cv
210.223 179.816 210.403 179.814 210.756 179.598 cv
211.3 179.265 211.879 179.11 212.442 178.905 cv
213.098 178.665 213.667 178.771 214.305 178.866 cv
214.762 178.934 216.957 179.304 216.239 180.626 cv
215.889 181.267 214.97 181.51 214.454 181.671 cv
214.126 181.772 213.75 181.819 213.439 181.962 cv
213.192 182.076 212.947 182.259 212.692 182.374 cv
211.517 182.908 210.027 183.384 208.842 183.209 cv
cp
198.355 178.904 mo
197.124 179.373 196.126 180.166 194.925 180.994 cv
194.278 181.439 193.543 181.936 192.897 182.132 cv
192.207 182.342 191.478 182.319 190.797 182.41 cv
190.403 182.463 190.009 182.51 189.616 182.592 cv
189.4 182.634 188.613 182.665 188.417 182.848 cv
188.09 183.155 188.042 183.929 187.972 184.338 cv
187.941 184.529 187.223 185.618 187.089 185.889 cv
186.743 186.582 186.333 187.22 185.962 187.902 cv
185.426 188.893 185.041 190.085 184.422 191.012 cv
183.152 192.916 179.895 193.158 179.197 191.537 cv
178.881 190.804 178.684 190.02 178.253 189.506 cv
177.723 188.877 177.186 188.327 176.611 187.801 cv
175.975 187.215 174.936 186.28 174.811 185.111 cv
174.754 184.596 175.074 183.934 175.126 183.382 cv
175.207 182.545 174.993 181.704 174.925 180.99 cv
174.85 180.187 174.58 179.496 174.59 178.655 cv
174.6 177.855 174.8 176.954 174.692 176.251 cv
174.339 173.957 172.633 173.022 171.311 172.27 cv
170.641 171.889 169.941 171.986 168.911 172.402 cv
167.689 172.895 166.723 173.029 165.602 173.28 cv
164.566 173.512 163.283 173.748 162.566 173.389 cv
162.333 173.271 162.165 173.093 162.077 172.791 cv
162.016 172.577 162.071 172.134 161.944 172.022 cv
162.124 171.524 162.364 170.938 162.616 170.438 cv
163.102 170.35 163.759 170.059 164.303 169.811 cv
165.133 169.432 165.832 169.268 166.602 169.09 cv
166.874 169.027 167.753 169.009 168.053 168.6 cv
168.384 168.146 168.047 168.316 167.926 168.199 cv
167.707 167.982 167.22 167.868 167.353 167.316 cv
168.657 166.765 169.808 166.248 171.014 166.053 cv
171.663 165.946 172.228 165.954 172.98 165.526 cv
173.764 165.081 173.574 164.836 174.204 164.092 cv
174.68 163.529 175.084 163.597 175.493 163.503 cv
176.173 163.347 176.894 163.019 177.577 162.82 cv
179.035 162.394 180.566 161.716 182.08 161.125 cv
184.285 160.266 186.366 159.903 188.564 158.982 cv
189.949 158.403 191.348 157.873 192.72 157.372 cv
194.063 156.881 195.155 157.044 196.309 157.148 cv
197.288 157.236 198.547 156.703 199.605 156.534 cv
200.649 156.365 201.683 156.013 202.73 155.769 cv
203.791 155.523 204.764 155.31 205.809 155.151 cv
206.475 155.052 207.946 154.503 208.278 155.261 cv
208.547 155.873 208.369 157.131 208.735 157.773 cv
208.878 158.026 209.139 158.081 209.197 158.419 cv
209.65 158.315 210.035 158.481 210.477 158.435 cv
211.431 158.334 212.391 157.646 213.327 157.244 cv
214.045 156.933 214.785 156.619 215.516 156.357 cv
216.055 156.166 217.09 155.761 217.582 156.078 cv
218.408 156.612 217.219 157.123 216.813 157.386 cv
215.977 157.928 215.139 158.713 214.355 159.438 cv
213.689 160.053 212.27 160.745 212.183 162.026 cv
212.11 163.112 213.167 163.403 213 164.528 cv
212.832 165.674 211.321 166.752 210.72 167.502 cv
210.214 168.135 209.827 169.562 209.53 170.421 cv
209.361 170.913 209.332 171.67 209.102 172.101 cv
208.92 172.444 208.292 173.11 208.04 173.377 cv
207.235 174.223 206.225 174.775 205.306 175.043 cv
204.03 175.415 202.902 176.451 201.712 177.268 cv
200.608 178.027 199.528 178.459 198.355 178.904 cv
cp
159.606 171.233 mo
160.016 171.158 160.452 170.895 160.465 171.415 cv
159.958 171.574 159.478 171.635 158.969 171.807 cv
158.978 171.968 li
158.559 172.28 158.092 172.541 157.675 172.804 cv
156.955 173.259 156.34 173.241 155.577 173.798 cv
155.91 173.751 156.691 173.937 156.327 174.649 cv
155.454 175.03 154.605 175.449 153.825 175.593 cv
153.374 175.676 153.04 175.549 152.66 175.563 cv
151.641 175.596 150.42 175.979 149.258 176.283 cv
148.503 176.48 147.808 176.647 146.985 177.04 cv
146.639 177.207 146.283 177.26 145.922 177.549 cv
146.153 177.785 147.228 177.277 147.741 177.143 cv
149.141 176.775 150.547 176.413 151.961 176.057 cv
152.403 175.944 154.897 175.588 153.477 176.709 cv
152.874 177.186 152.114 177.046 151.628 177.165 cv
150.653 177.405 149.486 177.934 148.391 178.527 cv
147.496 179.012 146.923 179.288 146.087 179.502 cv
145.199 179.73 144.194 180.101 143.454 180.105 cv
143.188 180.107 142.916 180.087 142.775 179.91 cv
142.652 179.752 142.832 179.267 142.738 179.101 cv
142.564 178.788 139.308 179.621 140.403 178.143 cv
140.922 177.955 141.413 177.842 141.911 177.697 cv
142.511 177.527 142.876 177.563 143.344 177.569 cv
143.853 177.574 146.676 176.813 147.238 175.775 cv
147.786 175.577 148.075 175.421 148.744 174.9 cv
147.833 175.186 146.494 175.771 145.805 175.723 cv
145.597 175.709 145.634 175.502 145.489 175.426 cv
145.309 175.329 145.011 175.4 144.801 175.335 cv
144.29 175.178 141.619 175.765 143.125 173.752 cv
143.631 173.076 144.055 173.064 144.405 172.955 cv
145.66 172.566 147.727 171.478 148.425 171.941 cv
148.699 172.124 148.547 172.671 149.047 172.604 cv
149.739 172.51 150.626 172.092 151.387 171.882 cv
152.032 171.704 152.673 171.463 153.335 171.203 cv
152.797 171.365 152.275 171.498 151.775 171.631 cv
151.122 171.803 150.292 172.101 149.727 172.137 cv
149.372 172.158 149.457 171.899 149.344 171.686 cv
149.165 171.335 148.249 171.548 148.686 170.619 cv
150.416 169.932 152.022 169.678 153.875 168.782 cv
154.736 168.366 155.454 168.311 156.355 167.787 cv
157.126 167.34 157.856 166.798 158.536 166.517 cv
159.649 166.054 160.595 166.017 161.67 165.656 cv
163.126 165.166 164.806 164.443 166.025 164.479 cv
166.797 164.503 167.126 165.209 168.125 164.909 cv
169.511 164.494 172.083 162.914 172.733 163.964 cv
172.319 164.513 171.863 164.466 171.503 164.57 cv
170.911 164.744 170.247 165.089 169.603 165.4 cv
168.614 165.876 167.676 166.715 166.731 166.986 cv
166.356 167.529 165.775 167.548 165.376 167.759 cv
164.848 168.04 164.278 168.54 163.72 168.73 cv
163.231 168.899 162.772 168.996 162.303 169.174 cv
161.827 169.357 161.319 169.631 160.848 169.767 cv
160.853 169.96 160.95 170.107 161.008 170.27 cv
160.584 170.59 160.1 170.717 159.606 171.233 cv
cp
136.821 178.572 mo
136.45 178.671 133.861 179.215 135.844 177.498 cv
136.801 176.67 138.066 176.568 138.65 176.439 cv
139.22 176.313 139.374 176.752 139.691 176.949 cv
138.636 178.533 137.438 178.407 136.821 178.572 cv
cp
138.293 180.524 mo
137.969 181.006 137.493 181.096 137.114 181.299 cv
136.697 181.521 136.228 181.85 135.993 181.748 cv
135.78 181.654 135.786 181.29 135.584 181.181 cv
135.352 181.054 135.102 180.884 134.743 180.932 cv
134.399 180.978 134.408 180.76 134.275 180.564 cv
134.139 180.365 133.813 180.396 133.592 180.329 cv
133.469 180.291 133.137 180.074 133.217 179.905 cv
133.908 179.64 134.225 179.811 134.6 179.97 cv
135.028 180.154 135.636 180.134 136.291 180.041 cv
136.642 179.991 136.916 179.857 137.35 179.643 cv
137.769 179.437 138.075 179.504 138.321 179.538 cv
138.586 179.576 138.782 179.804 138.293 180.524 cv
cp
137.908 182.962 mo
137.833 183.121 137.602 183.64 137.504 183.77 cv
137.329 184.007 136.918 184.309 136.694 184.556 cv
136.128 185.178 135.957 185.267 135.462 185.432 cv
134.714 185.684 134.056 185.893 133.624 185.649 cv
133.33 185.482 132.386 185.572 132.783 184.752 cv
133.128 184.041 133.772 184.157 134.136 184.021 cv
134.395 183.465 134.055 183.309 134.879 182.991 cv
135.379 182.799 135.811 182.754 136.256 182.657 cv
137.025 182.486 138.658 181.345 137.908 182.962 cv
cp
148.149 260.078 mo
148.102 260.23 148.208 260.428 148.125 260.576 cv
148.024 260.762 147.759 260.758 147.602 260.742 cv
147.172 260.703 147.114 260.309 146.751 260.113 cv
146.011 259.711 145.035 260.453 144.394 259.738 cv
144.019 259.32 144.29 259.297 144.675 259.328 cv
145.042 259.357 145.422 259.377 145.756 259.543 cv
145.801 259.25 145.683 258.855 145.699 258.52 cv
145.711 258.283 145.797 258.121 145.746 257.854 cv
145.653 257.869 145.567 257.781 145.47 257.807 cv
145.48 257.621 145.426 257.414 145.374 257.258 cv
145.379 257.594 li
144.741 257.123 146.251 256.631 146.499 256.609 cv
147.374 256.537 147.997 256.883 148.832 257.096 cv
149.122 257.172 149.313 257.203 149.55 257.352 cv
149.788 257.498 150.047 257.586 150.266 257.715 cv
150.457 257.83 150.75 258.035 150.899 258.273 cv
151.043 258.504 151.036 259.043 151.313 259 cv
150.493 259.379 148.602 258.58 148.149 260.078 cv
cp
143.48 257.525 mo
143.176 257.855 142.764 257.855 142.389 257.941 cv
142.02 258.025 141.634 258.086 141.258 258.143 cv
140.853 258.203 140.58 258.008 140.22 257.828 cv
140.205 257.715 140.157 257.539 140.163 257.426 cv
140.178 257.158 140.262 257.207 140.329 257.004 cv
140.418 256.725 140.489 256.543 140.308 256.223 cv
140.087 255.834 139.673 255.914 139.413 255.631 cv
139.579 256.002 li
139.212 255.633 138.858 255.285 138.493 254.979 cv
138.22 254.752 138.077 254.461 137.756 254.402 cv
137.416 254.344 137.025 254.484 136.688 254.541 cv
136.197 254.625 135.774 254.547 135.329 254.424 cv
135.267 254.627 135.258 255.047 135.329 255.256 cv
135.03 255.604 134.347 255.773 133.973 255.699 cv
133.725 255.65 133.517 255.414 133.285 255.279 cv
132.991 255.109 132.149 254.822 132.152 254.273 cv
132.155 253.875 132.827 253.313 133.053 253.168 cv
133.376 252.963 133.855 252.84 134.196 252.779 cv
134.884 252.656 135.575 252.594 136.249 252.492 cv
136.962 252.383 137.541 252.287 138.137 252.744 cv
138.584 253.088 139.053 253.424 139.548 253.643 cv
140.272 253.961 141.103 254.023 141.775 254.559 cv
141.994 254.734 142.1 255.064 142.277 255.285 cv
142.491 255.555 142.783 255.672 143.053 255.832 cv
143.464 256.074 143.991 256.307 144.407 256.553 cv
144.055 256.852 143.801 257.178 143.48 257.525 cv
cp
219.811 196.707 mo
219.717 196.363 220.022 196.017 220.261 195.819 cv
220.491 195.627 220.792 195.61 221.05 195.634 cv
221.417 195.67 221.379 195.735 221.387 195.155 cv
221.538 195.033 221.644 194.735 221.691 194.499 cv
222.348 194.437 225.079 193.365 224.842 195.279 cv
224.541 195.446 225.069 196.482 225.006 196.873 cv
224.928 197.36 224.542 198.423 224.225 198.668 cv
223.637 199.124 222.852 198.996 222.212 199.201 cv
221.941 199.287 221.608 199.303 221.376 199.485 cv
220.905 199.858 220.97 200.314 220.366 200.021 cv
220.058 199.869 219.628 199.582 219.563 199.104 cv
219.438 198.202 220.563 198.215 220.467 197.604 cv
220.417 197.283 219.907 197.061 219.811 196.707 cv
cp
224.55 189.811 mo
224.631 189.454 224.514 189.437 224.808 189.282 cv
224.954 189.207 225.113 189.217 225.25 189.135 cv
225.465 188.902 li
225.689 188.764 226.011 188.779 226.25 188.704 cv
226.493 188.627 226.72 188.515 226.969 188.475 cv
227.394 188.404 228.122 188.301 228.465 188.713 cv
228.228 189.012 228.094 189.21 227.761 189.34 cv
227.535 189.428 227.038 189.327 227.141 189.822 cv
227.235 190.279 228.655 189.893 229.064 189.924 cv
229.405 189.949 229.436 189.97 229.434 190.338 cv
229.434 190.637 229.288 191.014 229.141 191.221 cv
228.991 191.436 228.621 191.53 228.525 191.752 cv
228.462 191.899 228.527 192.296 228.545 192.463 cv
229.045 192.643 229.692 192.991 230.141 193.363 cv
230.499 193.662 230.837 194.129 231.153 194.515 cv
231.4 194.819 231.673 195.288 232.022 195.381 cv
231.852 195.397 li
232.02 195.814 232.129 196.506 232.434 196.832 cv
232.792 197.215 233.514 196.971 233.938 197.108 cv
234.188 197.455 233.637 198.647 233.42 198.897 cv
233.34 198.99 233.188 199.051 233.121 199.129 cv
232.969 199.309 232.949 199.49 232.83 199.688 cv
232.676 199.944 232.536 199.971 232.316 200.1 cv
231.661 200.475 230.925 200.78 230.191 200.728 cv
229.811 200.701 228.348 200.34 228.36 201.246 cv
227.642 201.348 226.209 201.181 225.741 201.99 cv
225.532 201.79 li
225.766 201.712 li
225.778 200.976 225.825 201.049 226.314 200.818 cv
226.547 200.707 227.11 200.166 226.566 200.046 cv
226.477 200.025 226.292 200.202 226.158 200.186 cv
225.957 200.157 225.822 200.024 225.688 199.782 cv
225.545 199.527 225.431 199.184 225.598 198.889 cv
225.73 198.654 226.042 198.67 226.223 198.522 cv
226.707 198.132 226.075 198.076 225.967 197.59 cv
225.769 196.693 226.553 196.957 226.899 196.754 cv
227.147 196.607 227.582 196.228 227.743 195.932 cv
227.986 195.486 227.663 195.34 227.319 195.196 cv
227.042 195.08 226.415 195.037 226.291 194.596 cv
226.202 194.28 226.413 194.221 226.441 193.949 cv
226.48 193.587 226.364 193.557 226.147 193.42 cv
225.655 193.105 225.17 192.993 224.766 192.518 cv
224.493 192.197 223.782 191.557 223.708 191.061 cv
223.628 190.51 224.423 190.363 224.55 189.811 cv
cp
240.584 157.856 mo
240.824 157.635 241.514 157.716 241.808 157.734 cv
242.215 157.761 242.641 157.825 243.056 157.856 cv
243.79 157.909 244.379 157.755 245.077 157.547 cv
245.717 157.359 246.303 157.201 246.903 156.9 cv
247.188 156.756 247.514 156.714 247.839 156.677 cv
248.986 156.552 250.163 156.606 251.324 156.572 cv
251.961 156.553 252.577 156.596 253.219 156.659 cv
253.892 156.727 254.551 156.572 255.227 156.651 cv
255.775 156.716 256.126 157.221 256.661 157.315 cv
256.618 157.619 255.868 157.646 255.673 157.693 cv
255.214 157.811 254.809 157.956 254.381 158.135 cv
253.985 158.299 253.493 158.245 253.045 158.258 cv
252.442 158.273 251.816 158.248 251.222 158.315 cv
251.316 158.805 252.239 159.221 252.541 159.458 cv
252.949 159.776 253.363 160.236 253.816 160.264 cv
254.625 160.313 254.071 160.955 253.683 161.192 cv
253.199 161.487 252.4 161.417 251.811 161.381 cv
251.586 161.041 251.233 160.674 250.944 160.383 cv
250.7 160.139 250.525 159.854 250.292 159.594 cv
249.876 159.127 249.152 159.236 248.844 159.627 cv
248.528 160.029 248.547 160.854 248.157 161.153 cv
247.753 161.463 247.209 161.706 246.717 161.727 cv
245.839 161.763 245.072 161.167 244.278 160.565 cv
243.641 160.084 242.969 159.74 242.319 159.514 cv
241.834 159.346 241.485 159.167 241.061 158.75 cv
240.822 158.514 240.275 158.146 240.584 157.856 cv
cp
283.778 166.559 mo
283.933 166.071 284.231 165.682 284.547 165.388 cv
285.11 164.861 285.886 164.592 286.536 164.225 cv
287.086 163.914 287.675 163.664 288.269 163.448 cv
289.012 163.18 289.946 163.25 290.616 162.883 cv
291.147 162.591 291.836 162.492 292.493 162.433 cv
292.832 162.403 293.225 162.5 293.533 162.422 cv
294.149 162.263 294.759 162.068 295.337 161.864 cv
296.028 161.62 296.863 161.43 297.922 162.073 cv
297.761 162.224 297.65 162.439 297.426 162.513 cv
297.04 162.639 296.696 162.844 296.317 162.986 cv
296.118 163.061 295.916 163.136 295.722 163.225 cv
295.387 163.375 295.02 163.516 294.639 163.594 cv
294.258 163.672 293.955 163.873 293.556 163.928 cv
291.997 164.144 290.883 165.148 289.54 165.842 cv
289.087 166.074 288.553 166.21 288.144 166.517 cv
287.938 166.67 287.756 166.85 287.567 167.027 cv
287.442 167.145 287.122 167.288 287.309 167.634 cv
287.438 167.868 287.786 168.084 287.972 168.233 cv
288.211 168.426 288.444 168.639 288.688 168.818 cv
288.858 168.944 289.056 169.035 289.222 169.184 cv
289.614 169.537 289.348 169.779 289.113 169.835 cv
288.342 170.022 287.418 169.915 286.524 169.774 cv
285.86 169.67 285.163 169.412 284.47 168.91 cv
283.941 168.525 283.746 168.326 283.738 167.729 cv
283.733 167.312 283.67 166.9 283.778 166.559 cv
cp
315.614 159.428 mo
315.889 159.31 316.227 159.221 316.624 159.253 cv
316.993 159.283 317.45 159.467 317.887 159.615 cv
318.194 159.719 318.41 159.697 318.719 159.807 cv
318.83 159.847 318.916 159.846 319.032 159.894 cv
319.166 159.948 319.348 160.07 319.494 160.144 cv
319.803 160.297 320.114 160.467 320.376 160.539 cv
320.655 160.615 320.915 160.644 321.196 160.732 cv
321.4 160.797 321.633 160.903 321.84 160.971 cv
322.024 161.029 322.196 161.044 322.395 161.13 cv
322.631 161.231 323.072 161.533 323.327 161.76 cv
323.225 162.025 322.875 162.023 322.59 162.109 cv
322.384 162.172 322.205 162.242 321.895 162.2 cv
321.306 162.12 320.58 161.839 320.089 161.901 cv
319.641 161.956 318.759 161.38 318.153 161.206 cv
317.678 161.07 317.152 160.893 316.73 160.834 cv
316.545 160.81 316.434 160.856 316.186 160.729 cv
315.923 160.596 315.657 160.458 315.467 160.185 cv
315.194 159.786 315.441 159.503 315.614 159.428 cv
cp
323.977 162.865 mo
324.1 162.698 324.319 162.631 324.511 162.539 cv
324.629 162.481 324.788 162.433 324.868 162.341 cv
324.93 162.268 324.844 162.17 324.829 162.053 cv
324.798 161.83 325.134 161.92 325.383 161.984 cv
325.641 162.052 325.947 162.159 326.236 162.278 cv
326.516 162.394 326.767 162.459 327.071 162.611 cv
327.407 162.779 327.756 162.916 328.064 163.031 cv
328.353 163.141 328.542 163.089 328.868 163.252 cv
328.889 163.362 328.915 163.596 328.876 163.661 cv
328.817 163.766 328.464 163.648 328.298 163.641 cv
327.997 163.627 327.667 163.592 327.293 163.487 cv
326.655 163.308 326.411 163.576 325.8 163.44 cv
325.222 163.31 324.996 163.697 324.125 163.107 cv
323.905 162.956 323.905 162.963 323.977 162.865 cv
cp
358.336 171.326 mo
358.595 171.235 359.222 171.42 359.699 171.521 cv
360.134 171.615 360.467 171.627 360.9 171.725 cv
361.368 171.827 361.715 171.826 362.205 171.954 cv
362.395 172.004 362.606 172.062 362.817 172.131 cv
362.993 172.186 363.215 172.296 363.376 172.345 cv
363.616 172.413 363.986 172.53 364.368 172.779 cv
364.672 172.976 364.736 173.025 364.983 173.127 cv
365.118 173.301 364.836 173.288 364.774 173.334 cv
364.683 173.402 364.666 173.527 364.504 173.548 cv
364.225 173.58 363.719 173.478 363.27 173.377 cv
362.899 173.295 362.509 173.176 362.116 173.072 cv
361.978 173.037 361.567 172.915 361.587 172.975 cv
361.714 172.994 361.775 173.007 361.902 173.025 cv
361.736 172.976 361.655 173.063 361.566 173.082 cv
361.447 173.11 361.259 173.061 361.072 173.032 cv
360.75 172.983 360.344 172.818 359.782 172.51 cv
359.586 172.402 359.199 172.188 358.983 172.037 cv
358.834 171.934 358.675 171.79 358.535 171.681 cv
358.163 171.392 358.197 171.374 358.336 171.326 cv
cp
369.095 269.252 mo
370.139 268.623 370.962 268.539 371.917 267.594 cv
372.959 266.563 374.071 265.57 374.91 264.23 cv
375.283 263.633 375.415 263.258 375.572 262.639 cv
375.629 262.406 375.614 261.893 375.728 261.699 cv
376.439 260.504 377.996 261.871 378.77 261.982 cv
378.878 262.656 377.322 265.529 378.215 265.781 cv
378.183 266.186 377.881 266.475 377.743 266.902 cv
377.53 267.559 377.475 268.629 377.61 269.246 cv
377.798 270.119 378.558 270.469 378.391 271.502 cv
377.723 271.951 376.959 272.371 376.508 273.26 cv
376.042 274.176 376.173 275.291 375.756 276.102 cv
375.501 276.594 375.032 277.188 374.731 277.633 cv
374.358 278.189 373.983 278.531 373.458 278.539 cv
372.756 278.553 372.475 277.789 371.941 277.428 cv
371.649 277.227 371.356 277.148 370.983 277.25 cv
370.491 277.383 370.136 278.02 369.699 278.188 cv
368.543 278.639 369.254 275.834 369.012 275.008 cv
368.871 274.521 368.269 274.23 367.975 273.961 cv
368.008 272.615 368.064 269.873 369.095 269.252 cv
cp
379.899 270.672 mo
380.399 270.375 381.205 270.324 381.702 270.242 cv
382.236 270.156 384.727 270.725 384.686 269.336 cv
384.858 269.268 385.105 269.242 385.267 269.275 cv
384.916 269.633 384.017 270.459 383.547 270.57 cv
383.131 272.09 381.064 271.742 380.261 271.635 cv
380.118 272.75 380.465 273.717 381.325 273.668 cv
381.663 273.65 382.129 272.908 382.1 273.848 cv
382.077 274.564 381.556 274.5 381.368 275.035 cv
381.102 275.783 382.02 276.578 382.024 277.359 cv
382.027 277.859 381.98 278.291 381.795 278.779 cv
381.522 279.5 381.441 279.449 380.934 279.672 cv
380.233 278.877 380.324 277.338 379.684 276.355 cv
379.497 277.295 379.641 278.385 379.342 279.289 cv
379.128 279.939 378.629 280.334 378.176 280.238 cv
377.547 280.107 377.958 279.953 378.2 279.205 cv
378.702 277.656 377.163 277.01 377.707 275.541 cv
377.866 275.111 378.155 274.836 378.28 274.383 cv
378.358 274.1 378.275 273.742 378.369 273.459 cv
378.541 272.938 378.916 272.539 379.125 271.971 cv
379.392 271.248 379.36 270.988 379.899 270.672 cv
cp
378.43 314.047 mo
377.41 314.133 375.962 314.504 374.657 315.301 cv
372.913 316.363 371.196 317.428 369.472 318.359 cv
368.613 318.824 367.759 319.086 366.872 319.602 cv
365.915 320.156 364.869 320.906 363.874 321.545 cv
363.098 322.041 361.819 322.654 361.483 322.268 cv
361.111 321.84 361.309 320.277 362.008 319.164 cv
362.431 318.49 362.689 318.203 362.806 317.48 cv
362.965 316.5 362.705 315.875 362.95 314.791 cv
363.212 313.637 363.678 312.209 363.77 311.113 cv
363.879 309.809 363.95 308.127 364.711 306.508 cv
365.297 305.262 366.715 304.727 367.594 304.043 cv
368.314 303.484 368.986 302.748 369.694 302.227 cv
370.686 301.492 371.783 300.756 372.766 300.203 cv
374.172 299.412 375.642 298.754 377 297.449 cv
378.038 296.451 378.572 295.152 379.3 293.932 cv
379.697 293.27 380.149 292.203 380.712 291.764 cv
381.141 291.43 381.462 291.516 381.883 291.41 cv
382.5 291.258 383.094 290.875 383.725 290.551 cv
384.486 290.164 385.379 289.955 385.994 288.891 cv
386.461 288.078 386.514 287.252 387.355 286.727 cv
387.829 286.429 388.398 286.517 388.917 286.559 cv
389.917 282.748 390.765 278.876 391.454 274.948 cv
391.152 274.636 390.827 273.868 390.717 273.453 cv
390.489 272.59 391.08 272.047 391.704 271.641 cv
391.803 271.575 391.91 271.524 392.018 271.48 cv
393.069 264.473 393.618 257.301 393.618 250 cv
393.618 240.601 392.705 231.415 390.981 222.52 cv
390.866 222.556 390.703 222.452 390.563 222.372 cv
390.352 222.249 389.889 221.921 389.7 221.956 cv
389.467 221.997 389.751 222.313 389.696 222.501 cv
389.567 222.919 388.918 222.271 388.67 222.335 cv
388.79 222.489 388.949 223.005 388.941 223.169 cv
388.92 223.583 388.311 223.261 388.05 223.147 cv
387.634 222.966 387.336 223.204 387.327 223.681 cv
387.321 224.099 387.678 224.716 387.504 225.058 cv
387.288 225.487 386.563 225.528 386.08 225.192 cv
385.653 224.892 385.586 224.272 385.433 223.784 cv
385.298 223.354 385.181 223.075 384.897 222.712 cv
384.516 222.226 384.644 221.874 384.981 221.751 cv
385.125 221.698 385.292 221.716 385.418 221.64 cv
385.553 221.56 385.653 221.39 385.758 221.271 cv
386.045 220.935 386.42 220.708 386.634 220.304 cv
386.793 220.005 387.134 219.952 387.383 219.776 cv
387.535 219.669 387.65 219.489 387.847 219.446 cv
388.047 219.403 388.305 219.46 388.528 219.474 cv
388.915 219.497 389.098 219.214 389.413 219.087 cv
389.71 218.965 389.926 218.756 390.157 218.56 cv
389.023 213.479 387.625 208.5 385.968 203.639 cv
385.765 203.998 385.588 204.379 385.746 205.118 cv
386.108 206.832 386.231 207.837 385.458 208.947 cv
384.874 209.787 383.93 209.182 382.842 209.108 cv
381.389 209.012 381.316 209.399 381.449 210.982 cv
381.525 211.872 381.483 212.11 381.055 212.456 cv
380.7 212.745 379.916 212.904 380.329 213.917 cv
380.25 213.815 380.209 213.767 380.131 213.665 cv
380.283 214.151 380.65 214.452 380.822 214.894 cv
380.993 215.329 380.856 215.646 381.118 216.175 cv
381.555 217.06 382.473 217.692 383.113 218.421 cv
384.16 219.618 384.069 219.935 383.321 220.458 cv
382.903 220.749 382.528 220.993 382.344 221.614 cv
381.301 221.327 381.524 220.862 380.993 219.964 cv
380.613 219.321 379.878 218.864 379.486 218.202 cv
378.754 216.966 378.501 214.857 377.2 213.94 cv
376.707 213.593 375.989 213.636 375.579 213.733 cv
374.845 213.912 374.611 214.034 373.688 213.835 cv
372.501 213.583 370.743 212.944 370.006 213.644 cv
370.144 214.04 370.293 214.458 370.442 214.858 cv
371.714 214.538 375.155 214.093 375.457 217.128 cv
375.506 217.624 375.438 217.981 375.17 218.278 cv
374.903 218.575 373.834 218.497 373.694 218.813 cv
373.292 219.718 374.793 221.163 375.458 221.679 cv
376.55 222.528 377.228 223.151 377.504 224.81 cv
377.761 226.341 377.27 227.597 377.233 229.043 cv
377.192 230.619 376.941 231.793 376.348 233.156 cv
376.09 233.748 375.889 234.266 375.676 234.877 cv
375.29 235.99 374.58 236.287 373.866 237.018 cv
372.938 237.971 371.993 238.865 370.934 239.719 cv
370.389 240.162 370.238 240.703 369.621 240.875 cv
369.04 241.037 368.22 240.752 367.586 240.85 cv
367.637 241.637 369.019 246.914 367.045 244.652 cv
366.324 243.826 366.878 243.195 366.711 242.141 cv
366.493 240.758 365.137 240.387 364.211 240.57 cv
364.327 241.666 363.766 242.096 363.606 243.012 cv
363.462 243.826 363.686 244.525 363.958 245.287 cv
364.538 246.91 365.661 248.115 366.508 249.605 cv
367.267 250.939 368.621 252.801 367.756 254.588 cv
367.379 255.365 366.566 255.855 366.166 256.836 cv
365.324 258.902 365.15 260.271 363.371 261.395 cv
362.795 260.438 363.033 259.234 362.29 258.266 cv
361.964 257.844 361.467 257.615 361.111 257.195 cv
360.449 256.416 359.816 254.977 358.892 254.719 cv
357.003 254.189 357.55 257.93 357.907 259.365 cv
358.214 260.615 358.848 262.275 359.399 263.291 cv
359.803 264.039 360.391 264.221 360.86 264.914 cv
361.503 265.869 361.447 266.641 361.658 267.938 cv
361.879 269.289 362.622 269.961 362.889 271.258 cv
363.238 272.936 362.059 274.523 362.275 276.092 cv
362.485 277.615 363.866 278.115 363.978 279.4 cv
364.106 280.861 363.114 282.883 362.006 282.799 cv
361.121 282.734 360.461 281.586 359.798 280.953 cv
359.233 280.414 358.7 280.023 358.439 279.064 cv
358.074 277.715 357.366 276.717 356.949 275.338 cv
356.363 273.393 356.556 272.584 355.095 271.436 cv
353.79 270.406 352.491 268.061 352.683 265.701 cv
353.999 265.793 355.597 269.818 357.305 268.404 cv
358.087 267.756 357.628 266.016 357.352 265.086 cv
356.872 263.471 356.455 262.623 356.337 260.805 cv
356.244 259.354 355.683 258.125 355.344 256.775 cv
355.028 255.52 355.267 253.604 354.708 252.52 cv
354.205 251.547 353.363 251.748 352.583 251.506 cv
352.006 251.326 351.166 251.125 350.715 250.422 cv
349.988 249.281 350.639 248.365 351.535 248.162 cv
351.501 247.488 351.5 245.58 351.058 245.424 cv
351.163 245.416 li
350.538 245.156 349.028 244.293 348.613 243.504 cv
347.905 242.156 348.47 241.053 346.965 240.961 cv
344.894 240.836 342.824 242.09 341.158 243.467 cv
340.86 243.711 340.611 244.078 340.277 244.26 cv
339.967 244.428 339.394 244.25 339.108 244.463 cv
338.577 244.859 337.723 246.289 337.35 247.096 cv
336.926 248.014 336.715 248.85 336.145 249.568 cv
335.605 250.252 334.821 251.016 334.809 252.193 cv
334.631 252.254 li
334.672 254.75 334.094 257.438 335.353 259.707 cv
335.973 260.828 336.189 261.432 336.372 262.805 cv
336.53 263.992 337.051 264.717 337.188 265.865 cv
335.981 266.041 335.386 267.023 334.808 265.037 cv
334.324 263.375 334.345 262.805 332.899 262.936 cv
331.454 263.064 331.633 261.896 330.933 260.527 cv
330.172 259.039 329.378 257.955 328.719 256.262 cv
328.152 254.797 327.402 253.494 326.806 252.006 cv
326.209 250.516 325.853 248.959 325.095 247.602 cv
323.575 244.875 321.422 242.461 319.254 240.625 cv
318.727 240.178 318.181 239.813 317.68 239.316 cv
317.108 238.752 316.603 237.828 315.954 237.375 cv
314.722 236.518 313.249 237.479 311.964 237.352 cv
310.866 237.24 309.598 236.916 308.516 236.5 cv
307.579 236.141 306.786 235.195 305.84 234.795 cv
304.422 234.195 302.95 234.314 301.548 233.803 cv
299.639 233.105 297.886 230.836 295.808 230.914 cv
294.368 230.967 295.509 232.609 295.858 233.92 cv
296.25 235.404 296.613 237.658 298.03 237.777 cv
300.214 237.961 302.658 233.197 304.715 235.783 cv
304.728 235.898 304.758 236.219 304.825 236.32 cv
305.489 237.34 306.262 238.133 307.003 239.004 cv
307.725 239.852 309.061 240.484 308.91 241.762 cv
308.833 242.398 308.204 242.805 307.944 243.445 cv
307.697 244.053 307.598 244.781 307.297 245.41 cv
306.996 246.047 306.868 246.438 306.658 247.125 cv
306.363 248.088 306.087 248.314 305.553 249.041 cv
304.368 250.652 302.986 252.09 301.54 253.422 cv
300.269 254.594 298.689 254.449 297.358 255.475 cv
296.217 256.352 295.191 257.244 294.173 258.359 cv
293.478 259.125 291.452 261.209 290.436 259.695 cv
289.972 259.006 290.428 257.447 290.28 256.658 cv
290.134 255.891 289.53 255.18 289.199 254.533 cv
288.472 253.117 287.559 251.633 286.917 250.172 cv
286.275 248.707 286.387 247.156 285.642 245.713 cv
285.086 244.639 284.298 243.508 283.614 242.584 cv
282.325 240.846 281.208 239.072 279.913 237.359 cv
279.238 236.465 278.903 235.652 278.329 234.723 cv
277.613 233.566 276.628 233.875 276.191 234.975 cv
276.071 234.998 275.938 234.99 275.824 235.041 cv
276.069 235.68 276.586 236.148 276.991 236.76 cv
277.766 237.93 277.801 238.852 278.333 240.199 cv
278.934 241.727 279.911 243.07 280.658 244.508 cv
281.913 246.924 282.176 249.531 283.715 251.859 cv
285.241 254.166 287.286 255.371 288.959 257.578 cv
289.433 258.203 289.727 258.852 289.973 259.592 cv
290.381 260.813 290.514 261.041 291.496 261.492 cv
292.827 262.107 294.863 261.406 296.254 260.969 cv
296.967 260.744 298.814 259.127 299.438 259.555 cv
300.141 260.035 300.05 262.984 300.014 263.969 cv
299.947 265.801 298.964 266.861 298.264 268.186 cv
297.761 269.135 297.118 269.93 296.649 270.879 cv
296.23 271.727 296.111 272.57 295.577 273.32 cv
293.314 276.488 291.347 279.994 288.975 282.984 cv
288.059 284.141 286.426 286.363 286.486 288.084 cv
286.535 289.502 286.834 291.033 286.848 292.553 cv
286.868 294.459 287.071 296.023 287.352 297.768 cv
287.547 298.982 287.447 300.234 287.543 301.459 cv
287.621 302.418 288.082 303.219 288.048 304.148 cv
287.923 307.615 284.694 309.75 282.788 311.293 cv
281.967 311.957 280.872 312.346 280.907 313.813 cv
280.926 314.66 281.261 316.203 281.481 317.031 cv
281.825 318.322 282.08 319.193 280.923 320.242 cv
280.536 320.594 280.077 320.703 279.739 321.154 cv
279.551 321.406 278.868 322.313 278.774 322.555 cv
278.499 323.26 278.808 323.445 278.803 324.057 cv
278.797 324.672 278.587 325.355 278.308 325.906 cv
277.884 326.738 277.36 327.348 276.97 328.234 cv
276.738 328.768 276.54 329.533 276.3 329.996 cv
275.577 331.402 274.375 332.398 273.42 333.555 cv
272.386 334.811 271.489 335.668 270.142 336.027 cv
269.15 336.291 267.991 336.633 267.014 336.631 cv
266.082 336.629 265.314 336.238 264.372 336.324 cv
263.455 336.408 263.055 336.49 262.45 335.537 cv
261.944 334.74 261.282 333.813 260.811 332.936 cv
260.272 331.934 260.158 330.801 259.625 329.709 cv
258.497 327.402 257.629 325 256.886 322.314 cv
256.535 321.047 256.168 319.652 255.735 318.404 cv
255.298 317.154 254.329 315.994 254.055 314.662 cv
253.791 313.371 253.853 311.617 253.746 310.285 cv
253.625 308.813 253.508 307.291 253.85 305.971 cv
254.583 303.141 253.699 300.662 253.68 297.594 cv
253.661 294.441 252.61 292.389 251.056 290.227 cv
250.309 289.189 249.243 288.377 248.762 286.984 cv
248.288 285.609 249.024 284.676 249.153 283.391 cv
249.35 281.447 249.792 277.207 247.864 276.365 cv
246.847 275.92 245.891 276.709 244.84 276.529 cv
243.899 276.367 243.522 275.461 242.908 274.508 cv
241.309 272.023 238.43 274.445 236.597 275.361 cv
235.705 275.807 234.767 276.48 233.764 276.486 cv
232.868 276.492 231.986 276.199 231.041 276.193 cv
229.944 276.186 229.258 276.775 228.3 277.158 cv
227.247 277.578 226.345 277.244 225.34 276.682 cv
224.332 276.119 223.395 275.463 222.536 274.539 cv
221.942 273.898 221.137 272.842 220.381 272.961 cv
220.786 273.717 li
219.594 273.344 218.23 270.984 217.141 270.016 cv
216.353 269.316 215.163 268.568 214.586 267.313 cv
214.03 266.102 213.93 264.164 213.602 262.805 cv
213.207 261.18 213.777 259.877 213.489 258.357 cv
213.345 257.602 213.048 257.506 213.29 256.48 cv
213.41 255.965 213.625 255.541 213.747 255.029 cv
214.22 253.023 213.595 252.5 212.715 251.086 cv
212.071 250.047 212.383 248.84 212.793 247.566 cv
213.292 246.021 214.158 245.109 214.959 244.027 cv
215.844 242.836 216.275 240.584 216.34 238.938 cv
217.125 238.844 217.543 238.777 218.17 239.521 cv
218.196 239.174 218.397 238.859 218.397 238.484 cv
218.942 238.102 219.386 237.43 219.949 236.961 cv
220.314 236.658 221.254 236.258 221.454 235.734 cv
221.611 235.32 221.465 235.18 221.469 234.805 cv
221.47 234.727 221.222 234.545 221.212 234.412 cv
221.189 234.061 221.334 233.846 221.353 233.5 cv
221.408 232.496 221.697 232.072 222.086 231.277 cv
222.719 229.986 222.592 228.608 223.644 227.771 cv
224.269 227.272 225.075 227.108 225.535 226.349 cv
225.79 225.927 225.832 225.271 226.047 224.786 cv
226.772 224.513 227.249 225.114 227.985 225.075 cv
228.696 225.032 229.386 224.718 230.114 224.614 cv
232.022 224.341 233.292 223.339 234.785 222.177 cv
236.066 221.183 238.314 221.183 239.803 221.083 cv
240.926 221.007 242.061 220.987 243.147 220.708 cv
244.465 220.366 245.3 220.356 246.611 220.358 cv
246.673 220.815 246.547 221.476 246.589 221.804 cv
246.634 222.153 246.825 222.3 246.891 222.606 cv
246.944 222.858 247.144 223.083 247.181 223.317 cv
247.25 223.731 246.917 223.581 246.922 223.929 cv
246.928 224.38 246.913 225.005 247.025 225.442 cv
247.339 226.673 247.778 226.233 248.738 226.362 cv
249.842 226.507 250.869 227.019 251.747 227.843 cv
252.465 228.519 253.191 228.879 254.038 229.402 cv
255.058 230.033 255.72 230.93 256.839 230.926 cv
257.503 230.924 258.545 230.416 258.793 229.592 cv
258.934 229.127 258.844 228.489 258.97 228.052 cv
259.111 227.567 259.358 227.167 259.452 226.669 cv
260.274 226.565 261.139 226.456 261.879 226.782 cv
262.259 226.95 262.606 227.296 263.022 227.509 cv
263.668 227.841 264.129 227.739 264.814 227.856 cv
266.561 228.151 267.808 229.539 269.658 229.262 cv
270.483 229.139 271.131 228.552 272.027 228.669 cv
272.866 228.782 273.309 229.338 274.241 229.15 cv
274.881 229.023 276.082 228.728 276.446 227.942 cv
276.655 227.487 276.572 226.399 276.694 225.802 cv
276.952 224.54 277.694 223.003 276.967 221.628 cv
276.369 220.497 274.86 220.532 273.894 220.583 cv
272.233 220.675 270.688 220.604 269.072 220.685 cv
267.832 220.747 267.5 220.784 266.697 219.567 cv
266.176 218.78 265.837 217.737 265.342 216.856 cv
264.788 215.876 264.395 214.157 263.446 214.132 cv
262.594 214.108 260.467 214.815 260.985 216.231 cv
261.416 217.411 263.327 217.646 263.211 219.179 cv
262.391 219.794 261.551 219.083 261.567 220.769 cv
260.266 220.253 258.709 219.536 257.663 218.171 cv
256.665 216.872 256.003 215.181 255.423 213.537 cv
254.762 211.657 252.806 211.536 251.547 210.376 cv
250.058 209.006 249.649 207.447 247.711 207.696 cv
247.764 208.543 248.501 209.525 248.926 210.226 cv
249.439 211.069 250.342 211.544 250.821 212.306 cv
251.97 212.478 255.416 214.226 255.54 216.03 cv
255.048 216.36 254.986 215.835 254.514 215.81 cv
254.196 215.788 253.801 216.063 253.426 216.056 cv
253.532 216.569 253.571 217.052 253.205 217.251 cv
253.228 217.845 253.569 219.161 253.267 219.628 cv
253.041 219.979 252.431 219.771 252.1 220.03 cv
251.506 220.497 251.589 221.476 251.337 222.271 cv
250.223 222.325 247.155 219.347 249.472 218.958 cv
250.186 218.837 250.723 218.888 251.347 218.54 cv
251.762 218.31 252.199 217.688 252.634 217.546 cv
252.228 216.503 251.416 216.2 250.691 215.716 cv
249.172 214.7 247.441 214.279 246.063 212.81 cv
245.366 212.063 245.141 210.81 244.422 210.259 cv
243.496 209.548 241.931 210.337 241.102 210.864 cv
240.875 211.009 240.564 211.134 240.399 211.396 cv
240.259 211.618 240.574 212.091 240.361 212.298 cv
239.98 212.671 239.297 212.239 238.85 212.206 cv
237.571 212.108 236.543 212.151 236.09 213.712 cv
235.863 214.495 236.064 214.71 235.547 215.249 cv
235.149 215.662 234.348 215.749 233.915 216.274 cv
233.735 216.493 233.238 217.581 233.197 217.942 cv
233.108 218.708 233.634 218.864 233.283 219.7 cv
232.629 219.919 231.903 220.313 231.291 220.614 cv
230.499 221.005 230.566 221.601 230.157 222.267 cv
229.587 223.188 228.9 222.968 228.028 223.097 cv
227.314 223.202 226.584 223.919 225.869 223.872 cv
225.577 223.851 225.366 223.526 225.059 223.472 cv
224.725 223.413 224.417 223.685 224.15 223.585 cv
223.864 223.478 223.035 222.72 222.878 222.392 cv
222.692 222.001 222.811 221.702 222.725 221.278 cv
222.649 220.917 222.441 220.378 222.301 219.942 cv
221.985 218.929 222.003 217.829 221.964 216.681 cv
221.833 216.751 221.767 216.786 221.636 216.856 cv
221.68 216.39 221.858 215.764 221.916 215.206 cv
221.975 214.615 221.879 213.912 222.056 213.388 cv
222.369 212.451 222.686 212.708 223.509 212.579 cv
224.059 212.495 224.629 212.341 225.219 212.295 cv
226.488 212.198 227.793 212.209 229.058 212.007 cv
230.672 211.749 230.501 210.964 229.934 209.299 cv
229.288 207.404 226.559 206.34 226.509 204.176 cv
226.475 202.729 227.658 202.265 228.508 202.449 cv
229.278 202.615 229.863 203.251 230.622 202.842 cv
231.121 202.572 231.542 201.858 231.949 201.432 cv
232.728 200.61 233.625 199.955 234.543 199.389 cv
235.137 199.022 236.697 198.59 237.122 197.97 cv
237.402 197.563 237.347 196.957 237.589 196.541 cv
237.868 196.064 238.764 195.17 239.197 194.971 cv
239.621 194.775 240.189 194.908 240.636 194.725 cv
241.017 194.566 241.258 194.232 241.709 194.235 cv
240.809 193.184 241.025 191.853 241.408 190.668 cv
241.792 189.47 242.11 189.054 243.036 188.454 cv
243.318 188.271 243.441 188.156 243.544 188.149 cv
242.652 187.111 242.352 187.48 241.186 187.733 cv
239.5 188.101 237.478 187.976 236.386 186.01 cv
235.259 183.983 238.48 180.861 239.603 179.779 cv
241.339 178.107 242.939 176.553 244.595 175.077 cv
247.028 172.91 249.642 172.22 252.394 171.176 cv
253.942 170.59 255.458 169.678 257.077 169.485 cv
258.478 169.318 259.827 169.537 261.259 169.717 cv
263.738 170.027 266.192 169.929 268.691 170.48 cv
269.986 170.768 271.222 171.572 272.509 171.999 cv
273.168 172.217 274.618 172.908 274.874 173.854 cv
274.3 174.405 274.043 174.921 273.155 175.054 cv
272.506 175.152 271.743 175.09 271.086 174.951 cv
270.441 174.814 269.808 174.457 269.122 174.467 cv
268.325 174.476 267.895 174.99 267.183 175.28 cv
268.433 177.193 269.358 177.322 270.892 177.178 cv
271.661 177.105 272.292 176.99 272.785 176.384 cv
273.22 175.85 273.295 175.658 273.958 175.563 cv
274.824 175.437 275.472 174.897 276.249 174.639 cv
276.747 174.471 277.324 174.455 277.793 174.212 cv
278.589 173.803 279.167 172.4 280.23 172.712 cv
280.136 172.915 280.09 173.017 279.996 173.22 cv
281.77 172.131 283.614 171.36 285.801 171.228 cv
286.686 171.174 287.504 171.035 288.433 171.053 cv
289.7 171.079 291.089 171.439 292.308 171.393 cv
292.032 171.241 291.553 170.973 291.319 170.694 cv
289.936 169.056 292.379 169.51 293.063 169.584 cv
294.222 169.705 295.283 170.098 296.545 170.759 cv
297.478 171.248 300.017 172.749 300.559 172.004 cv
301.055 171.324 299.332 170.098 299.158 169.366 cv
298.994 168.682 299.282 167.001 299.574 166.691 cv
299.994 166.248 302.684 166.439 303.428 166.855 cv
304.559 167.486 304.25 168.517 304.879 169.588 cv
305.324 170.342 305.934 171.014 306.141 171.812 cv
306.41 172.853 305.903 173.449 306.098 174.493 cv
307.501 174.816 307.762 174.393 307.197 172.793 cv
306.702 171.387 306.295 170.319 305.465 168.934 cv
304.626 167.527 304.95 167.275 305.915 167.181 cv
306.788 167.095 307.746 167.168 308.705 167.236 cv
309.152 167.268 309.688 167.379 310.02 167.256 cv
310.579 167.049 310.486 166.274 310.834 165.896 cv
311.822 164.82 314.139 165.175 315.569 164.813 cv
317.603 164.297 320.533 165.123 322.614 164.861 cv
323.788 164.714 324.423 164.104 325.85 164.3 cv
327.452 164.521 328.853 164.526 330.417 164.768 cv
331.196 164.886 331.993 165.052 332.801 165.231 cv
333.715 165.436 334.511 165.276 335.618 165.763 cv
336.258 166.045 337.583 166.826 338.114 167.584 cv
338.22 167.735 338.311 168.365 338.444 168.624 cv
338.967 168.479 339.916 168.752 340.847 169.182 cv
341.996 169.713 344.009 170.939 344.743 170.9 cv
344.911 171.018 li
346.611 171.283 348.34 171.616 349.86 171.74 cv
351.494 171.873 353.259 171.132 356.852 174.637 cv
358.186 174.928 359.985 175.796 360.847 175.601 cv
361.644 175.421 362.006 175.158 363.28 175.405 cv
364.212 175.587 364.783 175.485 365.386 175.415 cv
366.139 175.329 367.372 175.729 368.821 176.314 cv
370.172 176.861 371.157 177.009 372.208 177.238 cv
372.831 177.373 373.394 177.485 374.146 177.757 cv
349.25 135.059 302.966 106.359 249.977 106.359 cv
194.543 106.359 146.452 137.765 122.504 183.75 cv
122.931 183.529 123.361 183.306 123.79 183.092 cv
124.913 182.529 126.003 182.022 127.126 181.459 cv
128.011 181.017 129.356 180.229 129.856 180.316 cv
129.225 180.899 128.564 181.475 127.933 182.012 cv
127.58 182.312 126.871 182.843 126.548 183.28 cv
125.73 184.397 127.788 183.069 128.264 182.809 cv
128.736 182.549 129.665 182.165 130.233 181.58 cv
130.417 181.915 131.18 182.522 131.94 182.314 cv
132.046 182.244 li
132.094 182.14 li
132.202 182.1 132.374 182.002 132.454 181.979 cv
132.314 182.074 132.181 182.154 132.046 182.244 cv
132.022 182.296 li
131.94 182.314 li
131.506 182.596 131.08 182.855 130.637 183.051 cv
130.23 183.232 129.863 183.345 129.422 183.596 cv
129.004 183.834 128.54 184.24 128.129 184.441 cv
127.153 184.923 126.361 185.051 125.449 185.428 cv
124.624 185.767 123.8 186.11 123.094 186.274 cv
123.11 186.1 123.231 185.895 123.547 185.679 cv
123.639 185.598 123.686 185.557 123.78 185.475 cv
123.868 184.952 122.653 185.249 122.239 185.226 cv
122.08 185.217 121.91 185.226 121.738 185.238 cv
121.474 185.76 121.215 186.283 120.958 186.808 cv
121.051 186.773 121.14 186.741 121.233 186.707 cv
121.754 186.517 122.153 186.431 121.886 187.043 cv
121.756 187.343 121.864 187.369 121.386 187.623 cv
121.012 187.819 120.713 187.87 120.392 187.961 cv
120.221 188.318 120.057 188.681 119.888 189.04 cv
120.141 188.975 120.359 188.913 120.493 188.835 cv
120.999 188.541 121.191 188.24 121.639 187.884 cv
122.436 187.252 122.733 187.733 123.077 187.759 cv
123.542 187.791 124.189 187.663 124.814 187.48 cv
125.303 187.338 126.033 187.189 126.675 186.696 cv
127.008 186.441 127.325 186.025 127.7 185.725 cv
128.128 185.382 128.486 185.204 128.817 185.077 cv
129.227 184.92 129.559 184.897 129.936 184.796 cv
130.555 184.629 130.464 184.822 130.355 185.428 cv
130.314 185.654 130.363 185.876 130.253 186.158 cv
130.18 186.354 129.95 186.654 129.9 186.826 cv
129.805 187.158 130.022 187.11 130.269 187.079 cv
130.855 187.002 131.457 187.095 131.603 187.634 cv
131.686 187.936 131.621 188.556 131.1 189.085 cv
130.416 189.782 129.556 189.946 129.043 190.08 cv
128.353 190.259 127.777 190.299 127.236 190.251 cv
126.753 190.209 126.061 190.463 125.491 190.568 cv
124.408 190.768 123.137 191.338 121.989 191.726 cv
121.41 191.92 120.645 192.277 120.306 192.119 cv
120.11 192.027 120.103 191.682 119.899 191.593 cv
119.727 191.52 119.423 191.642 119.129 191.728 cv
119.003 191.764 118.788 191.858 118.56 191.951 cv
118.425 192.257 118.292 192.563 118.159 192.869 cv
119.022 192.77 119.589 192.889 119.083 193.598 cv
119.118 193.605 li
119.194 193.765 120.028 193.275 120.23 193.291 cv
120.457 193.306 120.508 193.557 120.806 193.507 cv
121.417 193.407 122.66 192.561 123.446 192.123 cv
124.321 191.635 125.27 191.143 125.967 191.068 cv
126.363 191.025 126.605 191.077 126.824 191.221 cv
127.055 191.371 127.152 191.479 127.522 191.428 cv
128.383 191.309 129.575 190.947 130.728 190.123 cv
131.6 189.498 132.342 188.507 133.181 188.015 cv
133.894 187.598 134.83 187.147 134.961 187.693 cv
135.03 187.973 134.712 188.689 134.883 188.871 cv
135.004 188.999 135.411 188.822 135.665 188.741 cv
136.067 188.032 137.563 186.775 136.845 186.545 cv
136.407 186.404 135.376 187.143 134.892 187.111 cv
135.166 186.788 135.541 186.571 135.816 186.249 cv
136.147 185.863 136.025 185.853 136.239 185.537 cv
136.538 185.096 136.389 185.199 136.753 184.858 cv
137.004 184.626 137.225 184.616 137.496 184.36 cv
137.75 184.118 137.908 183.829 138.114 183.584 cv
138.2 183.482 138.683 182.975 138.7 182.952 cv
139.197 182.288 138.918 182.053 139.215 181.621 cv
139.614 181.041 141.378 180.963 141.775 180.858 cv
142.874 180.566 143.965 180.256 145.028 180.025 cv
144.266 180.562 143.493 180.91 142.696 181.689 cv
142.116 182.257 141.892 182.504 141.301 182.835 cv
140.902 183.061 140.584 183.076 140.231 183.496 cv
139.332 184.566 139.692 185.006 139.939 185.304 cv
140.205 185.623 139.819 186.282 140.131 186.52 cv
140.444 186.757 140.936 186.751 141.25 187.024 cv
141.553 187.285 141.775 187.733 142.158 187.9 cv
142.584 188.087 143.895 187.522 144.597 186.721 cv
145.124 186.119 144.944 186.131 144.978 185.674 cv
145.006 185.304 145.087 185.158 145.23 184.686 cv
145.54 183.649 144.869 184.033 144.253 184.093 cv
143.736 184.143 142.817 183.668 142.868 182.988 cv
142.923 182.26 144.436 181.071 145.058 180.623 cv
147.036 179.202 148.019 179.741 149.672 179.158 cv
150.458 178.882 151.178 177.803 151.91 177.733 cv
152.469 177.681 152.746 178.051 153.337 177.959 cv
153.845 177.881 154.219 177.912 154.647 177.975 cv
155.233 178.059 155.972 177.936 156.426 178.249 cv
156.907 178.58 157.201 178.959 157.968 178.812 cv
157.965 178.811 li
157.981 178.811 li
157.968 178.812 li
158.554 179.383 159.969 178.635 160.78 178.91 cv
161.489 179.15 162.379 179.646 162.821 180.299 cv
163.475 181.271 164.235 182.088 165.196 182.788 cv
165.655 183.123 165.717 183.332 166.403 183.207 cv
166.827 183.129 167.295 182.999 167.68 183.007 cv
167.535 183.932 166.631 185.723 165.866 186.16 cv
165.497 186.371 164.744 186.381 164.441 186.381 cv
163.499 186.377 162.657 185.725 161.405 186.504 cv
161.297 187.34 162.83 187.678 163.098 188.282 cv
163.344 188.838 163.306 189.096 162.759 189.963 cv
162.128 190.967 161.633 191.238 161.314 192.432 cv
160.535 192.623 159.744 192.627 159.136 192.369 cv
158.45 192.079 158.503 191.262 157.728 191.124 cv
155.845 190.788 154.019 190.759 151.813 191.436 cv
151.074 191.662 149.508 191.936 149.636 190.795 cv
149.725 189.99 150.832 189.072 151.345 188.699 cv
152.491 187.871 155.634 187.201 156.095 184.999 cv
154.731 185.188 154.758 183.199 153.442 183.272 cv
152.183 183.343 150.547 184.037 149.194 184.279 cv
149.301 185.088 148.583 186.118 148.139 187.056 cv
147.694 187.993 148.048 188.431 147.327 188.985 cv
146.563 189.569 145.389 189.446 144.727 190.274 cv
145.033 190.451 145.152 190.822 145.369 191.142 cv
145.691 191.618 146.142 191.517 146.719 191.615 cv
148.542 191.928 144.957 194.21 145.194 192.49 cv
143.663 192.635 141.733 194.188 140.172 194.366 cv
140.304 193.99 140.678 193.27 141.116 192.561 cv
140.141 193.211 139.051 193.447 138.176 193.952 cv
137.35 194.429 136.528 195.218 135.688 195.929 cv
134.95 196.551 133.942 197.256 133.259 198.088 cv
132.681 198.795 132.071 200.246 132.209 200.838 cv
132.28 201.137 132.535 201.33 132.7 201.521 cv
132.952 201.806 132.941 202.265 133.17 202.506 cv
133.525 202.874 134.45 202.787 135.001 202.829 cv
135.785 202.89 136.642 203.155 137.207 203.662 cv
137.75 204.15 138.142 204.236 139.061 204.004 cv
139.872 203.796 140.852 203.371 141.42 203.752 cv
142.066 204.188 141.512 204.846 141.542 205.732 cv
141.561 206.262 141.778 206.399 141.686 207.033 cv
141.6 207.631 141.34 208.319 141.217 208.932 cv
142.172 209.475 143.391 209.371 144.041 207.313 cv
144.628 205.459 144.153 204.295 145.955 203.301 cv
146.801 202.835 147.379 202.772 147.475 201.603 cv
147.551 200.654 147.3 200.468 146.79 200.202 cv
145.918 199.752 146.697 199.749 147.03 198.666 cv
147.134 198.327 146.696 197.629 147.399 197.384 cv
147.762 196.507 147.653 195.863 147.702 195.135 cv
147.777 194.021 148.027 193.782 148.848 193.556 cv
149.868 193.272 150.83 192.179 151.837 191.811 cv
152.462 191.58 153.254 191.522 153.694 191.721 cv
154.114 191.91 154.339 192.454 154.782 192.665 cv
155.361 192.939 156.313 192.549 156.84 192.907 cv
157.321 193.23 157.137 193.899 157.134 194.571 cv
157.133 194.926 157.25 195.221 157.262 195.587 cv
157.278 196.045 157.189 196.335 157.133 196.838 cv
158.376 196.691 159.614 196.467 160.758 194.771 cv
161.375 193.857 161.569 193.129 162.384 193.025 cv
162.178 193.135 li
162.566 193.04 162.967 193.123 163.191 193.396 cv
163.517 193.798 163.391 194.306 163.472 194.962 cv
163.608 196.061 163.911 197.066 164.378 197.85 cv
164.746 198.462 165.045 198.807 165.567 199.199 cv
166.191 199.668 166.519 200.595 167.106 201.168 cv
167.532 201.58 168.116 201.757 168.387 202.342 cv
168.736 203.087 169.063 204.369 168.852 205.407 cv
169.003 205.387 li
168.119 207.517 169.657 207.918 170.545 208.46 cv
170.958 208.713 171.606 209.556 171.374 210.454 cv
171.238 210.981 170.316 211.514 169.933 211.673 cv
169.141 212.005 168.308 211.725 167.564 211.753 cv
166.917 211.778 165.54 212.263 165.059 211.74 cv
164.045 210.639 166.977 208.113 167.074 206.819 cv
165.158 207.582 163.375 208.788 161.485 209.319 cv
159.782 209.8 158.098 210.288 156.407 210.688 cv
157.016 210.673 157.593 210.704 158.008 210.733 cv
158.733 210.787 159.624 211.192 159.622 212.354 cv
159.621 213.475 158.586 214.511 159.758 214.706 cv
160.714 214.864 162.003 213.249 162.83 213.714 cv
162.712 213.985 162.625 214.263 162.564 214.546 cv
162.077 214.999 161.431 215.491 161.09 216.099 cv
160.858 216.515 161.042 216.524 160.688 216.896 cv
160.454 217.142 160.166 217.222 159.894 217.315 cv
159.102 217.583 158.309 217.798 157.519 217.896 cv
157.069 217.95 156.558 218.108 156.158 217.96 cv
155.915 217.87 155.886 217.704 155.65 217.614 cv
155.301 217.483 155.441 217.356 154.973 217.616 cv
154.65 217.798 154.344 218.212 154.022 218.423 cv
153.285 218.911 152.575 219.208 151.827 219.759 cv
150.633 220.636 150.254 221.952 149.856 223.526 cv
148.788 224.067 146.861 224.56 146.238 225.917 cv
145.916 226.622 145.723 227.378 145.374 228.071 cv
144.993 228.825 143.962 229.453 143.711 230.15 cv
143.311 231.262 144.35 231.467 143.34 232.627 cv
142.673 233.395 142.129 234.172 141.436 234.781 cv
139.886 236.146 137.277 237.697 136.915 240.178 cv
136.575 242.5 137.246 244.395 137.431 246.631 cv
137.53 247.805 137.098 248.234 136.567 249.004 cv
136.188 249.549 136.309 249.555 136.212 250.383 cv
136.129 251.092 136.066 251.295 135.499 251.17 cv
135.473 250.992 li
134.961 251 134.637 249.154 134.678 248.576 cv
134.751 247.516 135.363 246.672 135.136 245.584 cv
134.782 243.873 133.809 243.15 132.614 242.947 cv
131.886 242.824 131.254 242.736 130.577 242.395 cv
129.649 241.93 129.353 242.305 128.422 243.074 cv
127.559 243.787 126.462 244.41 125.542 244.648 cv
124.483 244.924 123.597 244.729 122.567 245.301 cv
121.464 245.914 120.497 246.789 119.48 247.678 cv
118.426 248.596 118.348 248.758 118.413 250.229 cv
118.458 251.291 118.459 252.451 118.426 253.518 cv
118.374 255.193 118.774 256.502 118.994 258.102 cv
119.23 259.805 119.954 260.055 121.032 260.48 cv
121.692 260.74 123.852 260.982 124.407 260.18 cv
124.845 259.549 124.458 257.818 124.61 257.043 cv
124.806 256.047 125.622 255.867 126.28 255.596 cv
127.09 255.26 127.782 254.799 128.634 254.742 cv
129.624 254.674 129.606 255.596 129.497 256.76 cv
129.403 257.766 129.291 258.766 129.133 259.734 cv
129.017 260.438 128.997 261.012 128.876 261.701 cv
128.753 262.4 128.152 263.438 128.168 264.061 cv
128.347 264.061 128.541 264.012 128.719 264.031 cv
129.666 264.135 130.561 264.109 131.508 264.295 cv
132.207 264.43 133.644 264.145 134.092 264.893 cv
134.543 265.648 134.322 267.268 134.295 268.193 cv
134.266 269.273 134.314 270.223 134.491 271.309 cv
134.649 272.275 134.878 273.465 135.292 274.264 cv
135.845 275.326 136.486 275.154 137.212 274.709 cv
138.584 273.867 139.978 274.613 141.436 274.883 cv
141.356 274.889 li
141.566 274.984 141.668 275.113 141.674 275.441 cv
141.909 275.152 142.137 274.832 142.236 274.313 cv
142.486 273.01 142.728 272.32 143.548 271.527 cv
144.376 270.725 145.283 270.564 146.3 270.328 cv
147.616 270.021 147.705 268.113 149.214 268.521 cv
150.603 268.898 151.946 269.854 153.3 270.344 cv
154.253 270.688 155.418 270.361 156.394 270.299 cv
158.106 270.189 159.645 271.688 161.219 272.822 cv
162.548 273.785 163.952 273.869 165.35 274.631 cv
167.631 275.867 170.298 278.023 172.352 280.164 cv
173.618 281.482 174.014 282.838 174.881 284.566 cv
175.798 286.391 177.353 287.076 178.798 287.719 cv
180.559 288.506 182.378 288.734 184.128 289.395 cv
186.122 290.143 187.972 292.148 189.827 293.295 cv
191.297 294.203 192.876 293.682 194.325 294.98 cv
195.442 295.982 196.227 297.375 196.321 299.039 cv
196.42 300.813 195.911 302.123 195.387 303.59 cv
194.699 305.52 192.891 307.234 193.022 309.551 cv
193.122 311.348 193.447 312.99 193.35 314.719 cv
193.251 316.463 192.712 317.988 192.475 319.619 cv
192.227 321.32 192.205 322.781 191.041 323.516 cv
189.774 324.311 188.423 325.021 187.077 325.725 cv
186.056 326.26 186.286 326.094 186.481 327.273 cv
186.587 327.908 186.711 328.688 186.73 329.275 cv
186.813 331.66 186.278 334.02 186.157 336.221 cv
186.133 336.656 186.152 337.094 185.991 337.445 cv
185.446 338.627 184.095 339.232 183.181 339.854 cv
182.811 340.105 181.792 340.57 181.689 341.02 cv
181.559 341.588 181.957 341.752 182.113 342.289 cv
182.486 343.57 181.089 344.094 180.611 344.857 cv
180.063 345.734 179.903 346.439 179.09 346.93 cv
178.411 347.34 178.483 348.467 177.7 348.699 cv
177.309 348.816 176.533 348.494 176.508 349.078 cv
176.494 349.449 176.967 350.152 177.061 350.57 cv
177.314 351.703 176.618 351.844 176.563 352.645 cv
176.541 352.988 176.833 354.236 177.208 354.686 cv
177.608 355.168 177.978 354.998 178.348 355.309 cv
180.292 356.943 178.077 358.84 178.489 360.152 cv
178.801 361.143 180.775 363.346 181.702 364.043 cv
182.67 364.77 184.15 365.137 184.892 366.621 cv
185.814 368.461 183.642 367.766 182.587 367.49 cv
180.936 367.061 179.267 366.48 177.153 365.102 cv
175.517 364.035 174.048 362.305 172.86 360.723 cv
171.628 359.082 171.184 357.254 169.699 355.609 cv
169.42 355.24 169.28 355.057 169.001 354.686 cv
169.131 354.916 169.261 355.105 169.256 355.238 cv
168.626 354.27 168.157 353.066 168.166 352.32 cv
168.181 351.275 168.11 350.834 167.53 349.369 cv
167.017 348.066 166.439 346.836 165.908 345.506 cv
165.386 344.199 165.452 343.301 165.321 342.131 cv
165.157 340.666 164.199 339.055 163.561 337.387 cv
162.871 335.578 162.478 333.594 162.139 331.787 cv
161.77 329.816 161.967 328.232 161.2 326.055 cv
160.725 324.709 159.147 322.844 159.293 321.604 cv
159.483 321.859 li
158.754 319.674 157.376 317.105 155.905 315.363 cv
155.045 314.348 153.875 313.563 152.908 312.688 cv
152.058 311.918 151.428 310.816 150.559 309.945 cv
149.426 308.814 147.428 307.58 146.759 305.957 cv
146.098 304.352 146.275 302.725 144.981 301.369 cv
144.124 300.469 143.009 300.033 142.125 299.111 cv
141.235 298.18 140.958 296.746 140.567 295.426 cv
140.083 293.781 139.333 291.756 139.501 290.201 cv
139.639 288.926 140.207 287.297 140.8 286.363 cv
141.399 285.422 141.626 285.164 141.563 283.789 cv
141.516 282.77 141.747 282.09 141.837 281.164 cv
141.98 279.711 141.082 278.563 140.999 277.092 cv
140.97 276.58 141.093 276.25 141.27 275.969 cv
140.719 275.932 140.16 275.871 139.622 275.98 cv
139.241 276.061 138.634 276.336 138.489 276.846 cv
138.383 277.215 138.519 277.734 138.47 278.133 cv
137.759 278.227 136.866 278.322 136.155 278.055 cv
135.113 277.664 134.126 276.021 133.41 275 cv
132.262 273.365 130.586 272.789 129.103 271.961 cv
128.016 271.352 127.103 270.414 126.064 269.695 cv
125.129 269.047 124.153 268.656 123.264 267.883 cv
122.1 266.875 120.792 265.438 119.467 265.143 cv
119.676 265.389 119.884 265.645 120.095 265.896 cv
119.209 265.498 118.43 265.717 117.577 265.072 cv
116.853 264.529 116.322 263.713 115.547 263.314 cv
114.259 262.65 112.793 262.438 111.478 261.996 cv
110.458 261.654 109.582 261.043 108.631 260.518 cv
108.602 259.746 108.322 259.313 108.494 258.521 cv
108.744 257.367 108.981 257.143 108.447 256.135 cv
108.094 255.471 107.532 255.188 107.133 254.617 cv
106.886 254.264 106.633 253.907 106.382 253.551 cv
108.267 331.24 171.834 393.641 249.977 393.641 cv
306.291 393.641 355.028 361.228 378.573 314.046 cv
378.43 314.047 li
cp
f
380.519 195.485 mo
381.576 196 382.527 196.452 383.332 196.542 cv
382.634 194.803 381.906 193.079 381.142 191.375 cv
380.464 191.679 379.526 191.727 378.824 192.115 cv
378.485 192.304 377.688 193.438 378.483 194.354 cv
378.933 194.873 380.017 195.24 380.519 195.485 cv
cp
f
121.325 190.572 mo
120.907 190.571 120.644 190.376 120.238 190.381 cv
119.948 190.384 119.54 190.514 119.151 190.619 cv
119.047 190.847 118.946 191.075 118.844 191.304 cv
118.966 191.268 119.084 191.232 119.197 191.193 cv
119.936 190.931 120.628 190.76 121.325 190.572 cv
cp
f
294.364 204.525 mo
294.22 203.243 292.134 203.801 291.754 204.249 cv
291.536 204.507 291.35 204.814 291.11 205.095 cv
290.736 205.527 290.094 205.577 289.58 205.826 cv
289.316 205.954 288.168 206.428 288.176 206.924 cv
288.18 207.171 288.355 207.274 288.538 207.451 cv
288.844 207.746 289.559 208.351 289.916 208.424 cv
289.965 208.73 290.113 208.931 290.261 209.196 cv
290.551 209.717 290.641 210.196 290.997 210.675 cv
291.324 211.115 291.678 211.522 291.949 212.028 cv
292.353 212.778 292.34 213.421 292.391 214.217 cv
292.491 215.85 292.91 218.438 294.506 218.771 cv
295.184 218.911 295.881 219.083 296.566 219.054 cv
297.207 219.028 298.202 219.099 298.723 218.743 cv
299.358 218.31 298.626 217.179 298.458 216.448 cv
298.285 215.702 298.264 215.132 297.825 214.517 cv
297.278 213.749 296.559 212.995 296.145 212.091 cv
295.825 211.394 296.014 210.884 295.504 210.247 cv
294.918 209.515 294.014 209.001 293.339 208.449 cv
293.038 208.204 292.686 207.887 292.47 207.493 cv
292.244 207.077 292.28 206.947 292.256 206.493 cv
292.847 206.116 294.494 205.684 294.364 204.525 cv
cp
f
245.036 191.932 mo
245.133 191.515 245.483 191.051 245.464 190.572 cv
245.434 189.833 244.644 189.225 244.057 188.684 cv
244.298 189.009 244.461 189.233 244.441 189.86 cv
244.415 190.631 243.625 192.465 245.036 191.932 cv
cp
f
276.59 207.108 mo
276.28 207.088 274.488 206.471 274.584 207.236 cv
273.969 207.313 273.317 207.301 272.689 207.329 cv
272.128 207.353 271.533 207.563 271.059 207.022 cv
270.594 206.49 270.496 205.369 269.856 205.137 cv
269.361 204.954 268.501 205.334 268.241 205.801 cv
267.911 206.387 267.668 207.304 267.497 207.979 cv
267.261 208.908 266.613 209.182 266.178 209.943 cv
265.707 210.771 266.241 211.222 266.876 211.589 cv
267.54 211.972 268.161 212.683 268.85 212.97 cv
269.465 213.228 270.223 212.975 270.741 212.665 cv
270.969 212.529 271.172 212.296 271.397 212.2 cv
271.676 212.079 272.008 212.022 272.301 211.936 cv
273.574 211.556 274.762 211.335 276.196 211.685 cv
276.736 211.817 277.317 212.038 277.866 212.248 cv
278.817 212.61 279.77 212.704 280.668 212.515 cv
281.25 212.394 281.786 212.151 282.361 212.013 cv
283.077 211.839 282.558 211.245 282.106 210.802 cv
281.124 209.837 280.153 208.819 279 208.246 cv
278.227 207.863 277.378 207.16 276.59 207.108 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 15.0.0
%%For: (user) ()
%%Title: (740_1.eps)
%%CreationDate: 7/1/2013 10:55 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj9=acg^hBf>W51G:8Q![fa"V=\NP':n[\P9k#4k,\`R9e,.&SgL"Y1HgKD,KU*tG,_e:e2)E[>UldKln)#e,qTW3WGueb[
%]9ZB9X/_mB3V'!tgq&"8H2SlLNdrRfWr:,6g"Yu&W^4*uC,K1cmTQdcbAZNdrA/]Xk<9$.7dH[OZ/Jb;+H=!M*ddQLi3bV4IP5?q
%'lm5;-AgW%+VeO<^Y/SQB!p$i"oFBFW,5nYo.G;t+-VW#T[s8KTi;a].d_\0.:NCgfs1>:Z`U4!D:A>t)]G4U31HOW>GYsGrtYJ1
%AI3Eu[k3Kd@F4^0I]qUC6<Q.[7<k1M#H*$cdA+eF+t36>>KU@ibIP;EhW^2&(/uDF7:?EgbmA=X@o^L_#]/uHrml+9cCj:cn!C9f
%N<33Sc7n4^`Y,3P"lPq?Jg=Ce;/k3+pq;3bZDf6t1UftPiWTRA`Zp#&U?-O2i8doHRZ]=+3P/\^/PFK3X*,Yi(^rUfOl0k8ph)2Q
%4Rd,PLTuHckoJ@T#>H7[(41#IDZlUic$BmMcQ`)jZoN;6[@dPs7i?O\+5:/(,4`u$Nr71*ci[lt2>YrDCH3anj]2>$a8Zlr)#I\a
%HgRJOe9Xba"b&+l3CC&m8mX;pWbu5+>.hsV4f>:`Tdb8qQj;cho<tohp46HB3q]h*F%n5'\Q,P80h1$be8#+-PM?kt.="GY0CXIG
%/<J`S"\k#jWZ@FLUR\"-Fq7^n8*BioPGV]BW`(d1r&]^70`ZmLIa;BEl%Ws;coh?jMSFI*b+La/?,pks=83I:pg#B>]=O#8?,rkY
%$3g@):HaaaVo^It_(5tt/.99F$c+C;o6@-d!l>WY#ZH6a8R<ef=J:7Qp^=hKXAhNj;@/PQ9),2]65\%dVk.O(,e<(]JEP<J'PWF[
%`JBgOT41^t>h:,ZSe)=p_J]QE\i@+i)%qY\#_PP(2kcdD#>L/!iAY'd;>?,RdE81d,>n51BZD3>)sP4;Bq8-1&.D.JDhRXC]Z465
%+AZdAeg7FJr2*%7oooH65/iPJ:QXa6`Bi\m_2q.a`iNi@;Te5[eo:Bd_2q.Cd^3b&@\aUNnHoSuI":)_H+\jg#_k1q2f2720!oXJ
%#$<58"bJl",i3VW79]Ek7OsPO%AfX/5`hnBd?85#]\+\=ru_^_aE\I+,fqLsoJ+dMhZu\s*GM>B65/B<_B=DkS9$]W,[,W'%*Ih)
%SN5/<^*C]tQD%!gKnQoeXaQ'KXa=5,XZV1tD\u4k73B?jq)!Ge!I[^-%!a>$Pd>)YdgDgPGiV4p3Kei[#*O&lNT?%"<[7p7e%#lT
%S4Jf5gr(L'C2I;/;/7:L]K/XTW(K%\*+`G3c'ThXZ*T#mSscTXfgjNTUZbB9L-`#<1]9RZe"jII1]>ra]oLD1j#H\bEPg-Ep2OC7
%-p#gQYt2'n1]9T0EgbdAcLb&7d-Kmh5>(]ZH61fP^M3SnCOS^u8>Bd]%+?^g)UtDFH*/BA7d_0NM0R$8:qT5:RT/N+/5#9$h\eOT
%jr=^`lqEQQ!u[-<FdLD!A]:=oY#>tY/9r]+Oj"[^DQG+Tk=r2Q#`B>]%N(C9jij+cW`]ne,KBNUV6ccqA'"[+M7`&&/:!C5rbgsT
%/Aet8-;7\!>Z#$7c"DQk(%ZX4rrM1`*Ma&Q8UaZZ/O_N]$C(/"A4dB;+Ed4p-#T6KKHI@gr!soGlJO]KDQMoTbW%*3HIN,;@^JQI
%Sn1"IEQeN1/?Yc?i>.,l^2aHAL3X>M`?\':>85];5t`R;Z'^?Q$I+F4-&u'(CSSn%jE;CnK^N6<Cm\f,g[[OGksBE9CI1/<A\3oB
%6UK&k*6lL@F%jj.YVsLdpQ;o&OQ;dr;fjm&2q3j)4POEVUUZQVoRBfGb@>9+XrbTKGAIUiqn+5".pPBl`U/KR1Y&kNF#>gLTl!$\
%N7^O$KSk)?*K^gfOIS370+ht%CS+t_Q:O;jPT>l=1a1WCC;Z4?q&oLZeAZ+K9K+..V8rT\9V>Bf9k^uYY#sr`K*nP>(4r8%-<$co
%C4a8X.m<lff#B+Xot3iA91V%?R.13>#?En!TI!Mfm'9<NP]d?pU-qUL[QHJ'8ESj#1"%)`[NjdE8hMP5WH>E4D1(D*S-pa':f(\m
%0q=A^0s\`S<\^_%V?TRo%_p"><,*#kZlMWW]1f2K`^[trBdX(nn-2rtP[Xba!6R!OMlB9])lYMZfG=nc?6U\R8iks%C-nTQU@#`B
%1dg,2_[o4H0Ma5;kpQ:]\X2)B(P%Yog#>/r3,GXhg1I_N^lm08V6od@!#ML9W,d'<'T0_'<]]M"Y.lb\1W+<j\HA)>M1T9i80<=V
%q12kYm_U84:Fg=Y4d0>=,Re^p?/!T2DG+<3Pj*<q^olT*LuuSdGCVFq/N)TJW'\FaSsdCBa4.j#mGJ**Dqid@:i[#(;GVf6$6<m-
%ZZ`inn:C-1-]F@Lal$F_[6V>1JeTDem$Y4&L)UMgh?;81$9:?!!lts&RWc>nXr3!A06sq6'hqW.O]^jfj+*"7:Wg;,XT(!H0s[:W
%*PLNjL.U#ld.4-V+L:7;O&jk/Goq_D,m=T+7EULfLBo_OH+^"Hg@L]NkJd*\>4=i#=J/e-GS@$I\-9c3LI%!<F^g5Sgn4a`".bZ_
%nu0mM&YePFZ6NU3\ji+G=^WhCiOhGs->P.XeA\'k60j%>$PA/iW!gaFfts24`B`Z1Ne4N4,$fni,d%X`gI-2em:F`4LihZ#;de(V
%8D8dh?BN`"AW:q4g16p3%6bl50!NU2b(r]@J3;PLdB,s2>S[U$Xp;4&=Ob5V20'RZJ!>a)7eRM)k"A*:E(b[7@kOuQ!Y;*59]uM[
%49^!83c-%>MWfm3-<_5`4@\gkG*iA<A=C7uH5DY90iZUH!PAK/Ic_!R#Ms1$O;Idc&/3>9[IpJP3@+B]*G"*09?cEa,_<Bj_LJJX
%5X>BEKsim8ODW;S#r9kV0/?bVJuKVVqO>SghVsUlIrqgG7Ob]ZdN^,2]-7/Lbu5D.aDU`sP/s)&2BEHqW7;.6IIoK&G7A7^a.e9p
%L8/#<j+mr>NQjPB7.S/lL78U9/=1\0bTmq_#@&FlPB&<KoWLg'Gm)N:GopoZOG9NpE"tW<"7I6)[:h<`?3WtRWe1^2L<k6t)\/3G
%g?*BZOrCE!;Q_n\l[g(i>Udd^$n9a2e[&F*.P9Cc@+kfh1=@N!RZoNE1@4h`H;mLgI@i>:K`7MlLXZT@-/2s4(d7JAfKLoD*YTkf
%=F/b;TLh8o7:@d0l5Vjl0go/4VLmG6Z`oM3+C#Xl74bjb.)Nj21EWiY=d1B+A[i;ieHN^J$qK`WE@b&=`Mek#Pn4`)&KesoO5*:!
%*CV_aM2f"64#7s\^b#mH`E`p*!DsJ5@3-(5QO.K*8MnS'+LH4K%td"Im7roojZ]rA@;IaBU6#'mV=]!hP]i,;m1+JeRi;a_n'DN>
%C<CU2#]Bh]UOs)>e``,T6<jof2Srq@=ClkFJMtj<nVYQ,Kdbm"9a&m1PAgmmLN-L4cVWQi`[OgGFn)W?jG>H_s%BFDaW/aOQ?^f5
%(_J?A8`2>o1.D/&=>F6<pE$Ed<>pi2XdF2]&rM"FHJf\jP'P(=gs!t\_?e=XA1aa<d9(W:ois_7_+%0sA0aQ/(IT50b+YXB[j/gI
%2]e>&)7Ln]rJRA*KY44,(YPgA.4^RZ6R@^$(jb1$723T#.V*)S1?0'8Gb6J%d!LikedRho:a$i7DNQXd8o''$$8.=ca2]cVTSbd>
%$H$8]W^nigL'T>i<t?D,9Slm](Xb9EN)1>gT6FeXlen<<)p[K;Cjq\lP2!@,EumYZD5=1ijE\[WKcmU0b^"/1i.KS^'3ONEHD.qq
%3[VbiOUE^'lQJ$JL3+*ATeLAKSQ3Or8@Kas7Ltl;*HE1f+JLb2Ah[a`8nDTt_uuA:SIDM%g/.#<6],k=BL?=&#El]m=Rbm<rFi*A
%OZ>1[AkNR3%iFAl1",'Ge7]b_I.2Vf5[n8EVH\_a5\$*$@5->^VhOjMcD73Z[TqnPN0-6WJ;An?LS!>/qdYmTBL#+K78e$=Y)<0J
%&gom&2P-GOH_/SYaC,+J><(8+Mo'X-"5C>+l.NLtf^ePN^aT_;Ai?cYk;\2_[^m;Z.PF[RNQ*a_ZK0gN94PA&8*Ig>48S?<"0Nna
%4%!OW,sG`YN*!IIKX;7A44=6B/F!q`Z=unk[u.#=7>:G_Wbd[]o0\^d]Fm#^+0V$/78g"jPQ/a&LB\j?l.+gI-;'UVPrIh:O\$@_
%Okk[a<kJf/SsSZ]ZS9IXO@s&uXi`/qOc#Dfb).9DFe]0WA@0VM--u#&e'@MID!H:Z%m(\flR[Ig5>S\c7uM*43Q%SW%1)mVdN^:g
%H<>HL]2DNulf+@*O(alOUlqb@YMO@-D)96MJ$X7E*%6)paC^us@,k84XPo>'\9W&4jKdqla<LoM#P>T6jA!S<@>K:"Oj#i6Fe_2^
%?BZg$L4u9QY-+XOCH\cGmLq!3U4'0s;YuU8\i+V/8FDu[-2%Q@`P5b@43Ogo)>@JnH'TiRG=mp)+o%:O_6-Em1EZ4gao;A3A[:@N
%eRU85q*/7&EgE(dl#G&AcUuu[nh(Y`^/fA"l'>YR^lES2s+\,+G"_j+#<eAA+_'tc95!FL/$>e&*lC*r(h42TO)%TtVn*]UMec-i
%,:j0nM(AO]jF:-7,VbHQT!Toao>pp%N^N>npiI)..KZ(XZQ>7!Y?2*DN>pmBJaoh"dECk(cf$Ei"j_9W2SF<grgiY4FQn05kE(N6
%FL\b9%Mmj*P*%@\j@1KH\:SQ2EEL=m.keTa(]l4)9o,k>l1Y6be4H-]%[HWgG.c@\AN3_H]AuD%,\R2dI+ed;#W`!D:Pd#!Ug[D4
%.E!6$X9qTrT3I'C&5HsW?@!TL1g;/L-50ka)H]$V3\$b&.@iXiSuR26?'N/:o0<M8"[:+fcQ<hO"W*o`'7;;<qE13=0hP`1#YTgP
%9;d[:-D@8)ZQ,`3,nURB?&1/nc9A-F&M\Do9B7X\pVle\!"lC%^u(ikMDWGZV);sV6q3Enj`B81`0'gA)UU+J"hGc+AIQ]tFGpi3
%Nl@(sFgSN.cYGmaU0RbPH.;I%Rg9oZV&Fba=9?P'7]HeV"ZDMJf1?6aI*lggj2Hs/GfpZN;0G>V;%FA4eU.KH1.KB\qlW<q7H_G)
%\+PP'+(e$!8qISUZh6)$;&q"&Fs&rZ_cIqG]]`F;NI721Ar_;O]OLQd+tqPC0(=_DR]$'KYG:pRCt=BC,pAjcTpl>NnSfDcFh#P/
%C>0#0"(eQij>geZNn?pZ1Zl[B3*a\=(hQ2Flebi^MCW:2M06@&5n%!OctSn-CXppi.#A?G@Y%:-%Mpe()=iDQmJ&ei^6kNfd3S:C
%"s;C^)%60pc%f,+ic7fEE,l#eWQ24,:*[%C,C?&R2"O$&,+0p"iu>9lF8/+7EhW_>9\[Kub9I<U].>LHB9CTZEoe!T)OWZ/j%S#m
%MRRgp:A[()\Ch'Sj@'QW,aq\Kc:Ce-2+'QrMG51X4E5Qe^6W;K6Ourh:b..@7+CMWI#&*13&O^;Y,H8qYEMUV([4s'fC6.=UX!A#
%DOVc#,2L@=kZZocb+L<1f)C`=,%@DOS$!iN'r'C?]%bkZfZ8s.:&nXhMq9-,N4'pnp\@iQSG)FaT/A8IE<dlTo<l+:dHWj4,.S9l
%[j$R,$ei1S]gu-nEoqb4/(h9:Ok/[oBtB._AjUJ&_PS"8j)WIirJ;I@&Q]7l-Ea;WQTV4Zi[.'N45eh4g-n.9.?)p%7/f_^M8T'*
%aY6[ba"\-QE#k"/`N^`'A6jL*)n(uU:sZZ1P.PD>TTg>eO]@er30@Xb9aD_4&+@l1M3JK2UJG.!.q:2b*jiG0P\:QFYES+c!aWG\
%[jq14L,<.i0!D&"QFpnC(2ahC'/R>k3O:2L7"U&1>;@u;OhS:8C)aUO)(46EiGN,;ZQf8Z0I@2%p'FgZadWH=a;=(*4L"uZ#'c;O
%mZC7Ln0[p&aE4U//#pBAXk46*"ZA!3K0'2ij!;>SPg$=)0iHGo$46;HfuHT$0Q%ZqlNP"+`tbH-VONU*N[lAIkM:X9%#FWO$F=cj
%TTbbT=D;;!+X^H,2],[/,%cIZb/gkWY)$kCek'GB"kX$JPI2T!m%DhP![tfMcf09,8G`e2LNKkQD>Qf*H*_e6N0>g!JG-_I5+]mn
%E3fP0"Ma)28ZK3:AJXcI,pneR0%`Wp,Kp3mKj:m:h$!7Y`YtO!H(ept/t;u(e`#d[<%k%hf1Fle,MOd-$B&VfG[I%!'*c\_qB,#I
%Go#Z1E76$>1%Tp93mED_`(i)qU?_uo^b*t[imqUB7R;,lOEZk[(\phurnsZGiq!>fgBQQkLbf:^DKo\8@s!7&FOt"'7m#E#iPNSG
%7#aG9*PaLQ+`hHd'Md&>N]-CCDA$e*M[/S.454<7:E#W,=i!QC)e&%h=9g1A#pId;DV:%F__%h7L'A[/=d\oMY-cei,8'!AM0;8F
%C]>'WY\MV\"W]E;;W@<',U?+%/3YeO_7-LT)q;+j;8ZdGG5Pap=@a<'A9)=@9p\g-r)uWDK(D,B#(;=f((6n8-:WF,TI%BQA[KIC
%&"=iR*DA+oJI^QbD3h!>&<-b>qqO1CBTL1_Ghdt@#a?usD`fF&4d+F,?lm6&;2T+>mqKc>ot`3[;rp0u</C<(>27AN=Jd--O@\(M
%P;TZ9kk3;bcs`f'd(d2Q3%bqQIin'AMBPGQSB*WV*&>#Xb#F1"(UT3JpfK?a\LA)t3aZ^L!\XtUN"rh>9SHGg&T-0k*-d8VL2m>;
%Ro%'57'ljt9nh*F)1.+`+>l[ap5=$n(4*C(2^4/2R%t1RM?Bo9XS@0:@&#G[Jd98PO,S$9n5qYGB%;<AoO./>H8[Kj=cN-&#TlJS
%X\"aAcGW772G^pkN:a>,;HO=kcnUs9=XDQ$B*ObL@K_Io4!.HE%!;"k^5&",1CfOjAo'iDf:lj`h^jFuI5lQ<K&emZB(F=5<N'UC
%Xh/5Zasc?"D26O=Yn!4?^;_`0cPrte;Tsch"X0;(HAc#RBe)T`e>D8gWGOU)_i9G1Z&.ZaAsR9TN"XEP/4PpHT%to`So$Y"),0+?
%];Q7WZQ$&s04cER5"@^iU@_;b0P*,uWr!&0_5b_BX#N1<*8!=Ipmfd2Sn60#$u]TSWOtcQk=:ad\bb/mV-!h8he@=<("\2<clUMJ
%\E#<!1Krm59qa^IlGtsk!qIf+hc7D)?S!ds7=8o<C;mkgg]Ci6/mk>TgsFH"_:%>$qq8];FIg1N#2YFT+CQVg,YI7,9D,3#;UYqG
%4%P]sn:h#q=2Q.]qY1mqlJh)I.376Y,6aAV.c%G/,Te+dN;d+[Do_H/?0#!Hki#WKGNme/qa_6DoNAJPNm85<9VV.b$SF30KN(S'
%Y*?mlZjqC;V%7bLns('XTZ99pBU^tkr9_p$o:Y/5,+Ea^\CU?AUK6:`8M5'*JNRE"W!r0EV-,>G4eM[([4X+bB!7,Z`SdiSh!_Tg
%XY]Z-\ff</K3l<P'tnH*P8hQG>*,E6m+%R*onkqSNqXK@Gdu:<p"S6Ge(2C<7CUi/$$&NV^C$(5]p%nN[C;B)r2a\fBAHHLlN[8k
%.fD:@HI&tV5!1b]Hk,'crF*It$hAb[]elHGYMj\W*.819aX*HQnLTm<*1XGuQVdsZFTp/I!?LsE(&Als2:W[o)%:.;><;\:J(r&l
%]IM0u6)2uMo(gV%hlPqrq44r&0)H*ml$%1/_/H&g#80B]gH)BUTa>NS&fWaB^dOQ"e-:,ijIQ-C^rD.!QU3dtFPG0p,S>S68JhaV
%4H_2:n"&X!NM'G?rdG$M2GH^l#1"WO&*n`]-%jn0YKN,1UY`[0Gc;)fZ0ho*"tb]pe!NZS+jMnpph:s"\Z!a]Q(garR.rqk7=mpJ
%eL1P5Bs;q2$<2hKAGu4R:33U1/%X3uT'),;XiBg2[\d!#,?,f9Mue2U&?\D21mP#nCsir6Vah?qDbpuHs&&,_MfOr^0b2\]JgA5o
%p'gh]he:Nc3e$t=?N%25BS*t[3`d-o7>'REFcso?nPJ4#n<HmR<?`k`.TOdQK'"9/2Ph7;'M:)]3!Ru9X@cTUDKFp8d98e81f37l
%+H#N.>&Vt7#r,\`fqZP!1jCt&OJ@-W&9rcrK<9ob@)ee"EJ0'l%(;X=S#rhGger44VJ*SYFo5D`9Y\!jigXQ/^C4kf1Nk:H.ZdNm
%m@9WoElHbLX\T>62AU0FQ(hI3ML*YuRRO8j(S,$/kSB)q;R'K.'YTZ-;G11b0,Z(BA<lME;_"$e;R'1NPtRAT=N4p[XHiIa;)ZTu
%fj;0gG04^5=>#l^j\"4,-l'.a<V2/G0e6;DXuM\5`N9h)V+S9rWHb#oWLi8:T&H*/jl+!X_/haffRq+Un31-fV<%%d(HVb2,tF!.
%Xo]anre<pu:bB_?:PrGZ1^,O3,m"cu+[iRT<B782i?kin7RLiiC.#dR^d8hU6K'"d34.>3-OqA@R,S-,in6pam#8j(3"#;.*"*X>
%.rc7.&'-KeY&KWF4Wqf(&ERmBaDpQ'o,OYO8"r&CA>r7K$mH9Aj(ap#=BVUOW.u'e<AcaXeUYP:/N@RsJYSmLE"l=!Kdu/aQ;u:H
%TXR`K0aW<EK[^Dc:X"EC:/A\D]EL9"3'bZ%-$"OMe3GBr*Zg-g_CbP;@Wdij:-SqC9QF7rYh@usUVIA+*CY.9n:2KOHC5e=nF3/>
%:`QKSBX'pcNeL]uSG\a'LQul3nH3fjhf6Xq$>Bb+R!O7`_\E^'dJ^Dl/EA3MQ3Ib.JMan[7hq+.%@G3<M/bgZ:dS,hBTku=9/tfR
%>](*j7c$Qd7:&AgK0G34$+<.A."fL3Qn!CEZ>!L>D*"P0(<r"F#"q8`iRC+@%*Q"/bI/Ck@(B=c.Tp>`!d96+Wuur.[D5nAD;"](
%m"4WY72r<F]51Qaej)ZsU6'sl)%IA==:TjAN`1JGFheo9^uB@V%bN?Cg*RrCd,BOB5d:O`UJ,17!=0C4!)-Lf*uBq]3P]5VPfZcG
%LPH-#(tF=EW*ESe*E8PS<L`?Z_SZio-ThaQ!?]B;q@mF0C#CD;*gQL$3JuF[r/oO;'@ZQ6*e-1?odU4-39'b_\2>]7;260Rj3ZuL
%+2=AAQ96;1JU>.Ub]B<;(d3A+hB6qde[SDC=%plC^j":u!q\#4_^]?"A\\gFJI]Vq*i8'gNg#4pTrO\?ba9>Amg+C-J<qbKUCQl\
%p%2(24qJ'gXMrLC+0i6^EJp==gE*W/\ZO+.D*,,/Mo<=PFu?P%2.Aq*9u1XYLY*P7@W>A'c(PcN_]T_q9l.u!Z7/ep;'lPH'Zko3
%-L&h'/3lRs"=?VFN04g@/B%0M'-GU+K;e"M;1YL$9h7#fP&;+r!]2Or,+'oM0PZIL1#C;L&:8uodb0cr,tJFZ'<lR0'fip7.Z+^#
%^ja]@S++'kY`Ru64Oh*-Mb2&NacP?YL-Ya(8?(htV%*WN-7VoC4%IT)@(-n:S88`e'?!NK0iJMbSB_It?4$D^"]7Z(ecrrIM0GqO
%\=s),&?!$)>iZN;RDC(R\-2q/(;n"?c8CJCqPVhM`XhUo.GpkoJ>5Gk1-8+p@!3=T24iXV;91_ei<Q9LA?<%<W^2:Vj/FpKoE'lL
%@U-<3e3KEi="C3l=Cb#MEE8(;>4F:3#oP#RC6HZ=7A@!XE7e#q7qBj\Kd6DEp0e:[GuVdJ65:fu4o[[Onlg*nWPlOuhm'>HG)BiH
%IT")/OEZDk,E-bskoCm;lDQ>>*-Q`_lh$o(0C&&$mZ)C4UoQ##>oi=rClf4beJZuceOc0]=6n9=3Z@6>d[cf'kFq\k9K-"--DY-_
%8`;Qk2.Lj!T5DRHC`DMLgXOmorb_FIW[g*>@ms0F9mgEe'2*nS$;JD]N=ZGDheUIYaL1&<1Gj\'`K,<:R)G"b)EHAOeCYfgW6h4u
%0q200=OTYQ,`0I]$ub**(b7DZBNZL9Q^OF]`/Ma[(2aHK1*/#G_ap37U1>m5OC<O\,B5FV'/N32bTS^F,)L_J$@j?j]1@Uu+;$2p
%7'9c-Q,8?@2st'!.&dfrO_(Fq#Wl_&T"&fuCiF9C;l-;"*f4p&!ADr2/mq9.0kc\OS,j=;/8h@"4;-$l"-qN^]0J/A!,\Y8PJdZJ
%W"ZN_'ZVFq`%ogY(@2*i6_]PUe0bI.on?UH^M$Oo[KeZrJU/uC"Tb`%!'pHacoN!pf:f<sd;6emT_0e]L*^M+$kO2IAH<4nfX/GM
%JG.Qfh/P,90g4FtW#4HL+pfb8J4h"Pi"qT1mWIG1'o*5-&%Drr&brCt!g2!*"'L1M_^(@oB%DZj*B3AaEG('HS^*0UKc##rBnsN"
%2![sVW)71]F&$:Y>_SS``)*5/)e:[$i!SidAU?g:0`qK4#hi:s$lWQ1TNt"1(2aQp[&]!#Lkd*d>\#sV*I?jVA00mk!BJS8<lSQ\
%*_uP43BCIio,&+,c8m)g;W^j%4=Za(e>=U@k_t7`)-JSBT!CXhR36N2#`)YbTJUD4;:E]3AsZ(_/i:):YuPBJKgM`YL__5\#h<B`
%LJ\LMobZ(`9QO(E7C<o_=]Am.I7:OY80?;]<*/<P:Ji]4FVNG(<'O7I7!00p9N3YWXb7T!KHei8<$+tS7!0*j6qe+g/Mt>D>e%a0
%&(`l]F!rQ4`Zb1*e29YC0Khe2$p&_nW(I_LEa8hgTjLk8&,Q&Vg:,Gl6a]2ZDkW%VKa)^O65qbb;Mc:hA9.r>ZFL>//bU]a-i&nH
%dG[AN+*&>Z?BZs6r(*0jplR/Kr5d:djFA6?S>&:^8%/-M#LcV5A$um->#%_Qc+34#\,GHthq[ppgO=4uDi/AG9^<3-;\q8n>`Wk4
%0Q%!4XhXu9Kem%+I4+]S,O2J+g5B0ie2G6J3Q+*TBJ=0IME6^MMP:Ro[906FJ/*ke6X<0`8"FJL`q<K1d86`<>I$NVOV,:HCeB?(
%E79V\6WHDE>GU4MA:>QLEdRl)AomRfE$.LqUCq=?p#po1kW[@9AJ3rTnpq6*EZ#tQL^#em%<&Je%5JU%*#mTCLGJ&nL!:**Kj^[C
%`4DcM5uV@JK,p^"Mc]!p<LadqNX@kBTJW9:)bl-FB)5!gJjH"0^[l`hi`tO=N9&X8jah^%M0[F/U]+I"%0I]?q)6!+jU\Wf6RuNh
%d[.34+iaW,?h2:bVi[[L59OqW]ad&_p(PI:*15V;l58ni%/*l>j+G8[aDoE<OVa41%/"J?FBgOj/c-+GM*H+'jI#:PacMQnk!4rJ
%AH'j3i(i!)1:.+lD)8cl!0h5VX&%.bo9;5K;D@o6bD;u6GY!U1P*d*[&2XhX'h_iS`)'MjYZ&difVrI$G++W<X@)Ppm(jn]#@\B.
%I"MMZdGR\N)SIj6$=khUgCQl+kU=iNa='&G8mrs)HqAn2(=bB\0aqF#;C7s37sZ2i["&>fBW-G5/g,V%9=f%*fdXYFJ1`E-KV\h^
%o5::6"lYUG[\,lshMrX0,N)3#S8d-]?S9,1$1ML,Hm&K^n8GV3fiC(,T21\)'(;beN2m<^8An/!W0KYB0V.u3"u4>X77WkCC9eS1
%s5Xe7W^nHtPfZcgDi2%3$Lt)pC)IUVMln?[M2,XS0?Y]6(A5'B,d?5?A$SWQ9n74d-JhgX\J`luTiMb2Va8p7crC>S4dmf+K[>S9
%%e8$U`*7;>a$u+&RnR-8rYn#1e"X)2jn-p`!H(),^VNu,R-_'0@>>*f'Z,LKpF_1*p]cgiM+pn27jU9N/iU4J9:Xq7`=?8b0_iQ9
%,m3HXb^mZ(3UHMA3V)'f`$+Z%*+N&GY7doU's9>aG[_eYO:k2W7ME_E>qDR4QDj;?Jf%LDiX/OnJ]AP#kQ6eun-B,852gfHN&'l^
%K>P-&B071dJVYt2(gI7G((0(lS+3*i/qotR`OSQF"C\T\7'ls2NKuanCU%F]FNFWC;<ZsO#JRFYiCb$)`<puI!aeR8Am#^)2k"Gl
%&qNj([MkZSPr@YpS8X[_D'dK6MIotqq,G5d.2j>eh@Z<#"up))MljiOfKiLW;bCVu3^V5*X$jgI(rbteKgCa/Y*OPe_@Zqr']Dku
%LR'oM9c%\Io[mTJ*iAi93C[*$D_,Q=iJu0(SEDlXn`i-[-$,[<4ND0[EF>(^h:VkB;"3-i4g1;t+h?u/r#p41EQVsG9]K*f?B'E0
%6p4"kNpXVtk[,8eor2p4-CKh7r+\E$PPEqoIZ?GI(4,(Y@].0lBG.eF\F7qD^RhO#%RVUN8_J/1Xko3O=?qSreBEL28]'4`W)(2I
%0bl,;Z>?"-T]HFB_`J_(0H%88ef[cA4T`T3,():"XZ'S6J$hu2iNNLVReW]d,JTXBBX/WX-gbC)'jE3HqB?p9&NG5!*#5,+N3;:`
%9@7g(+`H+MG$[bM[(HSG0_OrA-:ul8BZ/2V3do#V;%!JC,Qt!N[RM-4U=`Vk1L0"*#IiC-3<n[d9?4Au",6K1qio]4VNp$<U=V'V
%pNO.E:X7&Kk!"2jEjZ(`s8IO4BDGi]/"0a]#I!,U`:'s140^oh<Kl:nj4GJ<(M$[FP1t\R%1V%G6(OFq$]7@\<jb'"rcSdsNX]1!
%OB2k2_+R.8[+nl=Z1FDo6[jQ:XV@ud=:QED%Y01CJ;>_$;g#13<lh?":uaB\?$?XdA?dFSFGaH'#r&#T:n0L3L-ct;K_.Uf;@5l%
%+[aN?[Rq<pZ5d<Z)0Xk;D'q`m"9`kGc=F24#dJ]:iF>0I[]OUu/1^0;"Y5=gjlB,T<tk'3@d)H6^7[sJfRTNdBXpO!&Mi#[e4#<<
%`7?c)]WNYXfUA\+=)$\aX_AL?\n,VbF!fXs+:UA+1Gg\"<*P&[YcP'+PGLc_o-^e4j`p;bAU)04Q/fhf2;(YX]Qi1O]Qi0X9-;)F
%Cg2o8Dd.rsXDKt$]Q"VP'uPnd0h7*[EM@-OM1ne/d]/b)=-*ntc^W9hPQM:-4*FE-o+!C+d5B!Fe"^^0'NL<Nh:.t-V*TIu4>`^1
%!L.ghr0enZJ8;AM66HBo!"=-"r&RkVGa"i=1L\o_#c`Wdo*8<&G>oqb.D*WWJ6FhX0&qU_SJS&"bo7dW+dkr)XqE*V$&N%=6M,t*
%q)qb2:Wot7+J(o^P.)G`d<PR98([sQ1;PFIY8P6tVuj\R1rtelK)AdPH/U(>lPPI%&>Ohi&mgJBKf9l1+fu1/,Y`p@3d/6qBL\Lq
%IZkH)=F&@Pm-'m16B##:cRYHZLVu5'i!E9u(<!@c`.gO9%\?7:/JJoUA&s=K0P$@]7C8eIU"W[D.P4IqVJ5UJ:k8epF@%\fY=2UQ
%2n;3D4Li2sEahp\)5,/MqD]$?Sq<u0B>Uf]-&"8q3]n(1D1\EH8k#`?=L*:D#UUQ8Tn3:7HVDG(#"i"#&gpB[M;TgBqEh(W*\3ST
%AQU5i:SC=Db)dllP9\;j+M8J$-+q>&MJ'd0NgCHD8rdKh`2EqtiR_O1iD#&%81R%d8^efi0ra5insc-\/dUFD+=uJ7-;\+l9]3d>
%7&f6lL-U]X0GAme'GTD6aFngmA<R]r[#Qi%iW_<.?&knRB[GCh62Dfp_[[9iHs:f.?`t\\W.5:V0L/_uUo+HkKAW>a+h;0OBNZ',
%m!f^a!JH.6SUB3\j+r3h;c%R!7)X'8\A,1sLLK9r<ADo21l_iD<17B#+X/s.F(A4+6.8Ma)eC!&gWZ^UDMFOo[0^`RLl/=t*E=iC
%D).+Y=Aafa3$BcuP*VeGJpAuC+rEJ"MC-Dq%9:bT.r6kj,cXJA]kfCP/D<=O(/+En"?RQ)UjsI=CG?A_7550YM^8]PF9Z3Va3inK
%a3bN(O(6/`052rWd,OH5dGjOPVUrcVibcg-MR=a#N43EI=H4QE>E^;O>;P#\HF%Rk_E;^`$Np(2YO&]u$@R0oG0?pF+KL3#O2Kkc
%27RtI]CW%&$cqdW^"TNrRXXGOLe$dA`IBN[9mF/T#^5J\rEdiVb,kZ:gZeK)R-Jt1;<n?Z!hn]sD`<$j6i?6J_RCc*_aRR&mP!ZC
%+$ujLZT-<-^X6[jk<](5]U&YSH`I]3^jlNi9Jnj1e8)a=$#1=4Ukk-Vj^/<Lrgdp>IS#XjCN:]-a;\*9Xa[S\-l-#i2(h^I9#U[&
%Zek"?ck_8*'UA+[nRl-)pl>/l7s%*Y<_$(mY=T:^5V$jX9Ugq+ofFQ"7aS4@U[*N/)He"fjqAn/)bii/J%8YJq*+s!"r;b;78pO8
%fW4bH=^#)RX\7T4l4#2r@aGe;U3X]t:"Y<[%D5I*UCXFUUJhiqP9LLUCG^%%T\FD+=<JS[;V>U>X:E-nF9`?sND^YrcGOFH,)q3C
%i#5$pWuZ<[?E5<u-kY[=\EpHMmo4okqMH&F4tV]l=J+07G,_H"ZZLVc%W14r;JKLG>@$gF(("uk-7jrr2B%.ejkqu)554E@OIWjo
%2bbRA4hE0:m#8JfGM;T'DeZk!e[r0IgI\d;gp`b*hbGB613`-JY2.m@S%Eibf5C$1!Au4<E(&8Z4cnq:"k^@GIf8DRigo*6Io!Uu
%b[-=1Ya6l@lp]+q?,c_Qf+s",O3eFGij/5U_L`!sBZT^8@r_u58nnNU_NJ7<lph\SJ=dO0h0,RMP\@5"hl,t[/IBQDd)e9s1*l\G
%CB(Tsn7=Yu)"=?Bl3-L/0/N1`f4stb4];\tFG6BOU'b8hI9LQ$gE\NJU`K6DEaQg'(18NP:J0i1':bdBj$lqV8Wi!krpbJ0O99r?
%cgODNO;)_5,cNQD;j64Kg*F4&c)L"ImP+n&8e1jPEPEqs=iUi3UF@HQAP=ul3)LL3Dq6S<2"hW0qmK2FXB#g[epYJ,.V^;^:Y+cS
%)sq]r#$h.k7]+9,AtWstanaCla`YQU[etT`>PFW+CoX@:#L$Gk:QiJi?0]H?>`KKfRg;G_*pVMGBBcB7*;CU/O?%/]_!fd"kEeJ1
%L=L1+2NW`J?=X5]6qS#(@eR/3%5Q@]0gXcbBnreKknjlLFLQlT6\BhdPjf.H-)E3l)q@GNYhOZ9PIu_S&S&9:33kKb2Veg'B)u&q
%,Y)f&(@s9Aq&&[M%/E\[+\SmBRu\_JlnTYMT)9E\NZe336(n#jnpClAHDm9n+j\2jk@;TJCOtInZDO]r>,1\/j8$4TI,&s1DEK""
%Ss!J@jd8ChSRmbg)"aVklrVPI[/Lq;=p*A<"2JZZeW:[U9.$$nI3;r=e5&m;h4W84Jh>H9;%3UV->#,+FA2YY.JOjf>T!d=Enr\A
%4VHe=)=!H^.@NcJ=O21),%OU*I3'`)LWS[eZ?_gR*[\LU@5;m^_IV/'=[23T6$"'J`*aTRWd`N&s&j7tK&1f$W3*NiIPZ%]HlbMA
%5c\$#dEJ6a=-Cre!HqoRj[dbZs0$n)QeI$AKUd"KVHbJim>fscBIh\k#]V\EQt:RgfcHC*/4Wb'_2#!"5'5OF'o_q5[B2W[d!2/c
%f.kFgM!,9pR;0!9fN.ugKD.;?JPhSUi+3sSR0R'\JX:Z?AY:]H#@?PDQ[.L8.6n_^Tn+!qKd#uQH/N7k4j\K4AXpQZj@mABRHH@`
%!Mi*FnD*45d`cQ/0ih+[l9d,/[Mnno6Um9h9_/]DVG\Y[Cbd^3)ck$rp+YC.@QJ1ip'iNaD$,"X)2$Dq5;qf?ID;?kDkD66o?M?i
%S't@upj)$^*UPQJSYNh!T)*nU9MbH'oSrHJS7ZOQV_QnJ^4Xm^#H(.uWG9`0$XT[N\KNVN>ubOq'sDXGb[9p%9fmrp(>J&rU76Yk
%NaS^f%h4//'o"f$)&bZuc<r!R2U'H%K`=Ci*$np_H@n/iR%463I+sQD+FMdPjPBTJ0-mni9r?C?9sE65Tg?]pW(kY:R#sfDXjba:
%cpMO2"?";Po,FI9-ulSg]_7*-1Ylg3[*`X=kcFWgPD3GX=O5B!XgVT=pO94nGq&XQQe].u$9'EJP?^4hA)p1DSspon*\uT3PbOS8
%IO<6@Ze18oJ2)_F[LTn3I]`9=Bsr-<c(6jJRsY#1F"XlEl/jT\QZ2-M>PcTGeR&\%o.BoQ2W/Gsi*n-@6Clo=`DR@o5Ke2;:K+T'
%C)484R<?,SDAc-UAMBnVm78qeNS\PcN;\G/MqdXCNM;nN'[:Kh5E<g4"o1!0nE2=CV`B>n?U6l`RUB_Daj!nKcPO^J=-1br"P<GV
%np0CXmi8N.ThTms3+"s8*M)5<"o2-jMmL!HI,6g-e,o3AbuL!p]h(-KGUpn6X_"Y*(Z(\U\5k.u,Y+AJr+aPr]P>u.r%4@T,[Z5X
%:[J-hZ[]LjFT7TZPZe3]'N*-+@B\OgAdqPTQEVLe;8",A>7>gU`8q_jn[T=J)gIq37mCZfA_%qMi$UtJR.:/)[m6#NSWeL)C/dN&
%gbbL;,]2#4aY/(`:1AR*S"[`@$9Q[bKm-!bH^-N#9YFt2]pdT*eD29HdVc:T+No%RLWS7lX,5NdjC;6eg$;uW2b=munU"fJ9%^1C
%^IcH1/F8O>I8QkuOL+\Jf#(6\qJYjM'/MSVD@AmL-=u?E%$KOF!YU1s_X&_(RluTnc-%Zc\V]J@G[*3#\j7T3@Q!+=PG0"7:sW$(
%KY7$X2!B2Wc33/Le(2B!s$W`,Da\\Fb=N*s&VAo_L*'pP'@nL:^KE_0O_SEmQn31=Ph`@Hg")\<-I$/flmoF%6mma$(C-90+*IKn
%pJg8a$rb7=1Dfm)cV0gSX)mVb+?(M66)g<S,s;ceUpU]#o&_hKEt@H6r&UHZGs,(WY6fiLH?mqgkd<+Ec!CWbYd_@).q'\shHAb6
%DEdZ954a!X1Og.-!L+Nao=+RO?_B@r,-GXeA86shFg^*5/mCOd'L$Ws=giaQT5RE+6"Mm*\A]7;r=u#6,]O.c8Q"0>2ZmDr_o/S4
%W:!:2klU)0]!\C<(])Zss0CPOAXqfun>+.j"RUps1Pa_ge`shoVBj1F$:-%.<P;NC:?tWRh,^3R!l%g&)2K&:VqM24mBeKWPT^'s
%*$r%H*T*$bi`hVA_JfA4s2qWSj$lPbmmpV&'QR(sR1eT1Uu\Al,\;#T+MV'oPg[S'(PoWd$ajSa,XokWSp!We)Y[gU3J.b3d-545
%+[JO+?R:^32@V4kqIeX4kj,#R'4452;ZKIgn!V1F6TLH7E\Zkik[.GB2G&H=HRe/_k,qkL,cp!.QT9mPR*48ik-AP.7EJT/XB>lN
%82JLep9OCBq[\NcXZe"&F]0l=M0A:][<c1l]SQ_cf"f%d9l_UB4/:>?T=5`@1Pq7!\`WeLRa7F<^7!Ju'(%a3HumOkA"$1NPl%3n
%j?/NN;bmZY.E7]!kF[&plEsCrDGnESC,3`Km+3u.m5j<aOI>/c_21>)4oi41eEGCK>I4c3C,af=0b$qJ#I\V'1EgGONJ73%;`A,=
%7.(5L2f6CMNF*tbZXM=imlE<6Rnh5LqeMsTg1O44Dt#)Pn[D;t8\X8sg\W;k#&"?&.A!$DdX%on!kr)Rr]4g$VOP?GqM$sLX/;U^
%<7/)Mc)MsV`fthqi;QB3nNR=8r\ng9A%u$9^U8AO.IoEEd]'\^B(:l2o=%^qSHbIrOE1ONo+uFRIlkk]aEaP9USk^g\H.-=r/I3k
%43*iS"HO5\]eRu#k&97l_<l6E=Noq1c*rNJHToJtW^`^d,Z]'5VeSo\qOC@3R*,DV5#l)V<T@6kq"]9QB%]>ZSlaV$*4K>0>%Ug%
%:<\-oRIes.ID0kLPF>(Hh,$fP@]"SaM@:(q4p0o])pt&AI4DS%Eur_r\?@]LBM>6Om*%^_6\^>@6t9t[hO>k`o8(CKU+pL:1QQ4n
%,8rKeU7oe36plj%)\UPcJ\<ID?mgj3=>YYHm"p(+W:[Qu7hH6SU3gq6p3\g9>Dp0l>GR1\"<a[5ejc&&[!HW]2g[:5VW?!.b3Zjr
%$cQoTgsu4I'rGd*O;sT]IACNTAqde12u!(/rncGfS,7QaipTIkRBu>Mc/?d8-"\7F4hg1Op`u;EmdSIA^:D-?GPL;1hq[1[\aAP0
%)05LQB48fc'S"AU^8^Yu9Y-i[qK[<D$oWGMYNIFABCehZC0k@]q@.f'cE'^Y^8<oYdn7fUefWLTM2qDoUU_;4X0HFOQ>'E,f+bHW
%<a+Y.lS&&J1U%@$(8=JM&e;b&Om`U$2qKA62u(oR1H:=?0fV397Urf"aY90:+aHG1dA5:Ie9=#1LAm1sGUBXH^jJ*t[4*Ae/TbR]
%M)F7Y@Js9Gr!)NOI3QL.2b.*NiMA[N+lYar>ci,92k*+n0PCSh\HphqP"F'a8dr7i:Z#QC$26@>HFM`"X2/Aom-XZ:)qj=XqN.8d
%JDuRXFHdb0EW\PVf[%qJPFjT_!sb?2NB$T:X[GkMk4DL``7u&b\qG!ph&W@<VH^gW]_q@JDYPNs@oG&R&tu:o,PCXs#`GUO+S_Qs
%h"7u1BZSFkC.tcr-1ldS;HW]E6GQ.G'(D)/Z;GNE^;Onu<PMDeD96Us,CiOHW+N(Z_1[9Fg:utbR>;Di/cg2pA9@t5DFdT)X4;Ri
%T2KcbTTc*BU5(r"Zn>q>"Tb),*>7YPf91-I=qc"NZ5ap*i#t(D1+X9tUe("ps7j>Sa8rW@kBA0\$jo!L%[/$5-F:00KpnrQiA^(h
%;OVgk\hKM&%9ZbF@7SmOR#+_3V3r_e`8$UH`I'#T1rX*-M7Dl!.LMqf8uA?,n/bn6MJh^kSlqM?,"'RKl$@7B>SILnnqP@Wq9Olm
%%@E&OSY`kF1;qE"U<Mepr/KQF4r7eQI%:i_:hFc$MNgT#qQ>"-k+]p.F&OXTq-9-bbBbZ#U.Fh,e4]`kbsda<k,(]JT,a]<M0!F-
%g2[VdRUfXZlka;+c1%12`6I&,ioW)9[:1j^$ta6U6aDuFDUPYfaYmc)r7+24o`Uh%G/(#Gs2`,9Dp$WqZhf9pn[>!V/%XV:F:tc\
%T.@LBVs#CpFfsrjMJd6!GMh4WQ/bKC(+MFecbs&.Y?K2!aJB+ZXfeu,7@[^95$>DgW_K'Fo\"\g&)V_Eo3BdF[FRp2.sCdFoA$M+
%oZoe!mWE8pj/@_nqR#<B)YGo//.D0LeS74lR5n)iT_L&i^VYHjrG*u"c5Pn8U(\V%jmigITIPuZ2:.eC0TlPegOQ1r;'nL.AK+IS
%!G*3H[K0so[LlUF$;E9Z;':ATq")E<kVK]s47)o\"C2S)Qd+)G9lbq#ZhWdkXWjn`+Di:=#"9Gm[qpr/Bu3(YDg_Z[_rWaDlji?J
%m7%Y!V<%@>M]N]0o712K\X3(iAIm\u_Q+LBlT<o!-`8H)h;"n]9!5T&%hDK5eD0p>'X@*/6-.8IpRT,"Z`O59L<2-(C:963(!0<u
%6Qh%J)oBrM1dYZH&6`(r/@UM[2o61KP<J4.c!"X7/=+Q^Y8d`9QrkP@Nu?/6HEtG[?bI;=XQXlo<O&K'Zdu>SZJ\=)m/*>[<gb_A
%-HdCSm%bMQjGOn+H,#B7VNd,B4Q&*0pfU[d"In`e6tkNrr67Y!D]/0gE$0Ef;-`C-oR[)$CQ.2\N=kcWHERpb:'q>ElubQn[Ou7"
%MHq@3G,ofu<*Q#WCA8KRnF8g&2fagoo8HJIf`L+o!3TPLN?R,g;76.#'^Qf]($$MiOeU$$01Q0oY8@EV=;cQ%9L[@fLSHh:(ZHH(
%.p1K1V;sKI`G7`M'ImBVUiO7:MaG7eZ]WhS6@VBnb^\#5P)[=>4Ar0?TH,k)h7_t/UP#5uUX1$hpbSTuhYJ7$4=5H!J;i=n]$pp<
%q<`2C\;YC;:e1k]NWW'5n2+!?"suHXr%WB5odWmHTnFa]Xk8.:7u6>)c@&B,Lfd-gRuXS='c8(9,oc[=PV>rR9$5e,R3<0>Am!.1
%:;KiuLK2]#b9-jp)k\:U5pFaHo8bA+3jh/\n)HJZP"Jc"3)$SlC?.;4<rYRU')fnIR+tNtg6]JP9h->rh#L^'>3t?iiQL7L9fp#`
%\?k\<fkZdT1q:b72X5BqiMr&B/Oedq>Gp<6(ud@?WMZ\nJkn\Ud3#rgnmgNVOX?]E<GOVU';P%u\uIujV,:'=Mgikm&t-G<>U"m4
%7)]i#TZ&iao_<441Q;)3^_rS0YurY$U`.O9;f]i59O03h.PX>Fo1'B\*jY/;Q(L?`Y?%,DA(Yk:\,p#VkIYu1c6Kp+'Mag%"m!oI
%b9Nm+*W8hsGA:;C[>!-W*`i-\9&LVf"[$/(TVB?)Wet:oRlcYq==1:#F@11aQtbp@q_M7AQQ<\RjE='mq)>8G&K-F5)hnD'(-47-
%]kPl=R\`j@dbk]t(,lAhpX:'iq`Bi((ef6E?hCfOLY"*&^I.t-M(!LrN]MWqHeRai%_@SWUKkdA%X5NB_5h0S+Rojl2Nl7s6p@WO
%M6=D%6QK(^j/DAB4[?L0NE8k&35oGc+6]qm'&*@riSa=frLd)CmNV'<FBUiB(E=M^=5pRae3ncSa^(J5,40\t^K"'AF4pC-]KP-?
%F]3?7#A9SMkRJqb*[XIQq_j9`7>X.]WAfG@eJO.7+0Hec'A:>H&Q5(rb>PBH&!GK,2f#P=qZ"PI],=WH)@IUZNlQ,`6`5Kh:sYVQ
%jFq[],(Qd?VI<<\)Z##,\L+IuY12_nK2-Ve[UY@g7b!fMA,OL]K4\^00LN]e!4FL5f4lQYd0RI.aDp)&c$R/(\m_UQOY.h@lJ1*`
%?FcQb^l'mp@7#ES7XnJ,[+`(.F2-<&B<X<.*f`!SH+u5&fpT=e!S1<+YAuF\hYA%n4o@WfZ0g.)EL?>ukC7TH2XK[CIcl=<ZM9uS
%7R(dV<P+f:m)DVla]A+J1nFL?:"QL*3g.YY5HAM?X;OqV:'(gL:noI-,Rf3(TJBTfF&dUqn6[?:j>$L40ZfBTd`MBADU!+;eT%',
%g>i-D04hqepr?2^\<)"!j>:q>fk.C>&rj;gMD3tIA"#kNT9iX4O,J/[`'#YgD`_PKT%6HTqmYO*a840Z]`#TCrJA7EQPKDb7B]Cg
%$`gc*jT"ZtRE8Y(H[]53T@'?.?/^F!qjlYX\\jqMh-tR_iSd1QB6uh*KL7lKGH92)e'+E]/C'jb'^"t-os)'R[UM`?P78['Au[gH
%a%2c0]Y]G&P\B>>LGV>rj=p"/)WR;MTfnf<Tf)h(d/N]pXgU4js+`/"W&/;,&rP(P1%tQ8d-CkbVVaV3$QANMjVB,)DQt?aK8R+>
%-:^bE@!00OdM3\+8JZ42=(=N)e3[oGB:/B(_,LW90kFoFU7qu\<Gk,SQ?GL*bXH"BW2.MQ_SJ'$1/5@&A+44?I&6r[dO9r/]!-WP
%VbS[Fj2'3CaYX-M@@^&MmK>'Y`m@jOM8';Zc`>"P,&RgkjjFgP[JL(3\3<#(.(P]61TE#.ka9#m-c"4;o\g,3Hhg&4FI5uP!'2CK
%,bQ%*."O,c$B'stl/lBqE%b@7?6KB+GVVO[-DVr>e&8,2U+$L#;)"Da'S2ZT@!3O82Da9QJ37Q%YdtiYh'$`:h'pVq^_[:<@9)S!
%,hOPsLE3QDLQi<13!+4:NeS.$70c7=,8PW8'1f5$'\Yr?65aK4&Q%Ql.8f%pq(C+eiJAES<U$;`ng/lcp='XU1W9\t778@i:,]*X
%Ah"[+3gC01'O".jo$kp/CJen:U-_[4aj$U_[($qroicr=9hrG8Yps4U+g;O`2HYUo=liP#"7nEENeAj%2Yji#g,25([$5gkRN0nQ
%kV.6L`ZjnS)b'mOK>EJE)^2RbdgR$S<n/?GG+tjVNf,.AY(sMH$/@NZ<1m\XA!pRZk](j:[AEq>7m^t11^&pQLRa'5ZpRf/%NV"o
%R``5PKm#8JlS+\X*U>HMIZCQ?U^J:YSKR0<8V](DikDjA,N<sWc=V8uX+8,m`RG(r@p*Ou5EIh\+]\a7Z4(/%Ur&dlV'.Ji1eake
%po=ZHg3n#0f(BeBKEG2E<Lb+1;RH@ecc.bCNA3]QLfl7'C&8R?:a0"RHuOW*MFe$Z6lbF\8O2K4Y!"?/TKu6D54<\\Z,CM>]Mj?A
%OTJ]W6J;G'3%9qa'%4WZm1`)Q$#(So)PYd_A."Ed"OaW40p7W%(,:+J;U$CT90t+2`2Ed"7RlWNpE9;M:SL%%ct'PJVQF^4_JtJ^
%QK<Xr/D,t#Q=J.U&e#al>n%]3(@)Ts/"gQ2.lGk+0lem6(NR/'r]BdjDdiQDrFo1Yrp7"qhjcjBnAeT+?YKpi0Fg>uqMO#_W![rt
%q!7LHe\J9cT=A5uibhd'XQdp1C*,A`0DdmSmN4[U2_Y_oQa+52i.eHj9ZlD^I9$>-ghGkgAb1[LakDm=rpeA6D!iAu5%o,#J,5`(
%qT.K/!#Qf:gnlI;VAm:_nPpn.P$!6M[&OqYaGm2*-6.,=.L8/92f!s5kZt(e(3nsqkfLKKQs_1ks%0*_rCRs=C!llh\Z2V*-PGn3
%68W4VHK'l;^/A)1.BaKuFugH]l)aTj^"29ZW5!+ZdC$-<Ri,WV$?@Q@WII9Q%S+9PnSdGD>GBn9rFZK4qZ^a)DPLO/*An>@><!KX
%PN;>.IWd=iIj+#Tk\_j/ri+Lq=g-M;e&EN.K!`pINI73%/U^7T=d<a&O]tTo%":nW:#WaA9R9H;4g6G[K%&R_Vg^OM-W#E=@%sVT
%+c($3qk"XD.arLl&C@gZ"Wj!rc_ltAIN+]lD^0>4`Zc[+4=<CtU^E;,/mrAi2=@Q#1T`;.mR:#%]'WNO$0O84S7SHe7^[D&cYf2!
%9gjmk:E[`hgGub#CZQ'(DD15CM+9n@mWKc*p=hk\f<&ER)ptNI;6(mshs$]=r(\hF`E,BG!)%P.&;Z+,8q-B0h`Zq@1,VF?1@rY&
%3F).0PQgK.rk;s4\sX#-`psiM<n/1.ZJ7mT<P<)=HN;gc[thlP].KtR+ErE9LA8JZ:^b[6'uXQ?kamR[9r^!n&4"CP:p[_G9=!1<
%[/ksnM)9c_ZFmg:GOTb#J9nm5XV]R_aEi]CE+EgX6t.l+>6.cae_km(kQ[TM61-/r\!O/Fl950ChPg0nB;A!F!-B'L"@&X<cL(DO
%ZbCo)jRuepZ%Zla'cTG86[eu8'];d!6*9"Y'^G1G+NeDpGR[n*hZPYVaS'X@W5T=(AoO-`lb8E:jE?-I5pM)$-$L8>g?(9>qAFD/
%(oH\\85X6RgJG6?FT)XWFp9d^8cihaW&K?6Q`LPYVD*'0F:[)YJ_Eum`]uV=0irjf(N8G2r.\#(Z(05T#AE(R9bDl&e7smP__kq.
%N>CT$&@D=oDT)%A';jUs3o+sE<X3IB[i]+<=8qSU8p:Ol_'oT$W#Bq-0>7Y]_VOq^N<X$Q[u^dO!DcY9-k\$tUh%hrM-C^M60#N5
%KC!ec<PO*teKk4[2Fn)_N=g9@b;!,hq%:3m=EO?)YrG0-J_.[Ob0eO\5P$iiRi[&tS`E)t;&(\mL['D#FLjbrD!RYYI?VH`g]AI+
%IB]>=6?:$i6E:tPF>)qH'B%K#&TC,brC0-eN2%Njn4_<iIag#S-elnp<_d<G;.d3UoZDMSr!kN:2$S4<8SQ[+1Q\D)M0E<lrPK5X
%0UO#PWK:o(,1VsZ2i2-]FmD29PtQ':VIg(5W.ZY)`)PY\9Eg<BMSRZSoC6%bU5CZ?($hMAp_M`ubAYs6O$0k2VQ"MnOdt1"WCUAS
%O@lD9_:k3W#RW_j-3f%M3D6G.$7B1l'RoC0UWFc29k7?^lC%D4rrrqZk,1Kj7UoX0&fQcS/;eb]h<sA(BosuiP<H\]gj'Mb<HHZA
%DZ-[$Vq?'i3p)++LdUbZOKHuXA!A17C9)\Zmp5eW&[2tJPL;o&i71:%H@dKHmm`@L(qKtk.M,FteVdkOSQ`bX6!j.Q@/uCe+<9A2
%n]255Je<,?b:TPRZ!bAQiOAFAZ@G/pi7C0)]Z>`?#i.<r\^UF5!_A)EK_?Ae$Vf0h75);mS;Wee."SK(Vl13G(gSJofF?H+o,7df
%-7Ke#UDes:KattVhrtWO;?D,qjqYs9^&\G04ERbai##u,GD%BG"?6i>E??SBrmL7?F;($75Y%27!/m4;JB'?>ZY8?Op:C>R<+=bq
%PN:2)04/M%4/]4C:l0+7o4TD",3b+qO_u5i-[H`j(<Bs@6Nm@sSaQu#-IPtlJY#F^0`Y`FX>af5V#sU#CIk%)Rs#HSYGS]DJ`D2[
%GGtMRb]=l3eN4;dkqkL+d-B^GY%JP8d1pd`jbk[j1YMJC\=CjMULeW0AR^s=[)=^)_`o7aC><27^nTS!T\f59N?6LC,<Pr/B5g1Z
%D$XsiG1il!NM\fRmGSs#6)apG+OejCo_J/Q:m7Z><!X@u\QLWX\i(O3P]OlAo7[eGUBMZ'=Z&aD+ncVf&VuE\iM'&)D76UoSRff'
%#0c][dE!g@&0TaG;.Vg2$LbG[N=8S#dY66o@`QI"]dtZdLj'5Z@YIW(mP`KZNMDbR$R,,%1b^t'&lo8<E=51e))2Fe[PeP8)[SLJ
%VP-iR7eP@e,t*9`c0iq."e]28&VX+=/Vn;S5][2Bl,cEK,+VOEe*s6J>J,)VJ\(fDO>]88=)5_VK4uGUA3KMQcES7WOZ*W+l>+3N
%BT<(-W7WEn+l;I"J0"3k?OJoGi+/^:,s#m)c1Zm01EJ9pl<>5#@BKo%[+a&=Agr;p%]]U3;<nTQ,&Z6cW[^tBj>YbnOf9WoctBd2
%kV;WiX/CWf7d'm,qtHT1TaHK=q9<M2+uBF]p0Y^S"+dot9.dm`Nj-"%Fl;P=gulZD_nDS?=baViX_EZ%HsXt$"45+#?-b?G(4`VZ
%Y;_4c!E?*S]]67RQU<*oBjjCn&HleEbu!W@V>,n'0\p>U+.+gb$-!=h('D"]hEn_Zp<_Q/[<jas&eA`jBV"5XkT_g:1FhaQei62X
%'R%.DC::/*S^o+>j8Ut#`3Yg'B'o'V/]T%Rl(AV<J[e\:K;YIt,4Y_^\'t5Pe[[XXmc%cS.un_a16Wc<Eg/=XmR/DXYU8?S=tXnE
%-[p!SrtTX1].Uu>G9A#?87bVTgadq=N)Y!l9H=k\NTR!_dL&(&N#k96O>>W0j/&(r&28cT9hXe<1/\W*0*EkjaNG"7>,-sMYO>n9
%P"`lM%&N6(X5j5kE`L'l&(]6dUmWX/p@)RN(1n7CH5':%iU@H.[+$!k!JIXrUoi>)Vd14@])>[)*a6(ARW;L?&nNlu^n:b[p"3j8
%:4=Ie\Qsinl_jELJH;@.iOI^F2YmNpb%SKU"siPtf4*cJ4s4#!gN6!$*Xms96l?S4J(KJ4+Z=6l1Bm*(NeDZg_\"d\'p!!aDGOjV
%LLALs?N>9A!G[F!NYbJ8N!@I%%8s]!4L?#**5rL%dhii*,MZ?1Hk;fV[EGr*;5\jl_@C(8E:e*;4?Ao)]3nSp2FcfU;!0F14fZ6O
%c7fc'KSB\lbt&_3M56iLKrPH<m%a1Oj[mq)2e4D%(/SoZ)^>Xm"17I-i8e`<pkSSPk/a.\#fL);TJa"_9=7,WFX!fAL242;cin:G
%-c1eZa@Z#)UX:=J*;9;Bc0l&K(3%VZh101>,;DqJQ>W"'(8N2&.N)?JR):_=CnZ/b3hL?!L7XHhA$8>>2j9X!\!Dg["9gWV^`A:$
%.64)?_!%AU)gp$>J$B;>/'Pn7,$:)C>kBL>nsW#uHLIfKG([+Qp8UuT^H^1X3AUUd$ll;Fh4"8<O)gBO4@#kjO>'7/9<@Q;e&>[k
%3q1:IdJ2[).Do5>l3q0]KA*o`(krsB,0"$IS>AY'aW"IkYUR:R-5Uk?kuqZ:R_5snq`NrI1BS*1)jCSP8J9ufVkdcn^fP'!Q(5@&
%?]MFWBaLUL.O\U`U!epV3"_At7d/6&UIl\@l+)%\3QsEu"Q!*d<f2D25\rC&!C[[Bnk$/"HMB!unSE2o82dEf:L]fV7NTSB@`*k8
%C8X^s+K&X8P?7]tM7OrPRa2HEE.(UNeD#Qf)\.?_a+SrU)BSY4i*ad:gHdBlTgpMcj>-:o/B@G,(ihdjLt6li&MU#3O&?8!@lqSO
%OYiZs4nuCsna=N:FoVE_$iRouC2pSdFa:]Ef"Csu]=kNFYZ1Agh0[_Bk8!=Ng?+m,Vn9sT[@PVSG;hV^WpNfn?0Aq:(j?^k>Q.qm
%>>ag*Y(+\\g>#eEG;m,e[Du+fk5*Bj%YoAX/"SnR]sG7X"G`iMPGcrO56(+gTWF^<#:RqOHhZ.YO'B<gpFetqj6DMKg"P]%gP<K6
%jep\c^/m5\]dnPM4F@CQPY[P\-`OZ4ZO<])gXi&]]18^qg[%g,\@!uZ)].@tc*_HgEk/i'^[EaleP;eT;IA9>kW-ha?f'JT`b+90
%g1g)i=$!fTWj*K<p7PYjGCF@G4F?j`ActYK94-#Z[c#bi+6DnDp?gk>oDP8-\9bVUOa-?HqG9lEqr2Y(;Dhf7QHkKMoaUZ0ra<;3
%C?=4@B'J7nY8$UN4am4emeM1:l<iJQqJt\>kF<<i.Z]"i;nr'DXo@u^Xk:/`m,;\lq/bHL3IL;u$!>ndIrVVY1"Q3U0:QjcqXAP$
%amT"8qss?B\ns\"T'C3k\udSlXJoWoeaeXd>GsRZ@:6k!Q.fETo[npg<d1/eY-%oHL:r(.C&"oRJ$ZMqEVEaMV-r:8PND1-f%m6I
%WV(CZj)+24RW``G$d&-Wo0/9.e9Z3QS)ok,c?e<bWd7j]=L(sFK>+JT.-d/2]B.*4`WP]'o#D4UA)W'D,SpL``@**X[LI8^r7'J/
%^GaqK?;gRH9'%#::&CT#!scSBQCg@CXD$^.B2;W!n"+?sf=o#r8m4$h)"QE3R_0Jf._Z0cp_'9n/j;9\W5'PMbhL,-0r]';:<s@7
%U\2=c*gOJnQVS^<r)*"_L\H\Wad^n9rVQ'@\9k(3IeiW?raYQ?QaJUtVJ(?:3i3YgdAhVr*378$MoL*fcRXKpG?h.t[iV`F?J[p<
%8uI_LW5GOjD#9mVM@+G8IpB^0pN@UkoZBh7QaCp\>uM>#(?i0tYEtlpom]f$Sm%/h\UN&?iuYnto`p=H<3B%2]J88eDY'q>6%\f&
%\@Y;nA*s8`p2/hm=n+[ol@][+^28++i/pM[bJdN@CU1Y5Pq+aFD[acPcd'.N;GTiC=B."t[bTmZ.cHkVjnAO0Dt3I2hGlIo5&*ab
%^2?b@i\b3<%gmlspn5<"3k#SO.a'o!0B-&pK+BQ.C^qsQACO>8Y0.&8gtegTfm0E0Y?0U$\FrG[?*YLET/YWH1;C.q=^=$:Ubtg(
%,'[7B@bda7g+k(GVhK/2kJK_,^'%Dcg\P<MK()_r7GBS@#MH#amk*ocf"JBb;-SL\oaUY&M+@`[Wi'1"Ct_<nFmgp04aH_rgD*V$
%q=1rfUZ2#SmBYAX^2:DNkO7k**\Wkt%,-u3ego!lY\JZ.%o1Fm6F&6TMUq@D3E)JAjjT"2/\ni<:/tcbmJH'OUI,>@^DuLpk1Psm
%W:.Kd:Q4mhm[O+(DB/(qHZ8VViI#RFD@l1Noa=kq"OMIgC_SN<gN@FE93i62rPsO\^/uu6[g9!<<DNCU`@!n,76OH+.5LO)cTVF6
%K>R]ikM,S(G4u^CGP/+A<;VYNmbtVk-2+_(IbWY&?HNAk\$r"@Frh@JO8WS_Y^^1O:C/`?1q7V;fr;,;TM6a?lJ'MT028i_gFrN;
%lH/kn"1>^dq+RpIJ)i%35!1:0AU>(C?QZ;ur51::HLL2Lgj94?pMZD>0.;Q#&l[r]PrS!m(48:&-^Wnno&?BE<aIBnp=Yf/]`_\"
%(V\1PnE"R<0,NM1AX?'/6ZN^:TpafMg_>Yi#ZAlR^1O4EG$T\B05tP+ZLhFggZ#,Dn5V!EVnKbQ!."/E^-9))0n^fU"\2(a(d^dm
%2,aIY!l&UhiTo;3/!'bo5JH(o?nG5tn,W\9GeQA;Pt(&9Z7"3C08ibb,nRY@nlNM,4!:,FK_"-__cJ\Ja]Z)H8u9K87@t\7X"VQ,
%>E"ht?hmd,7?A@+UmN!I"2oW#]u*bmhp?[<F<]/,>tHaQgir3KAP63#`.]H]L,lI9f*ASA"FZF<B$OP@j,(k\=qOoY04O.$)P3H6
%(_njJklY0_l<hW4:$[WM6W90AI4<\7'kJXkbsWbJmrN5'^*q*&A4XrW1?5Jin-d-*jPVFT<!`OkWBnrVjrIS."7u[cMTe>D7Q=^<
%V'_2&6@KWk,#o3%E;;%W_/&i!!L8)-%qlD*[ZT%sr1*pX`<[H:<=n]FrHmX.*G.$O9VG:;Nq7NA!"oVe_4-$?#dk3tW5**Lg,PtR
%8UY$]6L@8Pca3];REojdooXUnp14npnMVHn8)Tf*C1<6)E1>4HTC$m\G!E'R[ia_XQ/H2ti<IEh4YX(^(Rsm]^,[^o^E.;oWY[l@
%d&pD'H-G,/0jN(U8oqd9lY-*"RKH#U/YB-t4ej@hrq=e'W"4p!LC3aHRr9B$(/!cgK9,,\07O[)P)@;2HdF>4D'"/nS:DQ&WQ'j!
%-D&N:/#@6uZ22^\-(dB8Zh+S%k-qi0?DY5RoXJS:BWH`kWtnLVb/'jqF28,EHI4B6Fi00Wcd&+IX(^^I4,s5aU#EE+pWU_=]`BQ`
%>E<t=5.cX*._$8Va".!a`(ismgXk@VnRBN3V$M(jc]:*Q?S<UYb%]oucQ`PWc2A#^aM!(#,W9kZW`X/Ri<KfOL"WWUn+]1_D3Noc
%&bhnZJBpHH?P]c!:r:XPnb)%B8&a*S^\!?DY.WCbD8rclSquhQGFjTj4LJMXbM1ok5>cL'$/FZaqe]j+aPD47&pPJ91l4fZ"bL2-
%08S3E;p0J$MS`E!@@_g=GUj)"!RG/W]QJ3Y!$Q^&J^Ki7r*&?%[I9V"$HqbT/*[]Pq<hd<<>uH?WU=2)EuC.5rD9O"ch=`j2n'1=
%]0:NT5^coTBsEODSjnCmj2Kj&q<-LJJFr@dB7V^]+?9D,Gd4jhIae:q&IQZ!\hRQM(YY)-d=[PDQ*o=W6c#XGJZ;Z@mB*+l;>H^m
%1U=]t?QS%r.a@rOm=+$BU&;<=n*qdGY3rqN^>@c&f9SU*^1)?\5MUHi^H-b#&H_sih02#&$<n#TqkASGYO&XfNNMVTd.r;_UPkU>
%H>:i4K"]E(kPU=E[eoJ1.:HM-[f-a7d?8NR-uB?6mBqkuMakI[@.1YsVL(DU%\LJHL%Ue5iI`B88&"E.e&ogFkK]"KhP6n^"'!l6
%nAeRE:$AVf4R[OZp,UR$Df2(mD/R(7^&2:*I/0uV]j]k]'LOjOW9]E#bOa9TMpA)9WHq^Z?$T'$68=L3`P`VjS)KO3=mcCC.uk6P
%4URZ*`#.5U0$+/M.*:D^[SBKgDVZe7Y'pEkX7E$MaAO3AJ[*KKhq,?25Ne32X';Ee%0Er73k&IA9-<kSm`Q,UNAfj]Q`k/cg1=]H
%Zf'i6o'+&)9"FTl/le.:XkQYC,^t;JJG*.7SsX<0[g)r7Wos8?MiIXc$Mb`$,?n^GeJm[EjnS0?:OrGtmEH`lYDZg*FrkZG-t)At
%IAi">2YKER:TL!Jr`G4c2FN7K,!cIbL$tN4A*p]8j./2aZT%MK;#.\HEX_*Q3pN<cV+Pl5q<T#XL"Dt)h`9=I`'du]k]\sET"TDG
%hS-(@.[k;5kM=aNp<VNHULeB0rmhmtGbN\LU&dVCQm[s<gRiX1T`oI%5X8Ch*(IFoL8JWE7h>#.HH14OHmkURPnb7`]p8/H`MLPp
%jC.2ig&2:dMo)%XdsHl5.A[s0XWDR7bE&`'dbdL%!&e!W\G14<mCcgZ/:%P)qWtZ@g[Pc2k#$Rbp>FnHAc's-#0S.UDb6=Ap\X4>
%>5dFG>qknOd.-VJ+.b\hCRZ0>\\.p<p$)'%OLL;;=4QuW"NYoYFm/t>22h[@]fKB$=&rKH<D\mVl5lDNQ`\HfUPB-OSLU*0?FnmF
%^1I&/)C3Y1pKOIqV74b`$po\XTU;jZS_KdPWr?u</\UsIYT-e`8ffJX?(28cUpNK1"SJU&4n3t`h^CF,bfDhW%Jf\bD&Va<egf5=
%gbXN#NBOcHFM!gX99eu?>1Ie)p[k`Um]BJqDQXf1U05bQgK<7tX;:Z2Tf69S9C3HCVXWtmj^ZYaOJp^HpWgZ$YQ_aiE*MLPO$jWf
%Z/eq"\bmG@%lc`,(0K\_'2+BG/]K2m$b(0;g4]W<;BD0#?[#l*W$fLWq-C2bIQ@!lRqDuPmlaOWh881[2]]hboURr_8)(be;=4`-
%JR6';B63HGE45#<43'[,29M\g/Nk<F"h_3l5+G[18IP6!4JRn<`pVsZ;g[j+k)YSh+2Xo'6#0N439'EG)!(RHc*sT@I3J3[er+u;
%Io'A*>^Q,a)-S`NiTnRrj#'JG0I`7@+0N%N]S-8<ecZL&O3`H^hfrE3L0,JBp\O"7?b>.bb)(lo_8ap:qeq!65Pup9mQEE4q<%>j
%kg;"H(,+7h7F6;!I5'T>*g]Z`3oCMuVjDu`DKijCgUck0I_".BqmBKhD0>E&Bi,8VppL2$kh-RY=2"?#VpG!$1&>?h2#.<[]=`LZ
%^Xj4F]JqQ_4hVqfh,1Ci+M%@B@lMVRSJ8D9H\W*pB2f`:bJD2"oHj@W8VO-.>$Q*lcMBUVQF=N>HYQC_DuA;-k/PmD>u<#\B`u1c
%O5h:4dTuZ^4agg>>]]T"CXa8;Z5<X0;#TZn8#\Z$*H.iYWL?O0H8WI%)#%R:4`p)/>n>ZJ_nOlG:C#B6('CuEdRiL3B!;P1Q#a=A
%]<"BWHM$-=C^;[gC*eNr`r4jMK$ja(5&.Zdp<7jmI.^45<'PKOpFL5HDu\bb.kS.$/BUdn+#Y'K5a7WUb>2GlHm)H#oKciA%=@[f
%nMJnnXG$a&p7jh:NJ"XhduBAQ9e9PSqg:sa2B(t$8QUDG+$Z`p-lW[c$_(.g73B#K5JSG.]6%lVY2UM0G'`88]cT+L5[F"LbbP/l
%'_@tq]jlHk:ZloAX#L@1P8;6#k6F)eSR+OoI..-KqsP;h*&/*U@28-\riY=gg,q2Kf&'JnpDtqS*I_9gK;4(<"SCq2aQ(Hj:qDu8
%>4fGONJ=nf)X,:@&!PEX;k5>^5>&+/Kl=>NH.r4!Liapdl,hrNV%;e+]R!ht]=,Ol>n5j72]c1r0Wi?lrVinX3a:D]NpEk]/b!6B
%D+T.sfj,->*aAd*#>8OR:OcV)$hILYLo\h8l^Y?.KH>a/hN+l=k?nG$PkELScllRPDEtTNPogBj_FP,E*p\Sb3!<ahd.90AJC>&+
%8%%;l9Tg"6(qVZ,%!32,JW8N#@&Ii-\q_f*co,NtRL(%;<;Um"?"Z$E#OOo0_.:nQ21qWC;6*i<hgB_8f[!199BVp^GGrDc\[/j:
%>5qcTq/YLj3"hfV\aK8(.\#a2hLIV$^KssJPoj"&qB%A`)a8,N#7^91Uln"cqsQJU9CM>6?bXlAb2FDu/[j+B/>&64s3X"kmPb0L
%oV?kH>'Dl*qOd*)diXW#i$LV`iGEg>`fZsh$?ak]84,2(en%%cre';[S+`C.R2uCMHn!a([FW>uqqfq)_$-ggW^gins(K1"=B1Ej
%hLBq1KXU+[UYm3tH1dF28:'1-oZqMPa[>&MXYs7@N.ElgH9Q2.e&SNXT_71n]$6GFDQ)`O/A5t/[7epo7ajo$R!?>`_63ajLH>?P
%+&q%]If/FlpZRTb'NJN!@e9I,:k&3m(?WPMrq6g_XL?Q"Pn!:r&L!6.lDs]!j/DmSrj]PEo&40-F]Pq*b6R]n9phl-Tf\qW`9b2F
%fN?*BEH,>La-#;d%p0]Q%'A-*TXtInXo%Qjhoh'2hsYoW6E=GgqYpC%kap<8.DXiB2g_121M*oQI3prf:)hF4>O&?".TL9+/FG,B
%ea;MmlfGr:p1pl9G.i[Heb;7.<^/QV7H9rQ.^22:lcPWB<:2refag;RqTka`#JCBQfS1:t0[/b.PP(-IM^RU>oac6MFpg)MmQ^>0
%Q`1jqj)Nu*?^K%sCTHRa7d43q$rF=_TC7)a08kk&s)Fk]<,O7=*pJJAqP\#fjJZNW3YLOD/H$gI'@1G>d`mCn*t'=q6Y7R^j"kHc
%s4d8_\,#Ca^@uL7MhVl7\btI\W?P^dbniA=]"YlPr4lK_s5jH_#s;f`!lHbCnNo6'qeld5pacXFXgPcJ,UQBNrl-K/03<=`$QsuC
%.j.SWh+IA)F3*anKD*!qS'%XUKsPtD_!O,do^cGGU[r42Z,AR]o>RTsAXm?2EbAg)XlL,C_ks'3>Nhd\1YD(RHM)G+E"cHo?"L(M
%HLmlYmH(CNIP]^;O04N!DI2Dn'gUca=PIh3EF1Pb-t-T\H:mG=RuA$L$bDC;*5\P[$c6,+aF_Ir[Di(*Cmo)#liR/83>6?!S<-ft
%CO@<WRJ34MQZ>/^;C>:4BtM*ofe,W4%4"&jKTprI(fCFb;M>!'^<k'BYP8&Jh!-,)DAt8'@W+@Mj+Zl2gMOOtp*G==T0"mA*VMVl
%'g=gH+RR+N?Jq-U\6NGZ8UWp*S%i6qI^.Ld!Q(n78s$r_K`W^Z-mX6daA)k$$pdoB8JYkWV)O'D`SY^hRN+uA[if']&?n"A`,>i)
%PrD.b'JM*Q'#0-jjcFpIicu]V\<M@?D@F=B24YR7l30=hWKmu=C\[lia$F0f]=OP7<5ZlC=s:)M<WR*+p`;WDaD"*e?RU_Sn5XS=
%P.)E-"4:CSZ1>K$l9]C*/RC!*NUA8chGgjePabTJo=Cf7;5rLp8/YhPhA'^3RAJ9!nd8#I\+lhWHRRBaB70/6<Csod;TW^3;)%No
%^6W1-<Mj8gpJ\'r(1Pa:h6-l`L2PX1<KWG]-Wdr+>X2Y/R3B'b=7^K,bSV7/&_X;tqYX\'b:T%8D8)"hd:oY&8Y6<h*S81KUE\jh
%OZSS\:+A=_pV)sii_PD79>8Ep'"F,SSEOgXELj'J>2Ig]/%972^a5;D'1R\%[HmrOWF[!`.EJHbR<MW/P#]]Ro*&,qF1R(/>=9T<
%LM+sn,tMcbGuH6WoWEn,Wac+REp,+(7P;!j]OnB0L.O?o\#d5P68%>rY!C:DjhMC\_5W0+_Q?/]1fV,_jU7*k$8qC3UEONjPH'9!
%g/,;:R@.+4!XBKY.DW-5!D*Io;4Rb;'c>+n9i;!qhU%qEeTE!7a/$;3LWgm?#.Z/dE_FM9)DES*WWNI6Je\879_8:jp[6b$j>rO]
%YGA9TZ:==Xg8E3nMmU[Ws,1YFOKl._Zt)^BX0%j-[GsZ:"S#^soYG,<o2I<UMBV__^Y.Q&Y\;lE4!4GhCB)d\\op:#oT+<>Mn58'
%<r\<RriX5'PBM&O1ZuG;/b*Z6S+^rP:JN-X@6_?'6qM]P<1C6rd+3YfhqBrRc>e=6)n<XQe7V<?o_ef5[f,R!GC4@EqZEF&)[&t9
%-Yq9XPfD#3/R+fIL1t/KbY-Fa1EmPu\A+re?;*ppE;4MOk*0$H-$B6QrPSHWhRW(CAY6`j-LY<q][:gSIr>8`-Y9_>osB4nkKM27
%@uJ:M\,-Xo;qfr',;icpAP-9Gl"a1fRj6VJ\[Q>?s1Td/!q,76idXk[?_(rdJsJX9o\W!LQF2cU><;Il4DXP(g70tn%W52$T37LP
%AP,XVrE!ag)l2*2Zqj5r]i:uo\R3EJlg[lqO0h,oPeH8W*Qe5l3V/lfN`sKWCRha$1&L8q]Cksa2R]ubRjn)/C2*QTp48#TpE/t_
%NI>0[\+$@n>MiM%?g>PBS$XcV:&8Y_K:edLJ[9(&g-4T1`No:7;/7qc>?Yuu`C>8q^\U-)h=LP\#,mVQqe)2-'R4C8cbfdBc"56#
%9%Y_n(8P,%dTR,Lk:;#<bZOF0VO"UN;:b`M=\Yo=+(sGh0FA4?P/N5a];]r7m-e^qc\c3FGG/m$+f7Ntj9@&;>3W^5S7Q]p[tIub
%>tISp/K8<Mc.]8-HIfotI6gj&VUo^B&HZ"_B>8<LgOI40@dSY>%3<d*D,qY0Uu(,-lCn`mS#H4'p9s=7r,h^?,^#KqC&PAF&>WL-
%hn-'lncnLm6nIKF@a16cY6(-bc0<5*g^9d9ao5@UA`(D6Qah>s[;QYG[M"r_+J>qSERM/"go(/<qe]!(rA-JfhuD^"`;DXm*F$nY
%rCYfafsbmf_Sm&gDbHlL:qH)K5),kK>%PKk.>5'0P*QS1Kc91$$iu`VKWf\>Hn(g"mr/(1-Isf.-dLc*QHBqn,I@2MqK0jBc+,Da
%5Q*D3DJW5)gMCG`I(?W:[;ThEe@hne:<8r_;bCKL/]gMt6&&T^^90N^Cc+)i?FRAG$mb:J`0(U?NshDN8VhNU3ZZ4(?i<e+,u(HS
%$\c,MY9o+J^J=LG8&!k^EtR`A&?._]]h'BZQNeR.M7g7LRp3C6<S8j09@1`W\OlU&b5U@Ind&u%nZ6r,F`(WQ2LgJ4'.J-DU$fa#
%g!jZ9rPL3D6Xt"rf!gH-qq<lmZ3b6;"`KY]C6+ZCpO=gmasZFAf`5?39U1j\b(t[MXdf"7/a8Ir#]G"$KuhcMRlN%<`\nXkKCk,I
%iHiB`14T>eP*#+(14N6C<qq-VD3JE^=<_0S^L[@PrV1!niuZc'ZI_(eR(,D:,"i.S9brm;J!8j12;H6Q5:DN%\&\26>q$V$l`]0O
%%@QTK8/:4/K[i",NI;oedbaL/noJ`m^2lTq#/oBs/R<#NgS>:$Dab"UX2B7"a6C!?N9M?Uhm`(AZ-Tid1.5SK=>fqV\+uE"TuESC
%ibSFPZWULm<\GQh79d?A6F$Lao&$n:;E@jT(6Z*t2farWgnrUD/1IW"7MP=IkC61YD0bMa\A)RD>!X(\m;G`ImaA09pN\Uk*<5ki
%Z.,-:bLA3q7e.:ZjWWmZF)87&TmBFtD$TIQnL'&7ZfTLsM#Cng[Bn2.$hg"*.Pb]W(*dVsR86q9U3c^U0eek`Bks^ZRp[bVD3)]]
%7*nRtMqTJ([+rBkECHnRare'J86L*M_JS$Y=dNj[r,"Q6rkPfWdet^aRe/Igju-VRXA;N_CFeeeU([&.HYW$)(68@62]M3!akP]W
%'*i.8b:RUJQZ)0Mg*BtgD39\'/^Um];eF6#[>):;$[c)?Lfhft=oM(DIMcOP%<bk'I@b6,fR<*Kj_YEZ\[Ap0Oa4CGnd&iQ$PEj"
%!1Q(4#YR9u6gf_#>P;-^f%rHU%q3dqWL7]Fau(8!F[un^)VOOJOLFpgQn@&IN+\KL'Hc_Mp^Lg%N>3mFP=h46XnpA0>%eZH0tCqh
%?`i/@Vn@r8K3ss=rfX*Io.iCLaeOI2+'^$d9-0LE-KX0^IE^Gg.jYr4'C+f)hIW/iE9l.c&P#ZIVlX9Akm2QnhCY+E[>#XUSe:^j
%LFXTfZ`Vd<3]0&=JlbU\L+?Q`4IqBZY:Q4#2V5LUD,rdS/W8A1c-(@KkkjGkD;Y?1H%3sB&T,SPiN[ZJn*dt"ZAN`CWfH&-D3+:u
%hhZb,mo/DC[FdO,9;,(nl]ne5,TP^$_5j"fH"5pKfi]`SinER)SKo#RaYU[:JkPW9HuO*@kq1d;DoL#tQ52]$qf=D0i5hiK$TiF>
%V'>uY5DQ)B"H8Og'BD>7^[g228Y)\K`Ohi@?Wl[\h=qMWrc(CL9)[d$V>7RFrUFmeZ6A/4^UH@R.a2QgTVf`RSM4O0k><;u\c"1L
%24=Jm;Rf\18j^D(qU;q,+rOZuWbf6t8aE^IX$kTOgT&R\cT^)JA90Z`p=IcV?!"K!CJS,OgY?h_8=H[\H?/l<diCQ6BiOcC@\5=b
%\L'rW(sD>9;*[JmD'-tmkgnI,>dM;/370]9>F"RDhe-O/H5e8Z?WcLRL9PFRrTLocbU:%KP"`JMT4=5/Lf>T/]iBBk5N-'k-+=<8
%9[glJB;%AT#^h"\ELU,I7e$C@=e;@(d>G37`BR`-pSf2QmMNucCDlQe^G_*h78LmPABeFZHTkYBCkqW"/t>`$Bl)gF5gIUaD/6ot
%1K+LKN/6(*rK&WRVX(,do%LT@mY#E3f+Qs/84s06245i[s$5)I[P_EOm_9P4</?@WoWcp?G?[+91!?61Jk>M6ZjrYZ>g7UQEV?Pb
%+B!&>S`l$72Q3o<m;C,jQ)^4uhck#?T]j;)UFa=\-'=S;\T$:3LP<q.LXth0lo--R,Xe4O,hS9MjYCWUC"9fNN^nh=fj]2BP:&mV
%OECdK2qaG&%1$'7iiM)3::Y]*_U+:F"8d>,W[RaBD-s;j\2E8>KjUpIpZH+AHlujVBb?EcQQkOGI+XTqKk:m=CW9nIj[`Z)K?u4&
%[c-I`a4&IdjC6PDb9m'Q0$4[^)tc1"U?m:MR&#&MO@f;nhM5@kc5Cr_!Q>XkEVjBQj_%N^S@8m2D[[Sn28J!2<I+:n,8`=I]+d/5
%[eRC$>faS?I5'@+jDPc\6cE)h^EtT;%Z6hmCXu"=k%^k@\[VU6K[8f5YRL>8Um0Y:U0/r)ejucCj+lFB4G1PU!""It$JT[e,:la0
%(ugS@aMtr/3oIc^.;[ddbd'YqKDleu@af]tO;/"8QC7;`AXU<GFY@QE'e[5"1>'r'CoKsc^E8IOAP/Mg<&Wp+*"lZ)/]$<@+k#*$
%c$PL^YWX:KMgOFTH#rAJI'9Bt0KqL155KDBVVu*oI8l'q`ljIuDBc=[_7:Y.nUo"LjPn4&(^U<6j3Gm-GgBa/*_)JI7)sfl.hi43
%@H8l"#h[-t=o0$Ca1iUffc6uphHT*/Mo&lm">PBaCY5pi\1D,ukt73`.5%Sn`G?i0C?V#*L(rBXEo&K?\+.1V]_o:5]IdXnM6O()
%2rWm53Ae1K'L*L.eSL#SG,-#pDin0?]q&idoG&j3JC:PDM1!HtZ`cl<C\p*4fB&ZcI/#;4bQP3o>%D4\YMK*OFM&[6e<%q\\6I*&
%2;'&??91E#;mio4%Oc.kn:N@l)p(H]IJM!%\FK=35S@FnOi(V-@1Ra,YT^aKNLmFZ8,!2"=+<j'B+"gb#>sd5S\0PBUod0>^Edg/
%q>1B`];le:PtP%>[fkM;^p[>DVLBfTC@7tY%,>^P<pj;caKO)-"bhf_<(L#Z+mQKY["7nKi,'\kKk:l_dr4Uq?VIP(7"m</a4GX+
%5?O&<0n+MV:WH7fbi<=,m?",S2anTVSbjt#PTl0&,CsgHDY;8pm?d2tL%D4T*DZHInjQa^nRhO(^$9urdt"N;g\&[n,I3"kAS)J9
%q9:?`3D,GqDt7o5?P38`98W$mFn(QB-^D6-e\41+Nfik]@[@.<A3<Y"<7JJSmS0=26:BdE=[aJXL<!HR]gJ-MZ?=6%PI==nIf-mq
%@1Ad.5@p^g0SZ``&=$d]G$m,W1ask'L;6)rj=So?,?':a7&m-\UU+'nIF$lB^1'j5/OkN!IYbnTqCRl:m4HND=i81-n"BBFCCjYs
%Jc\YYcHOj7p_pJ/f&aUBF72$'i+":)lSg]hrXgD"Glo=3b(s\kM_..A%-&tLT^&"4)T8rfaXcSnAN5"pdmiu17m-@-Rrbq8)DJ8r
%/3sIDXIdd_'#[e]7.YmB#.Cm>(fZu;(%Ko'L92TMCuJO`LO/%SE8P8a]DMGK>K8_Hn2c.^1DFR`Jj(uEORTHW<s_IW0l<i[<03\p
%D;T2"<)ZB8@WrA,&4q/@fB\,7MsAIqF.A:T:WE%m6dPV].sTmU/VNj72i#qds/&M6>4+FsgJ)Wbo^rFO^4sgW3;;PlJ;II3I*4,%
%+Dm7?ptk[07DZM6*P0%Q\W<u)Y=f8F7TR%5U9ls$DnI^.^97"Bf8lNaFJMG+51L<e&=*Ut\Fi=WjsB)mc](W_SDf"s1=bdu<%Tu+
%EDTm3j,-1Z/DBoSob]*-h'>"Cr!*LgjRG4XL<M=39;Po8Nd4;+'AR[uSqp($=FF46U2\CZqi#kl'\uSX"+sU9QY'\Fpd/15fmd%A
%@p:]QZkKhsYlmWN^mFenOK-`E-P=[!g3P,LR;H5:IseS\+[Cf<lVD&c=K$,da=#NJWFJmt!T0-oQ;nS)s#<QT8OW-2kPK5Maf#eV
%'e'4&,%8]=H'(?G7+t\A[7EOUfOcF[),`#rP.;lLn8p1R]tsCUX''#W[f$LBPs(gXLHNE+,(i=+DC?bQan(9`W#-KtVa#RGQ""OM
%T4*'r-L-PF4:m*_qn@HRj,B#ICLUr-j043*s/lVB.YY,fn!h"O6b*ShgH\a&?`Vfm&:Ws\Z<q,#RV\Oi(cr[0K[8V20G*[Z5fLLO
%k6+B#q&ZJ*9`Tt+rYhCkOUYkr?iEn""'=eoN(??;M*ah*[IBa&JT(bC=3pl`H2m3d6fKoH.I`DC<eLI`rZ9/fpO&LeB.WmBkKdQ.
%b7KOgTup`Nfe62pig\1'8T[fs\pqV:&o#Pc`1:.(ZMd`BJE4Y3rHa#e,%8'2),=X+'5"ApG;&;SP/X`tihLU`T7H^L5Uq^k!0]`R
%O^++sNW\skZDRQB'3r'BXgp)&8^/(5KjcWopu7ehpU79bk^ie3Z\;8H$*smqjb&o,OdkjtNJc6Fc0WU$-+!KP'7*CRb9Yplg->/-
%Z8l(cS$0a19]!TEZ&,/V"O0d:F#sLOT`RCZDDF;GLr-R[k:=QTRmYU]bgU"rqIXA/_I!7_hX`IWPXsbpm'ZQD9<0=Dmil:MMZ`WU
%g#(@L_D_Ia;Z%QUI.i(b]ufIu'%'4tfI(Ab@SqC/B!t.MJpH/T\1!ERCcltuja%$Sl^L\:Ik_\JqrW-Tmr*MJ9SoqNf/^E#L]Ym9
%8$:1[Oj3qE.BV57o,"Y.j^]UiO<9Y>rT1t.cRJi;g-)C0^g?U8"_C:==-GDG>C85QF3>3Nno*NKRmV`)V?bMr@\#H9pkMmM\rd-_
%X*tdaYJJ`Xl'o=RQd>.HDj"&fGR1\3<2`=t:B%r+&Tb^++RtGS`O[<22Dei!!@JAc#_Q9BiYR6#=&MNgq@l63Z^(DcFMES"Ua(?@
%J`L,#'AcP.TB&3tabeIl^gW.#e+KeK<"=)_`6O_><oHU7o=u;ON"8C-bo^%1S--a]IiE<;ck'O%"E,$r,$YS&.5(`o50:L*g65CO
%SQS:=$IBJa`'0_6I?@=86J5Pf&1PPqoW0ka5cUg5"J1m;j+Fh(J]lsN18HUg@F#^a07$:jS>FD9kBcLLkCE"rFI_+9j*!^7?_iAK
%/.n*/?[PW5&R!.lr9`rE2Uo/V=:4'1+*@JjeGruoYGdOtiqduu`jNo(lP8==\P?</ljV"X*\hX#@3+(Q_Vj5VQ=Frm*A`3\L"'ad
%6\Y$Ss+)9RQ6L\JBmi:d,p$SZEG?3&X7;@IXIVo(l+R$Q/G?QFFg>j!6V^(dK48O`Ltlo,rp)ci7n;<VbI_Oh/!sU]foG/gP[6<;
%2:4W2$*rW_F9/p+pT%l<(fH]S<*)?aq?6jB!YP,e&7c=d0mVR`^"""Ll]3G+!9sc<6u5mDV=+bZi7p0KT1KqhQpP(5:a_`<I4N%K
%]<]\pIn9.pf=1YJ.n%rs#mI_`+%Kk0FX$JVEYm\S)0mkK&k>ak8mZB]hC`Ac=dl!GBr9)MO<1<u\K_UE.=hNglR#d$gg%WXq*1#H
%QUUOpIH[12+))%9b$KPG;J2d_58[>(Fb/I7fN6d17e6kWJ*&WG47S`jHnWfpHo&iEg$]ZF,J[f=D1'Eh$X\(Y_nbGfE[Kqqa,_#D
%XglJP&G8KBapXit3<A'IaKc^dh@%`MV6:t3?9E`-l'H/j%-&Kt!)!%gK8D5%j`qHV%QG_TY>X2:LF=i"*udI#$W-J)rW-:'N,i0R
%ZTaCOiJW;ZP`H*DE8f6n4oL2^MlTkmVAYM5m'V#]L@GF]rt3ZkS([KqTc[Rd'D_1s432A<YQoU^>1YKOM$J<<0?tQ#*J=B^W(#8:
%ZMLgt9pKVf^0Lg/'B/q`$6HbFmN7W"/]f3e.Fkk$S^AKfHnT%a]2S5GH$?6YZ7oGQpTK",c>3+>9AQ=O./`r@\Y?ma2FZKS?HR`h
%rObf%=N(#NhlQPGs'HLOj3J(<GI,Sas*"Y"B*HugED+C$O8na";b&a"S!=NU;bH0a&53M57&@,55=&[LB?EK'e+tkC,:^/F["\HW
%Xsrma0i!S_s4"Sfp(.[q=n=G7L`+O`6&R.<;Jr9L8MfF+j.$BqJdNM*i%(]'1F8`b>P^'h5\EbgC1:Q@+cf(MLmRs2<$e:#>`.7D
%h/fNFUJ-peL0>c:%e\7(Hqc+$IM1e+-J_X8QqbQHP$uY6PK<(UI_+)I;*TYaNuTK``fQ5b[*&9@/^n(kg/2)hE4h76?mR3oQ"A,V
%aKlP7M+G>k9&Z!eVu5MCo``<J)B!$-)L`<A;!+RG-2l&fIupE6M2EP=raXkZ^BIu-koel4"kA\"OJ^l^h]YWi_YX3J,mUYOoJ-*@
%$bW1h\n`g,,#\6hKEA2W*qhics"%VM<?/6>8mV?GjO[W9f_Y`"2tk&<0L*M'h>9^X'.Faf<h4IZ<`!Dd%):!k,KZX1Wkt4_UI=@c
%J#W,G73s)KbPZ(E(K>;r6B!Mo,\f7e`&u!4?Kf!-+hSU^';Pm\kjk;(47@hBrqAU^?OERA(K^K;mDIfHc1]=65mEF6ifFitHA)O#
%3=H!de6iUCj($ui;$;IbW*)LH"%\etn5/\iISd(ser*c,n[KE7WV)<rUe'd",Ir8Y#5B:o>.K9.R02BFImr`*GYqFa7QNq:7t[&E
%`HVuO\E?X6=XC@A+oM=<W)$6n@Z9\(Uom=%W"PLcEDb/#Ke1\Zdh&%ES7c&ZRm_Zq/aFFq:'SLm6_]6NN"Q>^'#<.Q@V,AcI]^a,
%pH$@obG3/Ld=T>%g4J+&R2'ci,6$\`ES*^M_l`qRgEeeogSO,^YAZAISd^)eZTAcR8[pO'!\$u4'DlIsN"K*;g.)IZl<TM2K.Ar6
%nZH+>8MT>=4ee$_IePRJ,)m=O__#PUh%[q^@o84+,duet5=d8'qsr/3SFmMh?nXGaWe7dNJ(Z06l<hM*)D.WD2CHndfpT0X,Ou`V
%:TJ%_j:"CZ-2U%^Kh0k6@%X:$6ud1MJ@2\tN5(%t-0c-:?q=\(*:KeGm#TAXD%rW>:R-YXr'MWa.K9pY+A"rbEC)B(!@O1p+Veil
%<%I9ieBm]9<E0Q>73NVN80%Oc%EE]qmXBfRXEa4-[B"><JobnYAe4f?ObD5p.o="UOJXKIK>toYX=^,D^HnD"s%b!*(rQ+Z8?LX,
%h4Lo9K,kOf=lh,cMQ/[2U>A4L6eK\[m#!f#/!(6h=rpqJiMq4<T>98AkPG&s\GrMMG_RgpG@WK@PqPsfc-nUHb]JuY>eG88,(U;7
%1%?)ga`g5t.9,nVSOg;ES@Mk:YCm@mpDal\++ics@%BNk57q!%#BijCXX>N<IF"Oi\p!XUPjL6m)d)62'QXsf"U\SM9>LO"LI&C$
%21j=IR">\5"Aq*SbUubY'UTO6ik6%f'F4I)IH'h]gBb:&2bY_%Z1/m'@]eD-[n+2FRg<+rT<1+=4#bHks#JW53::@aC9'+D@qR3[
%jk^-=1+G`u#R9[I1.%5VMF>D^kKS/Jp9V7g$AhZ?2CSE4/ZTh*-.4&]V4]Gl]oW]Z<i2gIpM!.8b$<UH\$eJ!DahmGc]AUb`V$)8
%S#Gonp(.S#Y5/g#R6[JJ5jJ8]JVbPMV*'qc67H>Y/$LNQ:68$BG?2n"b)1G0;ID_SSg,)GJg"?6g,c6dD@P"*a'[`lr3(GmZ)t&g
%Hl,?dq`go'QM3U=8ar;mV\FWf'dm:p_"Rp@op;ZJV:*@UT\S''&!A*k7I0/l[GJMW!pWW.p?nUc2Ih+3+.Fi]<*@5Eh*ZalE0*ht
%OGXa/..hl)OA`^"X/XnU<*B]L_*IOAF]++WAM'&,HuGBt:u=e@nM7*[5sFS'S[VFc!hJqGl"HWX9kr;Vo%,E-Io.d_d5a0?q/n16
%g'2jZM:`sV+rgq*b#?Ct-rfF^-?(6`]BOk<"drnb_cCqY8o-a^HD\q)e3.E["JsL7EeNH`2@rajMrP=+^f==g16X"6S,:r(IX2go
%-%HC<7WY/)0XXm9(BZ?%(R>s\C&LWV8WKVJkuZ<_+[GE:k-D]j!'QE&U,L-A\]kgUBgi*fo[hBDQ;[Zm5207!hf;5Yn7TsuC$VB7
%*4@H;-ZC:4QO`>0Fk:r^6^)uG^L@,<@%?",iF:IW\sXrS+fP5ZgH$#irq"G6$7_X2T#OnIaf!E!<h<SBkF2&qTT"BT_/_U>I5G4\
%+MI]r3`PH8C=A-5XM2ia+WNFMYA!"_Om:e2S#&Y/Eke4+BHA^h0;@NarZNf5qlI<K2d:3#nnua.-@,?i7"Y2DUBP@n?2S[d>$M&+
%hP7CchH0P:?mIT6_#9dF+NW8jqqY*Ch0^#oIR&[\9n5"TK1_V%NN3d(G+uDZk8L`blc7TVTt]q4l0HFH]I0[99FUcEi`]$]+8`km
%>Isr<qd?)1FU;RJjg5Oeo(Tk&O7_D4k"fP-B!ba9/s8>qQH*Q8at08F/)0#\23.3\+pG2=Fc/6B58+%3mE^EA.Msd2(&<3M,.Tjj
%;A-WmgQd^4@sqH'L/(lK4tbXY@!'?!J#mScfV>8=k5maE\.1s^j+Xi[-.7<E'GmI15tH77#+2O,VT!uWB;]B`-06Q-AZH_3ft49G
%f'ilQrT\0Oag-o<!nF+kIWRe"_!QX?rK1;I&ooIlYJ]a#``B]IK%"MRbu>7CnV]gSZ:SG*ga&#Z&C=duZp</kWhQ(QooQ8N7tAHq
%UI/dYD\3H^>oYe>d^DWUH:f^-'?uC7WMIjZi2kS0?Tq3EQpda??YSXpqF2`,B%hm+#EKX%@?MKV%]D[iP=AX(.ae2O"3KDRQ18k<
%\0^M?_UnA!$/T`mIdIk$_b56VZHS]X4lDf/qA-[Qh5/h7^ugHJ!a;lfWVZa@+@HhaLG4j=J6OYf[P]%VW-Y(hoG9p^S"oYEIrP).
%%g^1urmKMPq0uW^\k,&7ga6oao4=qVQ<WZ)BVN+q087s\hXKB1/.Vnq^AK]":tnC#,pABN2Va%GQ>kLn[2VOBYk_Ir`j^H1O'%aB
%=kP=_!\";s$>!Qr)W0k7<M7T^0-RBX8Gp!".gi,_XkB/jeqc`Ra5oND$W9;HkmuVJc/-4PdEG`)8DT%F/6p.[=/l1V6c&8B"L!6,
%BiD@!HFSW1WsllHPFUr=8egs3pJCMhD&G&-?<Dn>!SbB@>"'_Pj`g1n[Z's[\0;5F5r)fsXK[5NM6[4['S(X8;\Uk:Dd,kHG#8Pr
%5GolaMHa3BHQtr4c:5)>3*/UW\)cV_(Q<C!H3=4,;)*gRb7t#kZ=V4-N-F]t%afW)F8c^NL%ZX'*<?`!9VkBi,D?4?Rn3WPpuZD1
%N.9+3%hn'BI\tlV?L3H4Xcc<4aU`H_+LZRe2;=s!-jP'8H`9S_5eTpCeEK8^i@TRl5k!u\A<&In5&"YDY[[[.8?*,,fuXB/X`3u?
%b*ZK[LT\KiH`_28=#OO^2:(r<:J!=f]/_U1q"ci@`PPItnDP+X.-LBp*Me?goC1^LI-C'<G2DsifEAhn$[R*p3YDH\JW=#qTSrlU
%4R3Hu#&T>O,SZ3c0Yd"A4Up.>RRi8Up!-[bLIki%eKPP1Lfs&OBH3]5)=FGdkjC>5?E@r<Ua*56p"\/03Vj'ciP_6u>TON9_CQA>
%'H@,_6hl/tZ\Z].o_Jt4@U"ttrPS\TbUI9U+Z7q3$:>E%["aF=PeP.KaJ^<EVc<,Q(',O5M)aPc:"F-e"q,%T#ZcMI[-'V%(g;5`
%$Q&<YV4f<e*\@(+1[&Lj*L_mE:sTIUIri15FqUDF3<;"jnc)dW`HI(fNB8QSl!\:VmuoHK2onH)KeJA2*5OcW1AcT-E^]Y)m=nq>
%InaC+PfMbUW0iD5X[6a-o=))`.SiBl3ea8NP@9OFgAkgkF6VGT@&D<;"/ted+jr;Fn;n-;L>WoF3l'\;W>ppq;oDjqd0UqsV"$7q
%M;!ZQ+b^J_(3m&LiF.`h+F9E&F6O8gUl$9W9*:]k/'fbk.'Pp?-cIZ0G8B0o7&c><_Kpkj[oTh>M:m4u_LEYCR([_<#`bsR([$4T
%R36fek6$`;Uq.sYrLTHEno_OFn3(*smdp9p(kD72&rSE8O9Uf(#X17p7IEiV5@1dN,]i+N"%nG12YWk4We#JG4@>P&+3BJRH[fQh
%mOmi&cuAGNBEaWk]k8[GH/8%<\Eo&gpQl&jF1>/8<LaFNdSDEJHXj'0__<.!6W+</J6`@*"ju,cmH%hu(&0%nqaj(qTd@H6=C:Q!
%7T,$kY^tm3',B;)7+Ac\,$2?_/Q?*)N-SDJK\<+/;FI@#Vd:C#hI[]0Ki#j38F`bSpp[LKe.CA$E-h?D(Y]OII#'6\Np;m3VYQ;t
%q2aUScBJ'u7OAn4[V37gBtm$s&^Z_)Ugi4_g0uq]=FA(Ck*;rl;*uX[PLs;!*0Kf*#`LWg\of-r=EV=n=)3U]#)3Q.*:YgiWE0C7
%1Ho^-6dYMB>cT=TQ4USf%4m.SWkURHF2t=kkN#>.Om-sW7J`;/7SG$/i?qF#q`+d<V#cTSS55@b%G`(_rQ(``hhnD&S:VcaoMM-6
%&20gp&5t2An8qO,Q'"p;Yn-)'W\Yqfgq$O^<5KCecTMDNMK!kfn\M9#fOQ*S#d;uKgZ"hSgLg;fJD^cNic6YDRtAQ!UO9j9q\0uo
%pHe%eS/O<T3@G5Gq.5GiVu>O"&4u=4<G!6Vn$e@rDl;k,ACCEGFc[g)I[<r3<"e">=L52ogs\gtmHb7(Bk"&c$^KhG;;(X1[A]ld
%h@gJfJ<#ERd>:7eRH)R(A.gaY@[6Tl0`_dF!I_:S+a0+>U@_F#U=8(\&fkFfi+7^B*u(\Fc4.nZbm-@S1@6]Y-Z1WH26!W6`K,,c
%91!.07MO^S/-7HQQ&$9O_r\2'3R0%r1fN_7IYcKYb6Ljt,?EJkp<b0^gbVN%7e@[_%--ec>hZ+k*oM%.,<7qR7(riK=^\;-+:XV"
%2QKfqVu4PNQc[dr1rjqh16NB`ROi=7TirW#-mXJd2d7:"48ZjlkoPo$Y0\>DcRaXM)X7m]7`Y]F(>D#-ih&m67)o^5+5=RW>2tT^
%=02k,m$C6T'J>Gn"b6?]%s:s1jr-i<NbD:`f@%*Si+3edf*u(WLh9:mW6T4o#!.8B\`8RabiaeR(&!@\@dtf3j6oU)X4eb`)_C^-
%<eXh\[VZiK6)t&t^iJI.rk_Wf7&7/V@G(Tfp!$jWXWJJmZC.Wq7!:"a.AO[LI/uUSG7@Pg_7uK4nq[FFWclHq=mWO]KT.LKT,3E]
%bL9"UW`?<)+R%HFj#Ls8&.-LcE.^fsDPa9aJoL`h3BAo#S`s0*AD,=P7UY?h(edY$/7H2MdenI*J7";9Ok9KTSjpR`p$A!_ns+uo
%81N1JQn[(+V5XKdqgRf[A,-]F)\*oapY>Z5i38-/,T7ZbdcCVWUtb&lT:/"RoRue:a`U(i%HaS/mA"HrRa]6Bcfh^;@$k_S\UCJM
%q!AVQ%8id1'i(^@DPo'M='X%2g>-jXqIC6`U?c4]q7\'&>0#i7?R.uQL1Cn%[?*7o`G0%mNE)6G&d"\sIc_MbSdYf1OJk<@'kNFE
%'Y9(QmFYAF+*AQcF:b<LBrZ)H.#oq3aBAG'Cs">7\W!uIRaobkOf+hOC*</C?GHJU9#XsDE+b7&3\"88!9n&9=aIA9ZmW:89[U/X
%enUG%H\dT;$V>R&JXN:Yc>mV[AL("]4g$#ek[kg5Jnc8Zl#Zn)b*a&9XA)kno^ST,n.JKJHn$ZcG>mU$g.T;WS=F=&Ed$<JUMXb]
%C+0P@)H+__G=2tk!SP^kr^b*-^%Dt8]dj]cZL)Mg9Rnu4a;!oA<CnjA(Rj5u#(NgE!D"pigiqD2*`GtSmgUd>(;hEl.]W#0.5'>"
%n#Vt=n@.;E?(,P>?N(S]o\RO0LkX/Q52rlKHKYq'I/1>R]Wn6P"X'ba4-U]IRS["`?DKh"4r,K](&/"$?)iHfV/HRI1]56`indn@
%2DrF1iP=ZNbl6"*$(2?bkV,YXF$dYAUNSnK2YR>AQ==q9$!$^Y,]:;7;Ser2dJO6doSRT*D;_C"5u19!J^%P]5[T0'19Z7)42\dT
%<(4sJp>1VLW\f_<e&ksqn1/T]agd0PRQ6(FHL,,s?t'<t7I;L:CUJ$.MAqO6Z$OO&*j)H'7Q(1R6FQU<lA1)+3a*flm/Pqmd.5fB
%dC1c#?S!KL&%uPS"db]%j6>gKpa:PR:D3t,h\92nfbefWGX8mG6qAe:8]tRi9brjd7uGp,!Apl^L';,f\<f2NCFWcX(UpGjD(9ri
%)&j!fb_9,$X^WlcKgrBTrCcUmVB"G!G5X;n6o',f]iPfi^IC0\L?)5D3BkO?!p4VI#UV\4F**34$a6[n"H#Zl3!E'OSH9*[#MRB:
%)J^bFH0nrk;09+MTq$bh8(g)G25`a7MhtcPRqjL+l-&LO%<S%9aem%92oK$s5c=P6qoF_`HhBE(o$Bt@iBC5]"WhlA_Te_mQ3%C`
%]Y=B$#4'B:EL9f/PN^FR>9&!n[MjXl2!:eL^/@Re>"A67k[]Cs:C&[?)[%?F_DRnHm?9G:XH#]^Z4Q#+_p9bd'dfr_;a6rMht:2#
%dMsHbMq[>+pp'%4T^2iVoiVbE7Rk:Doq9mQiGthi+n=$E0qG%H8q6ZHD/%@+Wq/<["'pJ.UH&FsmCF"*5?.[!;BN2]e/]YbB0T,.
%[;cj595n5F%f\e5rOq[7rd,c[RB?4EI&Q=k[n4$ek1rg2QE,F_\,]'N]CH;ETPn@qYRQ`o.de:nFqM@'b)-+;n%M+g&FnS(RmY>-
%`>Ls\39E@q&^dNN\7KIc-2_)X&;d3:h?j3%",R<sE#E6>/lu'\lX`RhK@/NSK5Y<Z.QdFAh(gV%TRUm+=JsbY'@1&bs(hLFZsYep
%jbH#88WfIn8;%!GQ]3lU7o8G+JB^Zn\%!KmqAQ7X"b'^R_6m`**qH^]bMt@?&"?[fZ:)_424g'M(\I:9`$V9*S+niH5;Vc3nbBr#
%+')u\NZii'U3&D'D:`G9L:Hn1O,e@`Y?jij^,E4H7O6r^^%\5u+9,,*ZN&erdE6;$*5_J:4_#.2V5iJ&*NhBUoB-*C=1g$HJ#TT/
%Q"bODdKf#H(?,QVAgY6AmIk8QNM"*)hljW@O)L(DoZ\;(s0!rDrSN5Ds'M):/sW#l[2!(_0)*)IWs2=qbLf]XPILb?l]ioa'Y9S0
%FHIYB)1rLp+&j1+6E?pefV.c/UF@u^RGHk/XYc>Z,%Za'5B&WVgE-5Xh_(!0FJb/T-RVAo#u^3i7"3qO#-*2/^](+]94_'n[(Alj
%;E_dMOE4R-OZdiiRWN3nrX%[PV[^IGUp^LiOe_-!?q:Y;X^rI1aN,-R,&N?g6.uaoj[H`7BN;7%g;GSVh,AO2SHdq\)/7Z&'Q.l5
%PbRP8)rhWCjXXucN3G2N^h*j3\i1%T9[]Q96FKR@9!^0KO`m!R*YrQp?EISNe$D,Zs*fk]H;C=Fq.TV=j<kL(/1a;l0B23P!SVM7
%c"dmp;&^oM!]!3AXE?GN*F,R#'("rP4O"E>:o"1[Dpqf<p#<>hbV5D3$@BBPe,/ZGR0ZC3ZscmqCf*E&gurKWg?MXVWa9C',[ttO
%S/M$'+&pm]^`.]eYuoq6>$o[qd6e>Q.(%FS!XU/lS_R#K7gD$248O#3^QuKqE^ALf9EAJ=1qCTtR+:UTVtf+l:2-.o=%^4&5#)h3
%/WH5sjcC!YNXmCG_DoN`?[DED.=<`:bfA`i6H^H(JM$KinVuo2r>*,I\$m<0WYCTirG/EC/?1TaoT-N-AH%3N3[rXWT$Eu?WSN^P
%+I8Hl[#q!t],CYu!9@aDb.CPa-'GT2o9jgfSDNSH3/q^Lg-'bNW\oc\?^O;q6:E(lKU$RsE0HSLV'?5>]:I/.q44gO(k!jU_3mnf
%3;T;oUXVs8^0SRW70#2Q8h@iD_O2fM;*4>^SL@E2osQ>Z\#e!>!@I+hDbfP,QbU8jqZE"os$9+X:D%1*DC>$RA_H1o'3pY2Y\8Ct
%:j8`GaV9/Nr8Sj^I/E;V["^kaCdj;]W=EEOb@3U!j0HZXbDhm;5dYW.$p]P,6.54L;"V14E;=M;U=6J]ROA028pNQeEeV@aF-QIE
%$/h2/(q[2MFX"JQM@a#j.+jk4Q+.><l[sE3^Bhb4*:?!md?sKo?&u4P3f?i`2,7e\InbnDPtsHkFjK:`qo!iC?Gl`1L>bs97Nknh
%0K1JFNF)lXGjJRQ_$;SLI"$-XoVD4s-UeVNqdK(61"$dB4Hg8IX)6JK`_/0-]W?KL<<C.>*I!-)i>c;R:hQS'0BR;LRgR^jZ$m11
%B.6t`NWMNEjDsX<dXZg$3Q)b1o=4K[,^5e!'RN%#ci7hZ8_H<?%TREQ"uuSIiY.Bk($%Y)86ZA"&!F9Q.R'\/NCX+TJ%7\72nJj$
%]E$'&eaBh,oPdX9Eh_-rFJm7M!2/&`!3tpeaX1\$O8F%9r]_JE0'g.*l=R%3Rt/ujR/0aKB?G[OGZ[MRM^\T&T!J>&e_jded@/P5
%<"e#VIMq\k,=iXf/BCnLP$1C![U*R"1o&LXEjaat<SGXnqE@[Aj/fW*&Tdb-<%qYCa2c:0X<D-Cb97u%mXpokV;9=;MP5Qp^T8mJ
%3<&^1HQ$_l['O0L.#]^\/jm<^6tMY]EfGfN3Dd[$Wh=CS0-oYWFn`\N6/on6\Y^sU8SFEE*'jMYAA!YkZQMtB\k2""n+j)nQ^U9n
%.4ns\ecZ[B\oQ/=:"cTbj/.]Dk[/mO_6RUg#!%/nDZ2oTfVlTB$/WnfWe"e1@@]ND%4]8cL6OuB5pB2po\U9_UiG=1e*/--i%!#+
%fO:%SVB^i"(P%(%K`T<jgE=*F&DDp.TL`_&I!'+%,j[f-IuQp2UVnOIW`fr?;7HEiKe-<`r9);Mc)YK7Xo_hM3CJ.Kle4F!'pQC/
%o/YN3$M3\MiiGX9WPrsP2[:)cQH%6G&l(6ob=P\o5GXeZp5qn@S^OHc7[Ip@TmcjPi6*K?B,JJCR8OZe`]ru\8hfmgOh0msL<[.N
%pr$^_9Qn"j*Gp0Js#MMS%qli@!pOiXA*AP:pdft3,Peiq%rE2"bZ-`g"/2t!N4OWPC:PNn;T$=C`\=HP6MfE<"6f+s'3>YJSbO?_
%kUS:;3aYD@RN@a^T\/HLpu@jMrI&a`+WQd>X#@&4#R?*X4i.uN%e@tm[=jVd_l-aB+NqjASA9<lc;$[%O\7&,hQ@CB-J@mUn1@F#
%)1/6JhPsBL7I1mL\Vn#]dmgKd:E&LL'!1n?X,e=3Ri7ZG:.NrG`Wb;SC"ge4B2(GoA-uDfF+'9%jjXF0n;)>n<$,kmjFImgW6k^-
%`,LP[j8'o2^eRB*Y,5G;q,i,bZ8]Nq^5/cb@FhkcZ\_!K?e<hoO)[omY/lh+S9>9mde?9jbDNdE><U4&PbK?(?5.4jdl8:,2WoEk
%e*2eGnMVJsT/rr53jm+ue4*50qGXreH#F1ZcrAP<1@j)AHKmO[RPESL7Zb[<7Di:$6@`QdG9^[7=:$YbG@Q$2Yb3A\W*ss4FhlZ[
%`):Cse>.>JP!J""n;T[*kr5(Rc3CrG[`+;kg&Kd0WJ#b?CCtls3ZXTANKf%fSL?cRVb@\PMN7N?aXfb6qs?YoPpeIUKY*+e>@V%n
%Ec=GFQ*PIcmD*gccYS_YK0.JXPP,D^lm=X1Jo9!)SQu*`7$QZ[XtKs<YA6\!hek12mUV1b?qPFXW+Q^T)(#=>`MkRD'"Juq1`m=W
%<Im3W)7s@mlL.FWJTS;NE6FX.ru0iPQUe=fZ)DV);jH-j2?)1-Kg_Z!&Q3nEZ+=ZqVp<dmC:$mil=>[a&lNSAcZ!,7WS;:@@:L<t
%MqV3njIpc3EZ'@0?'7gjeXFBM:2.,5QiT"@R%U1&bq^,5#PNq+r+P%XX$"Q=4k'pbdACabO@LQGOBsLa;Im,9XVgUWEAla8ATs!f
%pR%>Onl%TYAksL69=du<M>fWcV65ZOd66LUSU7`)kR=*FLVsZkAb]2::<EhTGPmrjrN?I$`b>jpUbX0eBLd8>CqP[>L*!*EYl3A2
%?aJ!Al4Keh^>Qpdl+j?.St:*n0K+8B/\8X@j2/lKLe0NgD"8tA$RGR]I.PHeDj?1"AS<ugqFh$B3ng+Q%2nbR7Z\:HUjrp-(An1$
%I<cor3?I>d]Kp_G-Tl*V!R:AA!Bn8H\cqA7Bp2#QCp6(jR6o.AZe'.D8,oZ+\0F@(J5k9u5?CcHU^X.!R$8fVW:7WQLN1gQPX[$s
%\g&")5$YjM%9Z4V<"Fo=$nE<rMhkh?JVkk?2S.Hq-&7OkD6K5LPQt?NY:]1EUMAm-mERA3oX_.$k^=t]U13\mN*E3qn.qJjH+(Q)
%\XgPeV)Ud<Dc"!P:u);Ma/"$DQt6TG1K6f#E3dtda-r@-'p_a/5%-?(,>:B8<T(!Cd_L`O"',A@4EJ09?U:Ni=k#!q?r1]YkWP/>
%e^M\[='rcrOc0U0;h%uKJ7g(iO5b4+6aPS4<Zi<*33=G11R<jsI^<6c=8P#`V",I&_>i4YR#<s2.A.r>qXU%BTN9s%.q$<B;c6nT
%W1%t5*SM#mG:h#_c\>h*\U4Mt:Latq.a]@1[B`i/p9Cp+3MmZUEooQE2PiC0SNdOAcPS#u"DdrRrqWd%e;%71V:W):Mbaf]21ZI2
%,"VF^;,HRZ6>XVu3^u\(dDbF@>n'YR:QUtbdf:;Wp6iH;Z((;mPitZ?!Gs=)@dJh>76M]@"n-\JeRJ_3I*uJ3f8*J1^J&`R'rKM0
%D#MQ=I2)#I'WM24n[L3*,WVGW(T(Y=$1:faaRIGpetRMWWp_$>,8`Jk9Q@FEP]j&6ZY_u$!N6rrlkufQY>@LQS)&s=<"6/C<e[jo
%Xo-e$[Km5,j*`F371rHd>C)uhaZY?o::b6bG`@FKbn?=5M'I^3.3r;;B;'&j`=-LuH!u2Z<H3^5pN+fo5aRn7iotAFfk\uG'3Z=R
%OTG!.0?Hn>pbM3(7T*$4P5)?nh(,@39?dL&,jI,4)TF)j7jI]J=Yso%JV6.MMsar4EAKMMS-29WA>C8&oN>LbCpW8D7Sc_9eluoN
%bkWA>WO=$I!JO/r;`5t6.dbZ*!7KF9nF6dLUNWUt09We:J8h]g:7^hmo[Ika$]C/[O:i%RQSb%mWc2U3k2Y0dr85Tb2`lMHe'G3^
%r'^Qb[U5Z-#-K'::([j0pdcR,@\C/2diqZ)jmnje$lGb1OuI#C4S@p[8bidD^[`&Llo(81Ub!AOi%lNC_W68N%Q`!8(DC%;VG;A\
%#fI&uh9-+"Z'[CW)%X5RS6)=VB%Tu>@6BemOF/-*Ek49fbGcqriue1mRRkc=g]-4[rk8'R*D`V8qWBmtr4'm?4WW9:6"IQ:b*Me/
%na(7eC0O14Q[j0;H4rDK$S!_meA:+#IFe?rmA\i=&DnP#m(a#eLZ?m37J8Y-%rFo!ENj.4[n656IOd.b6`$hY;/'AkV`^;Y3hD9r
%L^?NYX3YW#_Aa.Gq:lc`48jOm-I[N.7i4Lp!5UUE!Om>pDanf*RTbVf`c;dXGul>pnBJ+k"BN+j)QkVm=[u-@(^?^+d#-_:jHd1^
%&eaJ(,YIq51d]5BZRrAgWq1O!%:f[A=5p:Rn4`Ab3Qu1?RAmL&0O+ls637Q7jY\s,;`)L=U.;V.?YqOB%m;OCP$\GE$cNS(M'&hO
%6V2_.>a#/qXNfLp#P2$ZNA0'./k1dJ'nUaVkV2UiUc#$6*+4R<llf35X$SLiH^NWaSM>+9L(:5)EK!,"[ghgf!=k6PCX_`'$mo:O
%o.i\GKb[B<ni+Vd4$"QlmekR8Q]$Rc;\8\Ue`k'sd_-8%F:QF6eH*CWDEtKlI)5;*Ps1tRpUuDEBmO'4\XVU=D!,n<O@qb68Qc*p
%4dR6_NP<-k31&\e[:"!H-dInfD4eHOl1%lNpQG#g12l'NUc!,g54725Y:]0I>Y]uJC0]&o_&DYbD>A2%5F'dV)^!3p2o8mU&e#+,
%rd3oBH_c_dZDJqZTn5gWVgE?Vo,<BQcBT\7:*&f:fYmAQNa<JuT"PA0puS@/U?LOs32_i"#A94=l)nS8Pa*s<8Q=>LM?H.sU_$7<
%\Ig'87ACg8p0Jcf9QH0N$g)HtEnKhT,\n,0J\JF=8JD7$@d!"^1-OWhW+(f)]uq!=.5:%55\;TD*.<lViYFX4nhOlm\G*NOQP;n"
%@dJqf*lWijSF5jT6$G1[WYsV*%D!Qn;g0![A%t]rOe<,>#'W,S**UVGWUr)RBD`pmp<bs'-=N049T=tk'$9p^)7C,HISAL+QtK+I
%9*)'Ym7tO"IYegqkaTNKp);bS>P+!+lA.:sqKC-H%\u1s.)KuZJ`4o.SsQQ_6gT1*qKd\5m1:E*'Y#'D`PuoeOLXBp([d!4T(^N#
%)"jK%W[QC2h-jjS"fSPYb$-ftdN^RAbr:,X9L!A[8B](>M].LkekcR+lLRm.ptU-9.86kZZW5*Oc$Tr18ESA5V\P0+L7q1%&BOkk
%%HhhOM3e*`KaJ=7:SDPT@TD>T?NMA9!c??p()[U4]9Wj'G=*eQB5B1R#Ul(I=g9jLac/n)V<BYPkfaa?,UMic<!0XpD@4R.3\SKN
%T9r6qaAo7XSC1:9LjWU9nSG*g<IaIV-o_&u?8H*JW4'E0]/&PGjg3%>+dqUhX%Y!T.G?^[8iHD$:$AP*$jT'A43K;5"iFjqL&P$(
%#83WC/K^KP@K-OA1e)TD+Yu`aOq<(ACcH8lCqDo?"$"&P^S)FI*gNWk-sRl2bcr^]2!F87HUG@"T6$s"L7o*%OdhDf07#\bKgD28
%mX/Cb)rF``!]k)MBgO"?Ul'Q!)cUdf8!?6DQ)0!F$jHs.-Na`i*N)l)8jLV0nf:bqjKo"_;4>'c2,=\`k`9Wlp.3T[q:Q@fkU1bS
%UN0,:+b+(%U&j<p/8K#((J]n$_%H5u\TiHgEeW)e`B?Y>=h*2L:b!5hhuUnN_@o?-?K"NCY.J?V.I;D[+J7@!kg-e$X[@YTr:jlP
%+_34OC%S@2o=m3'@ZG3&iM>Qh'g+Xg8)'LME%E?71YOnQRu`q;'Y69LT?Hk:%NoI+4=0P1&[,$;>l*$`-(g5^k)9?]Ou%9AT)LdO
%hTckE!0o*Db1#tdE^iJKD18Mt\Lu9i'ZQrNhk]k4lLo6,a*&e"#2SB]&jDH9R]2jGE$mH[Sal2bnjh\G>qVn"Q"Z&;K"cpr;HEo?
%c$.BFA"Y#)3g1\&;9JfZ3n-1#(fd+0@FppRb16Oh<(!nGH5R%uB3=P7J]N\BVI!8rn,sCK?^3s8FiA'qb''&k-WVN!d81#h!^s19
%jD9]A,]TH4%_*iZ<!O]PNufZ38QO.-SJ2JaBqgO`-mo1ri47ilBT"k-)?TuB<Y5_b;s880O1[?BDbDIA=C[/=]-=Csi3M5iS`eq=
%MOm<PLsjS?M2Jldhs@U,?SsY]RJH)&#o;nN)A-e]S'j^Y5ce,a)cO!M8p#oFG@Pcm`aSZ#T4j]C'KQL6pdFr&8Z:G?TS3><`2c:O
%Rtu_B-UZV(F"4po!@GMP\/VHV9MRS45k*<`,ZSAJcc.)J@Fu9:RE(W4(Rj=Xkjr'<%e^n@XUl:TSjMp'.*u]l38i9Uq.BMQrHDU5
%_fY>hq$<44]Ia@4lJnB',NX4-O/IDOFg?j(7e!PuR<E5O',FH+'?ATW8*7Bol"k7q_3R=/7pm9c3kF:F19PQ,YPqViffD)%`ZoHl
%`f:*ZO`(8Ui-Gct'(a1O:(i"Ef@]GUb<`[T^%0GIIJp@KQn'Zo^&Aj1q*@/r,)^6cf#KblXE(PkOd!mEDWueB4@ui+r1sqPa6^hW
%l5:61rjb*_P#m*mRs[Hd;EmAEr2"=4q>:2qR^r9-c($`WIug&rY%I*fbl(><jj_gm?d.J@R9Wce5,Nq'DCd$TS4))f:,3-c;KCUa
%1l46@i\R8Y+*qSmj_6VHm/\P!,?5%]FVIHqfk]F3:s"\enrL9?C*I+XX5WU$`THLWqfR@gH6P'P5r>PmQ8[cUaTd4#fT617B2fT]
%[8eh9iDA.dl;kSe!q2i9>H4i/.oQ,/9-Sr&;W!JjqJ!qu<MoX<B*ds44VnEo'_8I[3[EWaWYIoBbb.c82cB\@#16A04t-1kl4($.
%?0\&K8%[5AA%9p]TPph,=iOq"&`Rdm9Dp`V4$QD**7O([d+]`lRhe+Z.j2q;3H\Q9WXm.gKG9-qX%7B]N[8>IJ)X>MEH%u%BWOI/
%Q%u4;=Xf]2B8%M#Z&06(H@"Y;'UsV76":YPTk1AWj\Gi9kB<nn<W[BulRiS&2@[D>:Q>@BE]3\]4_H`T3Xa2M!h[>5&?-0YZR!j_
%/+f.Xs%cDf`e.JMT&pCfc-u1$0;,$:@)#4+43c6F7>lf?Mgh\Ce-JW5YJJ0/564'u3H$Ok-3^PNr)!=cMM!&D$^n5^;MTD38KCe\
%b!ETT,X&7QP,CS^o%ia0&6/d@e^;]6(3Z0;JQc"hWY6Njo5@tq\WS"9[B@UBaHBV/qpY=3fBF`%%M>(DOgZi$7;?^9T[B2)NHE>l
%m`E>P>"G9_dZ:G&8H>d[AL>2&'BBg6Qe\6+cRMgikusbV"@5LFWr;i,6a+#lWPkta%`H$-=@on"dBq5T_oV-u2^pM_BFPZUVK`e7
%a>=X?/lSke(*e$taB,1F$N3;gZ!]\pp'7261C`"jP\'@<.:Du.4H3'RZk;Na':r0N7#*9BX];0sbOUmumM6lg/`>WMRR;%Jf`@rS
%s+"HeAb*h7fbKiukjPR6X#eZUC2,Md73s4^8%3Q>KrJLo&iffs,d1Q#E3/nFotHgcR3,:D;&HdI\k*06OiHGU`n:+EId_F`ZDh@l
%$`Pr%,)E&mEH,K]A.hf"b?!5IZ(KQ]8BBoEE6343HKH<Fa03,YiNj7-e_di`nH?5=8eII0RXXh\lptdAQDcAnC&:!J,Xr#p7(tsO
%P<Teecn%Xc71XK@F35$B<-lDm,5&pt7;>;_Mcr33:./S;IQ3e3m^tod(I&;61<oAR\fLES,+bhQB?$]L0!%TlaEQRGGoVs&K48m;
%VJm!*<ee*F.,6`F=XKs^"pHm]&%[fM*6\Re"!:31?&OH%d$*").5?<*2)^MG&XT<cpg^])Kk/KQ0qpFph("7%W!;/KkE,ZeiF%Sn
%T$![@/kLn4o0fnGW8ZmMqA>\0)@A&M=8_9h^!Q`H/]VX`C5B68A2T40?A395-$FfQ8b)/5\ZlH0SLI"]S=X5S\IconXl-c&Xh>*-
%RXQ)',65giR83qk'-Waq=JC%Oap=Q.SD3R8j<2DoWDC`#^PXXVXK.Uo=e`9qX,lZO,)nL5?fA4#Ltb)Rl_70.1,@MC!QHA,3W@(p
%XE\h<VHn!*[J<R`,sP)HV(<V$`P8XsUXsRkXY@AEk18#-Fun95'V$brm`7\O#-kCG*Ascfiki`34$U(lDHTt3q4Lj9"i+;oHEO?/
%0TjEYF0RlB/-X*Smd.`QcN:<Y!ejb&n=fpL.//E13)&<[6N027?2"`ne?dk&Y8YrF>?uAH7l)<`(5F]PRWo0f<R&F?c=#KN)lG;o
%N>>13mI&tUdc92KSU'n&A6AeeH0_\5)t=Ljk((>#=KD7Sc8nkA$\LT@MU#d2ZV=6Y>+Vr;-:+p/A.hnJ8[-IWAJ3HpYnAUmP`hF0
%523@jQc1c_IQ5#\frZqrHCBmU]7c&ST-L(/FM23aGiD3?/R?B'i\&g@$>ZNk@g1tu6oGW")l.*MM)k`t+u2\5p"o,3=Ej%R75Bc3
%#qiBSGbu1`kFGZ"AV`!G/"aOP8j2Z2c;E7,@<JiZX:s-=IaiX%.^gHL3cl;;pl\2kdWK..[mmGiCPb%+I2M/,V.hq*qDt`'!m6e]
%&%1e5Z>FM'LkG#bcRk@M=>1UEnj=1DFSQ9PGZ)U(!a\'-At1A:X4i?T/U:iiltEJ1\L"#2G)dGaOa1>gKOp(lk*Y!U1O-8FK4_3o
%A/RVr1b;Xc>?5kRjsdH?j&p[M#8<3k_&]pPKd.g06Q"Ep=Gd+`@Em-`'8i[;poV&BH7p<7e6'#K^G]@V,4FH;?Kc'&8^n`]c+pYp
%!9[e1lHiqDk8l:T5GB`V401E8e=+rk]-He>./-$]&8G5B,+O]WCYuV'RDVdD1R9+iJjAqrQo0-BL[rL*Odr?>AYEDG@8C*pZ=f)B
%aj(IDN-HiBX#!82Nh"[Z.>Er3N\cnsEpFKjnMn[3G_Uj2[=s0q_gl.IoF-q=><H5-Uq1cpD[.[[[g`m.Hlg60LrS6^$5,upMo)6B
%_:\MQG^>K9,:k[?MAI\;U5A)F*m0N-6%!Q!Fra%6#&8u,7!OTA;c#RB1!\0W>DekHJY0,p&@Rf['kG;gL[A>U'(-((G[TTOP$(Hk
%G>n;)c>d8HnA.ur*^4OV!&]o)YWc!*Vb+er"[O7JpJgPGiHVEGM9i6E%3+DSDtsro%474\DBl=(kY1NN9!&Je6;8iG+9b/SiL!cF
%+,-hlcF;3(fpuPk'PheTG,trEE\cAZ*dDd;J3`/Jl<UC::<`*<7sm%NMA2c*na,:r.XZ8"f!7KM41=+hJDNT.%<3#!;mABCYXgb,
%mhZd1*jd\kr"(82pX^7kp=h6;%Mc2u"FjAfj*+10M@7cEN"JdCM);rTDgsDl,B`R_@MClp0rjpZ^Q-YY]VnsW1ZX3en931/"/)9Q
%FR0(oE2;n)qX:A!AN6G@X?J<J86L%C1"^#P=[Bk,&#?o*nF5CILt@t<<nlE0rZPi#K\ZuJVPINA^6?lCdBN9"DNJ_gE*!6M6B,ZK
%I6OKG]iQQq-dq7Z<:i(Q3""0X?4oTLAru#IRefi;?[C[Y[ea;Qja/*Dl`;]Y&1M.Un4EgeoFHPT=p5kfZbeKK=K]EB;3%?:BU,T"
%eYeYn1!^$M"-9VFnZ19>aqV4=rP-H"+F56Vk)HRY<O#KIT.IcC?OgXbK:O,MG?@/,/SXk!IG@^?@\2]j2<paU_8e,d\k-G)h+r8a
%4G%P"#qT8a+L%::OP:s',Z1+3kB$rP-,ML`)[;k1hP7`hE86qU(-oMtY!uLt?2];1"?k%N'af7!Qno:+%_cro'_>II\De92(fAP*
%cOEGl:YaB$%/ZYPM,$/<G"&eEQ@_L<@)SASI#PKJM7OUR1$FMQMe@!_7Wb8seT`W'HK*AJge9f`D1=2'?4;0W>X']9CJ5]oZD=rb
%h^d!-!YQP+-WhP8K2?dplNe0jDc34,!gjAM<RAP%4]`$)5&k^6Q%EN`*g2ff4M5hW^J?i-UMdJC.^(VEL`Mb'Jj^EFOLQQ4M]AoH
%`ZM7(QsY&i!fTGj$bSqGZTosN`&4$FS(<G-"nK3eJfO!<@qhSH9aU]!i/HX-MMF"(B;_>`.8D%'Mq_kuYN\?K[sX[Ja5A7s=)tJQ
%cf=$+kdWA#A$V!kd;p(MH*k[EQQg/.MVo1Ur']1B@\:YFH;s;3VKM`UFfKo#D>%d7@MuA9g!,k$kls7;[>h6bW[^Y8H9tgj<2hS.
%H:C\8g5j4ZM<T#WVWCU^\.D6.H!WqR,hiUig_79&7BT+TcFiV2[L>Am4ini2ehc!_clsNX=PDYn$B=Y1`Bil=irM]38C&NiGZISs
%YudaM1jj.p`K<=:UbGAOKFpQ*?66f.[MF(*'.M]B]&1S2Y>Tp>'=A*g7a\OV^S.[C4tHRXi;K\=GPqIH&_*13aFc7gD3n3<MACqW
%_8\>ZUP`$>cXGI,iRrZ(,&4Hf)Hi2SI>"DZ]dAoso[[\5_4s="2KKa5GaYl26,A!7aqfs+j9n4C&=oje3f^cQAC<*0)k$R/8%U#p
%p>9)5-BC[/ZRuZhj_'^.BHujIeXW'+(H%<EZ-2S/_5sskldXuE]8U\:;3G98TqPn?9a_e1h6`MEj4em%h@dpT@Ss'n&G&q<o'Un!
%>@D+O3fAKrBHF-R_X(3"Aoer(Or%<gTq7<DJ+smn6"j1<]m0o%:/WKol:!WLO62Ci@(4;3&-a$DluS=nD1t]H)3Gk-Pqt;7c_M:"
%0h9X'W0-o&d0M.'e/6OZ]im4mA>Z;X+F2+g/.9"cM1^iG["')Mp>^+c+A!c1`_pm.PL!6:I+6(3g*h*ba>jZYMM@Bjc&O:;2?nb#
%+[?8"iqE^n-rS!BbAoTq/cFiGUllo?.Z`:"ObWe',r@X/?Jc%f;LOnXJOr?$;C+(SJ$-C_;(:)0`oc/U4'^2kA@]+QeF\-5Ie5h!
%;7JV[(Kil%i2"9DH3)?C#Fj[?iX+"4hiXtf_I%>K6+E`KE-\m`bnQc!5<KfnOhgQ<HeR`nT6CM!6$^jS0.!jA8qKh0IgOf.FD(*X
%=>C<7XFeNRGSO6<<Bk;\-iCnb&Y<i'L>j+iT'[mh=JANg8>.<OE19\#BHLSs$-Nns5T/F#G2APOPE-H[AZ0p6FL4K40Vm/gD^VN^
%M+gQsiX!9RGKC)PAqjYc$om4Rm:?3<i4oFW__dk%%'FiXUS3^k8(G.P.D0t=b_RjB*h;VNpbP\u:sI\>Q.;8qJs!lodHM`bB,BkG
%1E$_k#Z6TPLNm[sTr$@;Vd_K(@u\V@Odst2?B8?sL6A_U:9CjkML#*7Bo\jE9^`OV`]qkT9#Rru(c"#IBNU=<*eq<6()[P>oK8J<
%(t>",QQ:`q8$Ru=*Rg+o3nBMiU5*Q[6`9],1fea.?d)g"N<07m:]#hbSa)IPWoG8?^Bc-niL1>Jqu.2BH@[]kn5gQsM[^dPhrp*(
%JNJpq&(S/g8IoI"S3!kl`;%g@GBk5mWQ[YO1Y(_C42#],d5rQu04/F<rOL:*Jf"enT#!29?*;2aoA1@(*UOl$=\@(#]6?r(fI*Rb
%qar)d4Z/]kgQ0g]3e1l4].uk^Hu(d%#mc1fD09k].X.PX0Tf6f)Hm[Y6*.qsf/!4I9Z!/u.As?D3nEMY,c<9LB\+gL?o!q6a@DJe
%do#([S_;FSO%jM*`(3NWMhr,s%(]`!CrD&#%qA.r]XmTW,XhA3L_>(:(>jPln;3Q0%!Cg:m0*Hhj+a:]_5]dr*aHR7%U\P^3(Ckf
%]lU-,l-EK*pLFPaEJbRt86:XuL.KcB!X0ELCooSUal<^@St.7qaC'h\@mb1%9E@'I_rnJ[M[Im@`6QP,QVW_]:t[)E7?N[lp38^a
%G)0SH8pu:]"nhpL@^RSe:?D(Vfkk"Ohhr7%+iW<#ASqOQ&h2%YG*^</o<4I8Zc*)'WXi%WfCh4\(%n-Y^'el/,5>05ItHT?JJ:,h
%U*LSQjdgiKhp;/d`/I`ho>m>=+#MBa6:DL]HGmifZF(n+hq"@l/C>6+T`01dV+?.dOC;i,nd$_i'$A6fQ[27DZWH*R]ejOAg,nPD
%e<lu^E;J%jSLSUs_0HLF._7g4bi7tlO-V\;DI]0c$@^3#`IjaB$mdU7]ds=H?ms\9j1oPmVNj[U.jdI#PLWMEkH)Xf1/_NfHA77/
%<m2QhJ7MNSS6SK<.eE(q;4naL=f"eN7h4JnDRF#SDQ$a_3-?F$Ns$jV#QE5<YD&d>=#$jMK5#=F#_3ZgWq*fr&U)\r!G&D*mQ)%n
%D+/K0%uho+bJ+,E-kKWfk>B9V$dGU3&$I<;U[53r+CXt8[3@cnd="lc7\#J>:]\9Di.a<UJ;Ft9@(:D$%`\K:'L*DNR9b/4I-iYW
%[.nh7kS%iM3V+R/j5$ZUI]fo<e&`.m`WO1aD3+cQ<F^H*Sae/E0Gb]+S4*ac=l[4k.\-Z8C9p064h.ZU8=bR=7[\i+V"&G<O+n1%
%_nsA.ZAbP2TTLK[##bd/9mWtDW-*B#=S.j?fuMap0[`XX&QFGDBnjUs(QGcFntihh'raokj>o67\&=nsjuf=@k%#T=<b!?0Sq05h
%",@8#d3&Qq$=1$up'b+B9iGItZk'%"S4nkIOc4Q"M5iA'4]`Nap-Gef9YnZ[&uI0U3aaY<P`NN#iH!smX!l6F2\&65:qd+$=:\O"
%Y/f"dP"R&P6rhm13&o&X'O*AAKO?XY0dI`fhj2\r/h%*@PcF^"H`)O[fc+;6==1nPXTl25-k8`gquA!!]V=A>eZ(W'KFO_%CoS.Y
%WVhjo-c<Q*FbF'nhRX@YE*al<M^_a?`?DD$&7>fg)4?#H$=hAp<X#]DPJH__FZMp/QT==9\KN$qI-hJhDFZ&=!oO3;PWF1DX97Su
%@/:d<k7]Nbe`ImD\?;'<]^76iDo=V`Mcr;B_%6^:VIM@W/sS*l>&gW0Jqp5Wr!8+=]^@nQXWaq7ji_^S0/_e>ODS6no>d5@WDO-;
%J9#NZL\S7IcsO\FQ7V1i+?A.@8,Y43CRss!d:5T4b'$M^nlsW:K:n]Dr%dU@"e4b5DPab2S0IrJI)9EOmggseqjOh8O1oZS5>iRT
%*,`Ws,V(.geVYJ*CD6k^`iqn'>pn>3F@bhS$H%i()"-i;Z[R)a&RG9)M.N^OXH/jAH5ZV/GqC]kU=9jY(u6d&GdNuk(k5?e.J#dE
%+!VUJl[N8Mm",a8ZQ:qe5[0If3COJTTgbtj.dMI$c,B7UJcH;EbO/DX,]%lV"0aR,FT_rR'a,sR.UCCjA9BR/KeE_0'F/$6oMe-q
%O:5;)?m-M2;.WgcPT=`\Ofc]njCT7>:^tIi;`hkM];aGr`^i'8FPKdYK=fBV3Y3Tn`Kh/"CP7]JG)6sY2K->=YQh\$D(\ReK"Nt6
%AJ>A@J:BQY5-fO@!*Z`9IE&V9J'$"C>)hO?l`X#_Fg(t`1@qjnTN6q%7[P%nN(mOXEK\ei65V^Xg`s*P(ft5k[\6<d)ha26,\=oT
%]ciJ3`.Ya,"G7XK[j]uZO?6R:-V#NX`03X7L++R\L`7ZdOqRo(756(i6Grsq4cdSh[0V=q$5[>cR`Q65Jk1pr>7/5SF9IE>V_Ya1
%&SEAoierT&iX>mLeHVm<6Q`iX+KSb"EAue&2>29&-T<Df=K5%kP),GJB6:,Y$]9&rXH>d5@+P3\CI!Ug,>q$PA+o752UCV'.GQl%
%%><_AEJnm]$=XTZ9Q,17_>EEj,N(SQh%l3*Q"!O&M[2Bb".<Q#,),$\5Y.0-C;I54$CF4U,?V4P"2\c"nHXd#>W`nU6GYi-loM*I
%Kn]&N"L<*[=4,kq=)hA@\F9uF$8--";5T(gmik1uTX<JP^kf`Q+p,8Fr32g?VR[Ag_(T(P(=hZV'#clD2hKf7<E#"-M'#YB'@/`4
%U?ml&8>$CY%`q>ZdMJlO9Y&t\>&osCP&K\E%VU^e-(,OFNbKcj<Ujlh3=ADQ8REam6;XWHhLd@/#PgMfQ6,&2Ys6?(J^?]q46`DE
%YC<bt%hCBU6W1?#rbii>XFEnO:UP6^/A<3R[*\Kp6O#q!,9Z`fHF1nfnL-O76uj0<^F<-\ee9nLbpDpaFg)MbIdr)S4V!:i'1hdG
%UaO4OJBVa-&$0'Sd:CGKTtCSoSk]hZWW3]g)%JWMFJtW!V-MZ1be=sPqtP(@eM)SKX'tgeiYW6V2uL06G93i@?$-TUdk'/`qG&:n
%MT^+>3U#*.0M8:(\I-\5*3i&n0uMjP;*]._3)a9BNfin`=4#t>]-X(4TnOC1gFXlcHpY+fP%D&7WIR#9E7QG^d%3M4eI0U`jN2Bs
%)_-<``YoRMJja5g8'5lM[?]qRig!:G7i@[or<1`j-E7:n2k1CCeS(0qC2kFYa09iO[O@Xmd=<;hZ5aKE^V^ZmfQiMV85]XE\.nhg
%*658g'T`)#a69,=:uE*J[/#L=`'i,q7I_MEI)?(dr;>XA+p8gX4:tt8FJ=WYPJ^&/elWfc(@N7K*X,Pq>eNW97FYE@$#&&/(r5t[
%rG+@ER3Uo"T$%-"kaTMO/3DD!U7Fg+M.$^\WmMa)V2UL!lA[&]A,p]c1!\P!S$CZ&IE!uoS:/T:Yl">B[j50eN[H528nUShoe`n@
%-Ote&k'3Pb$JLr)rX$Kp/WYWjP[XIMFX3n4<JfcbUja"6^GB!/j:)+*/+Y7]J-5uD[atflbH-]!(!*1r!5")$^FG"u'bI!N5AeC6
%i0,2c<EPVcGW*5;=H,6:,pJ&:P//&fA%eR!&\ubl"2AB#'f:r;c_&AmZ`gdU+eDH(=O2_7b=+mha_u18-XH^QA,mUjQ]cTF/SJJP
%':2`GjDo\b!uC^W/T'g)osPMj6Xg,CAe>6G-t61c"%'^bi7DJ2%Oh0nYHgj$Cktn+<+K(/+4?*qQd.>X>;YX^.Bl.+n5UIZO5?3$
%hT+`8#jj-&Y?%F:Q&XQk_u3"0Ufa@erkVGh6Aelp$83j@Z3!b8m7,,nic$;JNt#,_7XG]@U<S8aZ(JnhUDiuM1i;Mqq&'4")Ds%_
%%7L;63/B6SJ>tq$D&Q3OJDtOM:o<bdMFo4abj3S8.-O:#@S0T@5.<s#pUq[9Qo1oPE>0]Q\j*dpEY@`aV!'9FEL5Nf;q50],>oeQ
%jT2=jO;):Z;6b*#91!e]:r'.;+sj/V>blU_3a.d!k;Nqao(Y4*8R[l)gODsn;JO04jns/(VB3d#(;)qV:VB1?JjAC/olH#&Sic+%
%mkD=Nh/59jpUTXS4N.>TAE8p/PK+-T[>^3q.U3n'h:e,Rmco#S3]UQ[\!*4%?_Mo7QI4RIWMle8l]XEf&JK1[7?f3(+Bc+tmhc3o
%8BIhh]qZCaSKdZehOa"#UIpF7UZUYF+S/!L#J*C#!$J.)F1lhJ2&0hM`[=R=18E>D:_jm<"mCu:O]Uc1KKKrKbFuK2=l:L@a.r\:
%WqnD]8K-F;bGU:3kuq=M_M!*>'KF(??Y69RPagZi_Ornf>YjaLHH<o':.i^Q3Z;<VhW&3E=slp-k![&mD`9JJMO/Y'pY5bf<EAk2
%S-oQQ1qhHo%riXR+p&mV\%'&pR/YguVs_jJ?k[A7kkJ)(YG,h;AdLcA%gBpo6&KnaJ6P-Io0e''WO@EuQ9,TJaF/4o7$o/6;(p9d
%[jQnn!VgW&nqkam$C%YPfgc4b-FmgsIkKHU7@cu-X!aA;f,N%04X8H8Q]__Hm*qaZ-3K/E-4']Uq6UiFPd:_A@--'jDJ`^rN.On2
%NGb.."9_.X_^*&9LD=N8&Qo=G5TAnT=Uuq;B@gK9m$)PVHPA#f.UjMb:=H4bC[5d9Yb)TXs)1sg[aXs\-efhA-%s3e!W'@B[8F>E
%E79s%9Yol=&s702RHKF)Ad^^iRn.%TqC1kop'?1"lq/_\E:OLZ7YMn5D4^#VGj`cSTgS]^p4PAl53`QUU;uq58*.M"jV)ni]6ULF
%3CP7">gu.A^XOR?FARfZ[]DfjHrTaW/^'*O3`Z!H36+/V@+e#MNt^jg0=87=&2SU_E1=Ltgoa^VX;Ad,O">;uY2:66%3ncej_jNO
%;T$YkNNcCDBcEHdWk*>2<3Nogbp62O`o+[%bb:QR3.Fc97ggfe^LYt@rhH`d3P-A<KK?]&f+\R;P(/fnrOUUQn#*!dil@8F7QK;H
%D[7MM@u:SrHB*u*3D+kY0TW*%:;=JqksdUSIaq5>-Og<pr+s0q1lA:.G7d"TAY)FgZ(2J-?T]55'BrYR>52n,R<3r.qLmITQu2;?
%(Y)Z;V2%T@kNa:^1/M$1[#1T];6._aQrthP:7338U5RF2P623.U1QuV'*5:l<V.Q"6K+9@;E82=M@DRNKkq-2+]$B#IQFhKlPmkP
%NP7N"-T8>0Ft=rB?3$m%$E<UO_UZ]G]7e2j]P>e`Pec4)fs6p3#+e`Ea,:KMO!lX;4f];7+M(PD`SP)^ilU!0EP+>Tios^!H-4a1
%I(SJ/?AB@#_=[Q),A%*G5fu9go]V.u!NWn63uS)p=AV.b.nlhCKLB)k[iA1l!WjDD0Z,lBa/o?(NPpM!MIn^UE0_W/Ill)K</.?q
%1aOQ.r(S)./;0_hN6<<+An^foNqP2.3mk8P+ZdL>8-8N6-;'V"EJc0H?G5G7P)'+P#ukCg-XdJ7>b7%!Hq8\7P3%pNMX#RdI2nd=
%G>IF/?Tik&_pPO,^#bn*_H'TGT1#E#3fl#M&sHLPhO^YR8=D!0L1^?D,#:e4Cc#fk,fb8\HN&a6$iV9ra@&6/M*[DOO:2k\!><2j
%a?CnY'$j>'&l&6kV$bV3egEum)(K3"-);[6'q[#o0^#4&)=$i$BGT*W85A`t'UmjB;d<(X!<8BMBH9$jm*tJ>-E\Hk"DEu[Houtl
%.kN<GUlGrVUa::AC=tR6)'hd=PAsKo.7/2LV/\cBPkZeON9c37J[?Y[PLN9SKTen7OH6/.)n+l9gndP84d%N=Im:Wu]p6ZKcs.&u
%Dl9P'hK8q4H3?],,R/rkjNLgp3c7"TAN62Npn48t]H:nF*pmh+?T[hG(lCbDTLT/EmInmsWdVjl:1kmbc`V61'%7<+V49Y;)UYW.
%<#O+9;-+e.PnJ$>mg;=C)Ej584)WA(h)Wn3DJ]43BTf.?8]g(l):J(XVMl@aar>;431s;)Ur>Mr)UU&D+<3CiI`TNi'R:8hS5e!p
%SseJ+FdHj#o,`)YX:0IXpgOOUb.2e4ZUTHa.SQmNcT5EL>`&U7-2BpRZl"]!MQ%g3<W.S/75F:'#euYNY=>HoFh&\7$'d7ID7=),
%dAe(I1D1ldpbGUcR7hr;[7lZ10G_e+Z>h@t77-X<GTRdV7#-HPJCWA=AFij?qj`jA,I#3#H#kt">P/gc>N3t/2i7`;]?Yujj%=jA
%o$*&$$=UnO+2MVi[0gQ4M[;?dg1=HZ+@<TJc"OIq/h7u>D3-!*EP)CtK[Mhb95F)7/M2^$!+WHn66n2)#j>R'fjd#B"Rbnk&.(TN
%_!j>`W4h6=e#!MQ$m`WMo8&[3n/VLq@*dnS<dc[>9i=*s5^F@$!W(DBAcOX>:<Km+Cq8g=O&mru*h*M-n.+eK,`RIqVC>[SRY)BB
%$F=.(0h+PZ;`dR,Si$pZFfGFuEa7jO,X1*I"&V-HVUD$sH,?QojfRu2rGu)U:h#%4)M%AJdM9<4`2=5V]Q?V=]d2Pq.6^jb#>7Cd
%aZE=si8Gc#O)j=/FW^#@_(otF153'.i?Ci>O_>'jgP$EJN]rDD&]pFkI>BuRW=n@Lo@%pAC%n&E:7!<H*4AIJ'5A5R*WZ\3(dn,R
%[3:8aB`Bb0GS\n1gl>r;\]DAADOodX&_=2J@^":a37K19l_pFqN2QbjiOj=rLDAW16H)%PYQ/0!.IeRJV&]PD(L,GGZW0<^*5t@L
%Y7etMs3GC_RLlZ"dmt)&#jSaj<6)4#I]0hG%H;`[UPq%kd1s'8aZUhQ1ISH#dJ6(FWfhI<r1lcTT"9JO9?'&o.[i34`X9(CFFm+B
%ZMB@I0Kj1.;RBFr]t0oMqo5f*+4;c5ke.`R;D5hP1-FWb)B62pOSm(R7odbX#L"Bm7l0Jg/eC.WUc=>0KujWK[[h(?TLs($%A.`K
%&1+kI\k,6mjrs6ZCunL3-KG8Gi7*[u(5gO;>Wuc"2+T_J=nK[$@]A:m86,Q981FnDBeYOFeE..afi!]e@K\aE<LXo,\*s,nX+gpU
%c)JVg:'93JQ^"4aThJpr`fY-_L9abn^.e2tU>95BVa+M<BD%H0N:>pVSUM4!-&gqBo+Hle8IB9'#gX2e1=]6W3l7Q5WgMA=-JM_%
%D2IQ"lB/AGfDCFlm1c+M(O$g#@(e$TblDL<;Nl3W;Y0*<"<``h[T7&!JOJcpgJh6bb7aMK<3I`aCWS!`UFY*AYtCRDFDHVFhZ19]
%]60O1$I!rM4I)GFFo+-WpYMfZLGqg@b4FEN-G>/e;KK4tGWs?el0]??l/Gdjl"s<#KTj]3=*jA]@kV;Ce$[.)a<8[b8,Kiij"rnd
%51hi2G3ROW`q^:,Y5n@GhJ2hn;$fRIkN5Og__GSB/onL&U(c!i2C7/01&@.-/+g-G-MW5DJ[`Wp[Pd>n"+XT18P=,WEf0cUqkRUg
%$QSINkh\\\0?'![!Igt=`J?]Ik'QRK-/*t18#bh\CL4AJPVEp_3,0(DKBT[5jHNP+h),h9Euh;P%*m$mo6L&jit=0$p>&Hcs'&@E
%>G[GrmBfhhP<EX1Ua3DI?6r*RK/*r@Qm3]s./7?<<;'IEN8QfO(p%gINB!OBc&>&5:F]5"FK`E&d`NrJal%j5P$kC,5CdAM4qk&E
%k*5jI87ud2BCVm'Ld)[8*CYsblImO5T#A:b)K/WbhP;;WUob<$=Zehk]`OX;1B!5qWVL@U2JJ)<F]RUA6r6C3*>%tCP4+],HZ)H_
%a(^*oj\[=.HMg',4-4+ZaTi2T!,8"CVW-`?U1RUDg3AT$&ZOE@'Ij$M+akn768or3eBQ>'pV&)2')AZa#6)C5i\L@5g6Q]>*"!6K
%ES,C&@GVT/[b.L#Nl'"H:,S)(im%Mf*eu\T_cZHqF'/pX;MXIb@5(;qQM,k7O"&kKDLdgQV_k8Ac>7JZU[a&:O.DM,'0Gf8nOoq+
%lU<Rt73mEXE<2#C(R5l/$,D`XHh5i8n5FCq6p$I>lok4_Ri>@".SN>6Ap;GBPfr0G0WDRgjbC<lE/!j#^7`a"g-p"I8YdD("&W?]
%05?]g!6LA'Qp-1JZLXA[^Dr;(FA]*(/55]IcgaBAlpSs[3'iDV];Xm0S)Y_BT:XR,LE]1V7O0D_?AfAPV,;u9^ll.Y.!0W1R_hBW
%D'_Y9O)bA"#GXM:5-1,q,0='MYD'(AVbIHSd``HR+?Y5DbOO2aKY2ak,?-Tsb<S:,2BEofbjS*^5Z3rN7!%8WBL(YRi08l8lmaRq
%A&opT`(\B]3mkqLMAMOI?c3]dRu+Lj?o!Qa91nK3NM!'RBg#6iLVhB'"o`#>B9Em.M6))b^E5Tlfllq2+tC+F#-S\0NQ[M<c`(`^
%bek+%7"A5SHP&_-.j\^5q`?ti;E3%cC^5CoP6uE"*3%Lqp0u1OoQu?9kU%&VV]:=#?78o;%gqGKKU"e\*ps)T&pN.F)*!%9!0JH6
%VJ@UDM+A6"&@4iVgsT]P<@fq#"A8G]iq8(t;^IS!`#F?:IeFX[(VtnA?M098;p$JL0ro03OGRj5.k7B.BL!MtH;q.-O_C0_LNG#l
%;'+!2/>2WVeL0'G\bQk>jHPjaH8KA\.kNs1IdHFkf-Hp=O^NDXZ.A`X3$8-ornMQIKLK@,"q4bIaJF_Q>B#7<@Z$bT:ui7IAC$C(
%keVrsShN;BE)?,9%CDqO8pDmDQmm&^BuGa^+:*BL4YG>ae*H'qU1?EY3s\MM%AI,r+;U>/'Ri;N6-;*-pf0GU]I98`k]CVNm`>S=
%DGW=B-70Yoc[$;NRmY"R7?9j&.\6HuU/.p_j3$h4i[Gcl?m\j^ACd$*X[ctc:(ChO",2C6?+$s_ng5+O0g\`.V)9LZ6c34nRSKP>
%<&IA`.3*Lo>N=C5c$ZdKOeRThI)]J<OG$^n/+S-5[Jn)`Ll=tJdWF0_,=JW?PmW@KMWHT`<i"!7_^%8jI`6YTliA>&76-dIm'5@D
%aF<n6<l4#sl[$fSOLN9aSouO$J'E];-FJ"<9`RIJ%Hle4#+MKBN+R3_NO3Th8;+RXah#4.'.I$IcM#$ea?E.W8;8R09rg@t1NM+M
%CRf6fCk`d@$!/*0=//>Ea/Fmq6k+eUWTF[6bXR;<0,L7`02O6A]A&B4Ok@S[ETg449(I&ZPmF">gK!ZU""jc7&[&pKaml.X=IW0g
%`1ulk\Ed+CkW7+A>nUT,\?BPA#b<2$2";Qt]\6DWhTR5V:)N+JLQ4k,N[rLf99$Z#/#3mn*^j31.(UJmJ9\_Ph5k)ZZ^q8/>@@80
%O*<mbCI?CRcUiFT7Z10nObf\fg@_tQbpX"qIQa5=a=([]Cn[doe;rBm)p9]X.O?R7Hfta."a\446J>SEGX>bb/K[lo?iFLn53+$,
%8L>Q\:QQEq.$D3P@Pkg&9f:Gn<7_?*i9[d@%?I`CfX(ka.r#G>WO\!p,'/*iC[*cU\ak&9heo#+GE3(-Z;8LMYDtW"AB5cdEe!MP
%_sqg@Sk.<pF<)kQN1JE:es!.UhE%E7\qj?l+@L7:9DMXIrQ;c"9X^A8ZPPHKs#9ldcTT+^CbXPRL3`>0bBPq^Z-uECP&f!g##S&k
%(243Gqt"]iWqO<_I1.^SO?9pd,d<t]FK4^hViQO`fKu\QJO]N>\bi$:D='J]B^6*j4GS%!P)>]+MbUD_W9NkZ`-kaBK=3RCP?8Pn
%L2RXEO:66)@11N1i<n6$I4m3\MiEU1c3tg!Hfsb'\4g:EOds+Wm8!<3ml@s4MiB6u@Nq52V!OGZ3l4Y:\fVoC>[8GTof;01@9<gu
%a)fJ(>iTpDT$@4UnfPnsN-P2:N\I_>FQ-#4]bI%?UH0#Vg[Pco@Xob`O;6d]nk,96/iSN>I^neaaBLtlc6P2oj3`[IT$;mEO.U6`
%;f/ug37XcqNG'[fT[H(lJnJ>YIRmlZ4En"+Esrqo!0*(?%7qnd%V)-b),nDc<i[*n5=K_,&Mp-qL]G"6g;@;`Q2o9)Cjg\&JN"PK
%<-p*'r=YYaQRVWV"m:]_m!<MnFc259\.I$X=4EP$\Nbpg:V,o[HLTsK\0NQ3<rC<.B?MY=2.jcpeE.M`[siJtPu`oWTY6-k;&s]+
%q.me87-ZYd\tZ[&VAk7#cRWVO7>qrZ1%!_0d\C.i'qj."1%T?F<2_7(q0@RfY7nl2?J(D$11*u#V<Y'Jl@5#O-g<a?^L\rC85?)9
%B_@PJ8`qK$o:R>ZJ%T3S^I[70YWNh:70HXiBL6Eg33O3sR+b"umU03jC7k@eQ"!dV/(SXE>dNXo!jAVB[q.Lj$QMhsA@?YSL0KdG
%.lBYD[-o5f[n^HM4jLAc.].;dA6+iS8gC'Y>W\dUT+gQQ@_t..E?:AAgW.FUlAdGpHFU#p(eO*n5;S<">6tg27Qb3oF8*-(#-VIA
%Uji$:72$@T@*D=+=D0>s$-(PD[6U2bl0M?%;`Y@J[%EqXGlnBnK]e+_MEgNa/#pGQNbq<`E#-K!"E9Xoi(B_";>;N=4'OeR_c`5a
%bV<_/q,9a*d$BqTcfPnq=OEa>TAh3(R,<e]M<&oub/RNRaj8Z%jmLo5`n2[f"%j\=KZrZ=[Kn$WO.S]L!7njo+!lNM"66lu.GlkY
%+_0R:A&kN_1kk*eN(K2Wdob5V&R@d`@`N-GaO>9;V%b,NY)ABhDY$h)7p'uY0I=in)7i##$RVlI=r]njVKqF7?$?9&H*44lqWM4m
%?'c7H:L(b)b<2IBXV2BQ-kE/FA;i*>eIU2?Y>EajD[l=SiH$9`Es'S8rJ@qbn2k8^SpYgka"1tF[HfrCB2gc]G+OBH*!Y;Rf';Qh
%8sr>*eqsUYN4<Xdj6H,2!]R%l?2,>],u7Et`upElAC@%sW:7G3p"E.X:f3ICC]ka8n-Q:R!h+DJ<%"h;%5d%$)AR[W]1=r&+Wn;h
%BKP-Z\NZX6E@=a*,^0p6-!YI>5CZ3`pXq^%^2-`XUlVR.gm7>=-)`/bS9MZ7=8M.SGZKrq'59-^$JB4nIYN^Ec\2gUSG@Cf!&sbJ
%>'A*;F;&Hl!Hs00e8Oo4lU78gj8'YuET0DUQpR3l1$r2jTU_a!r7ngPh=F%r*s]`+"YN6>8AD@l$2`KAXD[c9do^`?a^)Ho8)<WK
%UpHfeo^c/j`j=&2ohe&j3u&M?*Zdbp*^:U]*7Qf'VfnYkH<gQrSI<VRG0kfQj8?NAL_/jtM;=IR;,(`tnUFR4/Zk=M7s]5BrJ-mK
%g4h5`pVS%pT5K9I?k7)?=]8RlAO36DPR<oZpV,N0@NR%?ie^K#Spg?KmBpClI#l+WYN@qKkhulDXh)$'9cH<8i%<&IBYC\GPc^5Y
%c)K$Z>oQOqc]k#a=O6DufR5V(O2j"B`!u6j01Q)7`r1WKdn<aO\l&Yq:913&88^F%i`GXb[#g1o3H4NEOBkqBA3^teDBI-`p?Y)2
%q$3A^\HNRL^jKmM`5mIJZ8HA7'FbW_;sbH;.)D,mZkdjL;XK0YE\(MKdtgChY']5[P`*HfZTR(1#WcMLU-j?B?YXjf+Mjq`.TXj3
%,N\tHcjV"FRc0Nk8]:8IU(&J_6Le#/.X"`=Qkm2!:ZtX)&YU%X"r?1<%Xj:&QLiKT-(,B,*.(ZC@^OV!QS/f_$SoUGA<GUUQ(4M&
%]N1P%'#Fq&4AJDH*k:$j^id0`]7nmcku`T+Y2pk;32cq'UKiFYWBh#C6Q[]$)qFR(aWR`1l5QBaWpOd#l_r5L/'q!'L"A\peOlW6
%_aH#?.=sH3-mmQ/X/>6S3:CW9d4N2P&9kN<SC(<@G.J$hDiL]1'2Z"#;*$%JJIAtQS!`p$N24HfkM(ZR69_&Yo`dqg3$b2d/p5L1
%?0nZ2U4_g76Z`LC&L$akO$i"c+'Y<!%7t/NkG1->VXmiQKf-V8@ubr<-p=B+TF/b)Vbs\^RJ[!XQY'ds@9aS\#,re<FFa`Ng<)]S
%,W_a-GXb.@\u/3PF:bOLeK7!Umh29e28"0F3GC>qi,4d%<q@$J6Wo1H/[ib,@6"*[;&ae^2GR-(N]g+8RBR6@THp8\baRroiehH)
%.lnI]m]N!]3Hs$/9.Vh[70_`TpHZNBIV=H.,q;\?IG_o\o@OX:p<W2Ni%G_B-nI0mKSe\jdu"9q"@D1[Y*F3O<S:J*2JGpSCrHF=
%.T0=GdF8Wm\RMtr\$M)N&;4#N!rPkmi2$_pb[U_gK\98B,Ts[b8SID!".SH'BW>G0d\2u@!T9?ie<LqW$is&,U7K6L&Vs67-ed3r
%RRa3;jUcrJjM+5=VVkVJH@\X]pK"`s#rO9MY@cAu(h/oD!a'7#&lFNup(k1q$<]JcSXt@#PNj@FC@J*Em+$!Z]pi-5I%CsT!?4l4
%bPcCdpP_I<>mSi+ZjdPZ"6;5o&I50&JOs<-ft=L(0dHJV=N%uWpmh%=:MZ^U2ulqH,u>7/8!)Y/I/m`?j4SDWa3oX(V5n0s;p=o6
%8MaToH!+R\AT2W(HUd%H(O&Ui=c1EZC=2W?kVKWRWl/Ke)h1V!7>.rJG+=:Cb!_5(WSL@251^-A5<TobqjQop8%W3B%W#rWd)TcN
%g(`:9Jf4Wl*b3>c1Je^nl["Ar?20qk$&Gr0`Im=8&D=5=:U0E9;W'l[\&H-".:p:nL_a9O9.De6+&E<\?4(0)VTLP0M>MmWT8OT(
%[>cqn!)0;:r6!_,d*V>q*3q+nZ'1pBipU]5"YGX5opd9L;3?<QQ\^NN2$u6QDRcE3p]nqs.`H7#=`lqV`Lu^sD!<0Eg8Q*.78PE5
%+cfb'.a+$lgCFi+$5&G0_au_UAf;6LUrmau2p3+9(0&f"UpK!sQEXMg1L[j#<s'pS.uh=-3ud-fL7U:/6S*b@OMtlbMm6!g#gg(3
%b76*DG$q(D>UZkoc$f(AF;#$B21"Xj3^\Ub]!,\^B[l+g^U,)kFq<6Q:]k1P]>B5m^>'!>%RcMjAlldtDD[$9GKs7[!*!TLjjfr%
%!L\p@#((6UJHCKl1_SP:dS>GA(,/1!nu>ai$8j6orL?f5e=Af'RO)m'6;_a;Vo5A<>Mf'UG-6%m1Y>cb!"P>9BQA17eAF0'pk#d(
%Z6ghh%>;C^n.LA[c/%YrHJ!qV;)BnBPQ\s#*[h\B>W=A=X[dfVj,pWZ03;>Td-E:%eEiQ!LD@Q!kG;*6mb@/KfbFlP1ZkHGQKkLi
%p)mb<<RVMTH&fKa3)n3,,ri',O1sPRhCtWp/O]t,aLMB'!t)pof,96d`RF$97dSu.jQlJZ`BiXHBRnK`9GSm4Yd;4n'5A(qIr^UH
%)0T7]Qt7Ms:,P[2lYK]s_gnV0,7i=VKh`Il?k:jG80.t1pb=E.j*/9I4<E]_2hZ\gX"+29Q2h9N&(gHNEGS;<,u?9<L*u>4p[@mO
%gIX'#/iYQr9i%,'^!qVrDhm'jT-#19]Q)!CGJ)msUu$j0&(5b,p.85O<B@uO>)oKUm"6`TWdC5@M@r$kfcObBk`0$oO4G%uT2T"I
%g^.I!q481.QqkHpQ'0!un9c4VXGs!Xl?Dq1Z1u5k$"fO-QOibr1T+oiKHj'fDc-^o&J=DD3GDhVg]]R8kjgcf*jV=RCc_@M!&pq5
%H'L=u@h&5E)M.BXoZ2T_@Rd$_L]du6ke7@![LN(l&%7J1r@J[YJs[iJ52Yk5,E:OGl%BZ,A-^<7,#i6PkKnSYA+)r&k&e5!_uSX5
%h;jU3PEr/8U]Vohcq,"=^"lBk.-p7?`.2WjbfA518hT\u55(G^pK4m/q-8T[+/PU&V/qL_iuTe#MK+&G-UBou\cfj?41(UDPfdKs
%d32KZ01Ff?S*+3a(Oo3HEr,Z&+VpFjBi7Ba^ie1s&;p'_m?ZVE?9UoIR/S8<WLOopn<+*59g@V3bVId@jUmbLQOfo20kMm3]V)l"
%KIeSce6PK/XI.nHTnK!Yk(--K6Ri<Fr=GZ7hrg11kDW$r%UR&+Em&Rm$`1L?1WIPCrAI?mLPBf-D3Tl%P$AL<TPJ3QYdQ,3fZULV
%*pk/o]XK1TO)8/n[Ml<FC>FK.IB8_^KS=*hN\M(*L+J14n`g!hEMo[EF60IBBOoVhI9X$6ZrH0]<HZ.c?Vq9o_?aHc7&=&KeEFaA
%``YN)X0*#=bWb`dn.;Ia!7MN1ZB$)aZQIGb<9b7KQ>i7:-=)cL#Y@,^[Mtla<iTk)OhR^?,a0O&(uRr+"$2$*NR1qSMcNI%(UuQV
%C_j!65dcA.>n7njDYMuDFOiWOE?7]ON/`kYkD<i5-7![ELg6PMrNsHbOr5AQ8R^TlV&\F`?-j(3't>4#1E,5BfU%1VRq'L:;,[A%
%d)jfc$gq4TS7AsSH<=p[G/EZ#E.kL90dH?:feD.&3uh4D9Y\.eL5n)a6"IEH&EEpoe/Q!@V)$<3M?.u0W>-'>KXCT<6k/2iO.C!>
%^#TGb&g&n;U:9YU&cQ_h$7g6c[VW3je.j-,809E;LWhUVVbnoAgaAd]Mc$P"/V`!c#)PuB"d`06#u-OO4KPHi)f9[pr8H?sfWI[l
%+Lf9>U\#meB2mYq]tMmc<+l;GEJ6Q@]Y^hQ5?Zd+_W8,0.M#hD=As#N`pQn;j!E7^mr[q)CjTosnBd<[+Z?"U'sgA#.hY%FCY<#4
%Ka)7K`Q)`b-!L#@K1B.Eg>!T75uKTfp$oV+\X7Xp>a9t(^JRE"8Xfu4eudV`TT;`R_?$_";h<nc-3o5!h1E;aD%>O;>g6sLC9Ihn
%mHoOZ#me]qg;::/R[s`/:@k;@*X69r;t`#jf`eX#12]EiU+7L1.&sq,r;kEbc:D/[/qg$?3s[=G5$`iQ4E6f!_F\^>]2PmgU_8rN
%#"Y<3"!&dN/8<kd&g3L"2b$5cV"":jV%_7:l^_`Y[*t;(C_"a&i+00A6U[BUK<@dd-\07NHckBB(5W,jRkcKZm7:uk;gf629P@!c
%WpYF.<e%N5;TXKS7(0E6@daT`6TQ:*9q.Hu5,jj055K=-8Uum.Y'UTgD%aMKL-a<:4hl_'%=gs3g-Zr_W'EnQ--a/no3<,Gkpm\R
%RmDiL',lRGqn@^66^.&=FCQpR]%\I+#RW$n8&/Wn4iEG0JZp6)Y@+3I9AbV)NhWCm1[NDprdl)KUk]0<gXOnn%7ALgkpqK52+JlZ
%WsYG`Ns#N[_\48HqP'i1L*U;.EK=`(ga1+-a.^F9iXrDc!.4V.LVdj35J)A`g.6A;XIO_O#Gs:RmXFY\r]6sZ5P3=e`3k!aIQQh=
%K(SK!]GP&1M-<5@J#[jGSX&=Yj(Yd#:51h2%4Cc__/NI/rreu7r:U7E"8U1h$kWU2l\,)`mp^nL'X20PBU`8Y\rVu[#V%8.qN;2?
%3!K%gPV6JfP8=iN4](^MIQ4-h_j+9:H7Lo5'K"33P]RLKpOEVpA-=kRJRD95QHl(,=%gI^`O(WR92,F?4`d'r`t\ClL$0>N#"X.a
%'L#QJ@ZH#>hq;fV_h=3Y66;&'ZqcKJX;H205O665#T[?]ViH\H(pRN*aJbsfCrDah,K--d-a7?aNPT?E^9C"cdA1XVS+Se-KV:+R
%clrZsPQ:BD:_JqRZ3ZhEKUi1qNu8c]/QO7oX&_?pe]bg@g_t]$I%\A\_4C(`TfsO,@$o!f@rgER7Qp.pp/.#nB_gkt#%QDM==PjW
%XM_R&.1a8\fkI:d,5q;*6K/,erNfKF>7&6K@?K@Kia*3CYWQ]URFiY2/WtF^h2RV6j&\^J6%,b6,@ko]N@D<hVY0&j#qK%M(:\oc
%H^_L3N7On)m7[4!"CgT%kpj5i9Lr'Gb04bV@G&2KZSfYj$eYuUC`_=>T;LG?dEYWGU4<]Fh2I"$):XXG(6c5o-KtUk%):/olrY!2
%*e^&ZIS\l16@FZ5e?G'H?!D@h2);]Y)F+'gobk[bIn`D'!,`bkQmJ"a26$#GRLP5&SuklTY/]9a&rPclUA\*E\Pt)[@P"JEL8<C<
%(l4'Yeqg#uJcaWh(KcE+IY-ZL8PsT/USe>Z+F=5!OL)a@)DK1CN#9ut.r815c.7Ur8(CUZ9cjX\Z_G,d&+(hHqTu32h?cO*8;E=;
%X)E#?UagiYZh;.hQoeF6d23p8QNodp3MJtSTV:>18fja\?p&k&Mls4]I0cN+>t4EtRkD9**Tq/HSX_\eYT.!L;"2f&X[E"9Frs9?
%jAiI[hqtb8[L&qC%,"Bl0B&p9X0<BV(B;O'aDhHDi;OlBR!kR7IHY$&(bp3IOegYQ).&IphDS8C%:<l:`932_XsasZP6G;;g)bRD
%gLae@0A3OF-a$4#&mBHDN/6"72+]7s7o&gob7ko]YfMu&$AS^57/Z7^guL'd:anEs]%>u<NY85$&6K9>eP+U2(,MiNOC>B0nQ%r2
%a/7cX0^1.QQ*<NLYgYM<e[E_$\^!juh^'KU/jC^3r1cb"D<T:p[;R4pj^X9`,UV>iD-PI`M.TdF6.HW6o6rdkU9_)jG>b/dWj4-t
%h2m>Z3p*K@fM=rJ=9F0-Fjr5i?T0NA]%^seH`TfTJ#^=H5u\[YCfg;OYr.K]M.-\Yj-F[o<*`d=a>&GN_P\p(U;T2P&/\PYcVb<n
%"@LQgZUfc!es\lf`1\rr7Y<XMB'#Dd96F0h8(<\](1][XgLY$VGfWpMa+bIHS$"^pjN]4H;b<qlL@MY7-Xc-*gN?DN2@l!085Q!.
%ePW09X_;GgA`uKjE@Pd;PZ]%n\4Es*kL_N*Z$qK$[(+f8BTi\%U]&jt1"6or+B([YYQ+:5Dp"Dr^n8.$bZWF(qt_0nWW%tT)(knW
%&R/rbM&l<6o3"t4ftX/W,$C_rgJ;4iZ_lAHj]_M,3>:Cq8BE+WJS?XQn'2X-RLu%k&Na8Ln*5>"]?Q]g0Gu(q7K@$54IZus/1b=L
%8Y@8BO.u%7#C!$_8*[39CN1E?\tFUbLtWUbe(j$1m#)TRR.smg:$j!*aU$T##!mX$G]',"6D0Vfbu6#=%^jOW8V@?H4&N*Ggug?B
%L%X?ZhPF.T(SB2J$PWXkX[X$U08mn_($Jt:6@VYUjXB^fr3>S\KApAl8[(oS\s*pH:CWN>lg$<&@XFHt\O!!r3B0[DhKZ953Pq'q
%EblSTjH/uM:uoRAQ0]f`e#>JAU@'F<m6htW5IAT^(065/Jo;s=)=.U!SKR4ojh;M?!t.c*"]s%U,PFI`<JE,0>.S3?5h<K09#p1;
%ZUIu=XFTO\!D]9\jG1+ME8an<Sl1UYK+\R,d^))(@N<3dgS^3,T#5@@cish#2ttZFn1ofu4j:.6Kkum#aD;RNQQmTeP+Y!b1KL"#
%g"F5Mm@L$L"[WA1KiC4\l!ereS+G%bju'ombE2H5NF>W_nssJdP?)$LQe"g#R]dL6;_lO5/<2@a(Ki,gV?URK4Vl>iZa3FVS^/EQ
%MPhUQ![)WQ-4gg!P.e>2XJ;,A&V)r'ktn'LrJiLccVBOCXjeqVL_9<i@]PX[Hj5gC<H[Q;K`&I_]?\s92oo6C!U/H4P8aq$jJkZf
%-NL72a(g_6QHk:c^uHuoLoJUM@mH'Z84nn5r>\f_+Aoon"UC&N2&WW0#<7`R<"@JE'\`)<hhFjN!DkcPTgA3r@n/K:ju)>uPloh/
%#e]5EF__2,D/ZmC8F8cMft;h1:r/."eO2GMgTCcqf7Ss,+9e_"JO\/)[r'RsKW<rrGji;,Bk8aI/\>o=pKbXhRH(Ai(6/oq3=&*=
%0J9m&*ae!L0Cl%`"a.e2@O@VY8oW0lffj-.gpmJ<-iR)-8&u2YO5e)Ji#-d;Sd(q:P24hKoUYBnXTf5!.:3B2=?<ZsLNdNCdC6Wu
%/R]s:B;%u-[B3h^UA[c_lfZ$,IaW$A@WR7F(8#p_S+'l_E6;APib#7P?e;P!m.L[AMP"0Bn-gnlL#3am]'We>;!]j6)Z%\uj1,E1
%`4i=(c0k1)774,jb")P%^IP2N5bA9)4Te=.[nuTG!T`,qXsP.V<(,N)*PEnFlK/CN6`on&1m))fA9h@5+I'I3O$e3j=>ac27m=KF
%XEtdW1:$[?P7bR%_AT)6b!hQD!'Tsr<XTGD'J)uZ5-psM-),,b;_/q5AdF+158F]%[6VO2O?CiW@Z;YQ2u,55N[ttG2D"nP%8hf:
%n]<^R6_\5*.#?b$^W8%_1&otq51IqfT%0;*>m@/78_dj#lU#)WAm+dZ0.n>^"VF."F6MDYM;)n9+R-c>V#D5$i'kE6DM02J-3rA5
%d7Qh9gqEH=(]b7P5d5T/QkWrmGt''`YcTYNdZHjH1Q"p66dh"Ik$mrN>I*1\@do.9hP+@P%@6eWni"s^bW&YO"per_a#epH=FZhd
%[[A-Aaj<r[jdcT9-,lYGC:Yh0S46d*R&HU\o.$dHbof8Kfn6!oc(_$!0=6T/L/0nN;q(@9cj+J$D1#7n$qJAWFne?X"6NJp8)Vl%
%E!)4jWL.%8A-eNS?SK3AB9r)["%+Ug%4o)eCAL6H6]+A.L1*6@:99\kRns@'4YkRT=YnL`Lc'#@=BJt>.Q;)E84!;!dhfR]K&gE[
%0E-m`XL/af`omQfPG*0tkJCSV-b7[B`\&.d7[l+G/k_WVA<eMh0uA,XWaoFc&X(F)*GZ5F]G'$,H65q<_F=o1<?HK6BFH%06S%"H
%-8/c`R/ZX?ePIdR+c*Kf/KnY58^*':RE[5gH2Tmd$un:HMR^E>aYLm)%[%pldJSqbQ^jD&4JGJY6=jI2.%:D'XdRlVb!q99W\r)e
%ko6r=3b/M!C_/hlRZ>+7?c6/?!\JOd-6S0l#Wdk6\_q2td'rl]j?&p':Y=Pf'aqIAYiVm(/2/CbFdKB`NF,>mfe@F0EcC(^ZNtgm
%Lmm@0SklD&U\3Sa6Quq`(MMS$<="D:msIG#ZtcDnCkWu`qPpKd5:T^HTGdeCp0.M*5fh*Qo?-V=(K=HeP_a@d%DI?Pdl7Y+!=0]4
%8Apqf7_PC$Qt,]eeFGhtpr>c(&#'8mOM$GpMC5.\7Nr23c!FmmV@^`U[-_DP5u*.t&*P>Y5J.(s$-bNQaTT,=HQa(mm6:V2cZ?2C
%it5!1JC(ST^0c3:BrmW0BrL*c.F*NYF/O!f@7,LCO)TS?^+g3M8raJ5GuO/5T\@gU6RH$?o'AbK'KaBWiT:BA@@r5Gc-)33-1p>g
%*/8-@+@7HAX3R->a!-5&%P8cUXG_TT&poP'`i:fsb[=+LkSL0`h$!aEBZ_K12'G55??78]D61<4Vg+To\7`kL?N2l4>fW%kKEsG%
%39c`*%-Ka#o[<*tU:#HggPne6qX_SnZf+iJD*>qApqV,&k!@B<66&ZOiuCCbo>fXpl,25(5KDGY9tQ^&1K7hQj>]K3'&48fZ>r1!
%UrTVP1Luq.c8\PX':3_Ia\"=qE2JVGCn#6/h`ecl>7H#l6M-'3c@hmZKZu+]C"Ld>pT(#(CkqfgBJ';I8T>/E!uerTW[C(Cp(m##
%`!WFI\BQhnpEQeLUn3s5d@Qh*QX\fc-TJoE:+SrSjYofX`,`d;%iTsM<f/VrQiY!8l!mDnkY'?p8(*N)UV<Cnk_(#+WQRnn=r\#I
%qS@cHXc*I"/-m8UdMZo:V&:BG%^H?JM^"cHOC5m%==4&0gdRZXO!!rmO^"lL&NU>[*1orOQ0=cBjU/mglu582Q/ooYe81sYON#A)
%T)tJb]\o&W3>luqVa5F.8?5pH>om\Oj5.:%)C=dt\\^L/Rk0-^.g<8X$alI7r8k@N6J^reP2)>SloiU6N_GCAc#p;?4Gh3OIYTp3
%'"2K=-@]+pho,3Hfi]JEodl@?JN5Mh^tdD;-5,PKEe#L!;BL5`@:04+7PV8^@.7:cP5R8N+6^Z<M9O!qOrD)]CJ.VC@Se@m#A4tb
%@;T>:e\OEFocXE17'";uA8KGlA'h[5rb-05iVHB/n:2F:SfU5,?3<$Umb]AlB0u7e1#^c(E&e:aAiQo_*`-V0SHf'.OVW+nkLbcc
%DCt(oe">rGFl=I:?Do+(iqQ?X:;iHQ'dtXMod4RdIGHiO/@mq>!J`g6\G;\.fsc)I6>?uTA8t&.f&EYsHoF296*Ek+VUl]aUKV:"
%a6\s_3R@#i?dF\u&O9/LGs0&>D@sdE-`?A^(/:iC166^)`&$PYM';-8YFS==U<Tm-/fD#q,;tNDBXtX$1Q?a1J$^H:]"naGe[ClD
%\=HjkTgkg[2acN-^b-TMqt\L-KGAI;>X'CbV8tUEb:QI5s7@@N1X>k@hb4uU5[^bM7dEU'^u<U6(s50>8[@aAdCKF9W+F`G%el5'
%K'^rQ<X@BVCT^WpUmq7$O=1dIlZBa36tW_;-'p@&ZO<8L'."``F_Q20ik=B-fKmpDh%+VLl1%+^moJ&2iKQnHm"un5Mfn_).E%jJ
%2Q[/\8:$u>5h%d@kEQ6ESqJpJkP$seQ><*i=$h.QGaIVTbOu+#$6'#!m"[RFDoNDE!t<>GJHE8O<tQ?):7Teg;hiN%iRMUJ,K1&>
%r#B.lMDpPh%&#;%1_^VY$>7C_r^HF7n:6T:?%`Denpp(*NePj85.8H&LF=k.N>cUh65\W:brAS*aP3g45<tG93W(c#ou<S[DbYPn
%8=sLc<Na*\]JbO2%s_mU.KG7cHdi?51,4TEI.%E#^]b"_5/,Yh(eQH]k:Q<)rM3]nTl:$50m]d)mgKEu[X%m:P59^C=]^`OP]Z^t
%4M);9k"&r%YmlTQ)krYkAITIi4!8C'3l\$*&d5!lb"i\=B.UuoC24W>RMGd1dl%\sR*UV(3[;)!c8e.qFKSQLj'g#3BCT+p!'g:H
%B(,97><3YJ"T)ndKP9?D"pmNISsiXjC0le<N2ZeSk%C3K@_;7m(N\`E#0in:Hqn[dodF!+6*sq&nKj6Z]\",iN05,%ZJ'Gp%f:Gg
%W/ct:i1jM68?\Y)7ib[J%hE6a9&&@b`[JSV&A5ca&pT6U04)p.='t>r774<M8j7nme=;@,ND)pp4B<d;5tFDI*JH-=1dSMCC5`E=
%DG`U&-LcG\!>Nq-\2%!?Kd!K[+1YI^Zp7$tD*(.P>Wbd6[BK4)Eg+8#\IfV"e4o_B]6Kd.n9$Ys#5_5S9-E<iLb-TpZ'5FuV\=EG
%T?+[,DA9[dT=51Tq?`c=W`ejc8@PCn^l9^8e+cVhOlCJP3O_Lce@R_o_K4s6.LRCmm?+F`:MGT'.Kp6a/iY+SYI:q4I[@7e'tO0.
%53eg]HKC@2:qUI&O=N(;OP$[fpQnagfKF-AAEn-`[[Z9,O77TC*O]'.Oa<J/@_7V$ojMP4T!mNWL=:2S5qQhKl$$#GEr1V8CD/SM
%'JEa4aljXl.TY#Q"r="+.-6P:L4M<Qe3^7gl?ESgin'8g'[>aA7lE3D5%H\B\blpDfc]A+Q7fG`jjQANgEY&5[*$ha;Puk,oI9qF
%Ls&c&f.[oO<\/R=XM4JUaiq<)oYjo6Yp0r9OgGX)D@7EVC[<G0-p1;@DP!`E&6nL%D55A_cT.M\@Dg1j%ocqPLE4Gm:PQe@TQ&ER
%Ph/86UXGPGF"1H,/1F(t#"C^IXrb,,fUjnRDa?0f81XMLiaO#ERVc-;5!F-mQh#IW693*N+8TSR#V#jKI;cjOAVm:YklYGTdO><m
%%<"=gVd"ObfTA!Wn>h2cF'GXSPbO"c+i.&K'd2J3mle#s:"&&ABW9-((KenP>NjsBofQTQ;6<<!9f[q2qLBt?&EO0\b$4b_OX:\c
%#.ge2B0t#X@eS2_?05oqpM!#I^f]r;Nrj\:btP^fi[.(N-KEM.8t#qO&J%M*U<6>hd'jq.=o!6"&E4%)74EQ`n1b5[)e+O-Kq)+>
%44t"&3,4D$-K`&#HK*81iVWBEgpp>.S9h?lZWu:3p%[UFQbS^M1;8<LDt*6]]LQ@2/pC?K4l2pm*`TS[8+M5Ffkoi],F_OOCHmt,
%Ao2m9:t`r,eN:)g*#!fc:fTID\PE[=nDg3l`Jp-QKf0p-7L7VN;m"#/i$]C()73^;fR9\W@@5&2<T:NsJF/:+?q46$0h4<DEFnc@
%RBfZKb>u"l+]].X^fi`7Rq/3G7<45Pk*%i,k8iD"+>cE4O6^86.-gq0jY<PV6tgltqN5mY/g?@EEN"9MOZmL"c\88UAmY=W.+)_%
%&4E)1J>diUSpF!mei7Nea"b:"Y2W=+9`h*Y'>;R2K4?Ip=P^]T/NSlmStl)+$Th7NF]*C2<u`<B>c;/tK++i](8'pE<ml\:3[H;e
%dU3^)=sf"g08s&]H?0jjnK$,X18)_@ViGn*&YfN([P&Y:>8@\X53XcF^#M+0,b+>:4`.U*6/<.+1%l#,p0TTbQnYQBKr*Rff6jMA
%F>#("c!rnD/.q%_P5>C5?^LbRCWe^Y'_0/?1/\k@MHgFt/Bt0Qj9t]sH`:tEH\gJ8#Zm(K4b$o8DE88=\43DR[_jbsVI1\#<PG`,
%>+8T"]7.)(FP\OK(5Ba:.7I29KY!8>`Sq:ielEMFQHKeb4W_%u&q>_]=JY3(rLop`?1$gGGqq&CZfB!#-'me5ERJ;AH8ocL7e+MC
%XYN]DS)LQSJsJ,,L10'0X("QZE[NakgpKTKGRmr`"-o)>$lqf&e*LLHT>P+r.+Z[Z\!>tbkm&:S#DnXqJd?Y:,MHioZtsf`>)DQq
%:r_gV2g6,(gQ:;[?I:OmJXoYmKE7\A01]H51aNr)r[9&u3%Wg@6IlITTFaqUI_f/VWYd:<%FLTf5=,[8.`<VI.-HbRb=>CRQj?A/
%o>l4j*--er;njd11ke#:M$PD?HKl#h5)\<d*G&ri.JtFc9Lf&WlpX>P:n4<`7m4P)qE+LHLFDLP#gA*\+l&jBcVOrFYAKIg(<spi
%m+V_Cr8FnkRWJ^1+<5)K-(Kug9iS%t_5O'-.[A!NfK%?O&3VgZJVS-"gNYtXPF(,9SPi8XTi,mmA"r!g+/(L/W[(q?&$\Fu.d6@U
%X6129W5QhF^R"L/]sH3'S=Vr07-V;6Bq$81eD+MC#uW=[(>;;eb_.eTU\[HlfN$/oom43;598kPh@p==fcI@`Q3+$o!QDJ2Lm[GZ
%jKM./d*<"?6,K(F2Uc_@\pC;5P*ZP2LN,X&lrp=pZ@'NHU[1Je(.d`thi?]m`8+4&n'F9HL./*LTor$%"nIH/ei3s1#tQUZG&;[+
%9ssBG&YD[Ps5Ga`&X`3/;R+pqIP;qiRi5l@NoZ(*81f`9>(J@k-r5(4?`eGL0Neb'c8'L,pJ]kcN3+Pl?7ANAGN($okeFQB-9Y8B
%/;j'QEFe2)LZf>`[YK/iAhs4Vr:TCtPQ$ED7hj,/m.AiU'&mWRb(f1i&]VSaOMbF^KWrTD$V:*`!7>`,6mcu<^qsr>o/oAIS"]X$
%Z$A_po5@!%&<\1[8]K<DV=N#h=iRP9OV]A\/+TDH@W>;S*7cU6YZY((fb]A73@Qp2LXpcmK<RGmhUer+$H=%0N[T%Y`s_u7KXQiK
%@`H&c$=5bKhU*'4G.N?e29lTq%!X_SV.!jl6_+nVUVs1*5I;H2X]c?:@[C>tc!&.pS>#s0-)D45em'tkD73,g`NLuhHu'4b'rM<@
%_!O_^;&uJM_`i(9[JQj.,/;T:pJ)d)PU]q];EO74aJ`LCg?"K^K*P#=AuW%mcqV2867++-hlAE-gdh(pU.P8Bpe>(/aD7(02S>Hs
%+jt"OW'sp1_cKkn7GE(B)06^<(/uc>']e9Z4,pAh'Vq)8%$W?-)TlGQdQuraBFjXcC2;WPn"380^-'^qHH6k5HUu%G)?V9eGRVJ7
%Djm>ZL&or9hnLOn2ljnEWV*HP*nS':a'"HVRF38Wb2RE<d6+Dlc4I>m;kHR'TIZ!:LHk4@dM?IX<WuGl%:<gDBK\s*oTc<%"QW9W
%<'4+A94#Dm^HVS4UqGlV02:MsbXikBHFhtP]%OsGh+!PZmEDJ3Rg<_oV^_;_,U"dca9rVpK.R"VC+ih3je6e_hXJqs$PmqaZ7i)"
%H5,U(6.eu`Hl%#lPh#Db8j\\YT[aXSUL:44I1TG$PB8TbP<dNY\';4N@27JR42W8^b6cP\.FPQrG_nmX%9(<<%?)3CU,tM#l_>TS
%ds9u@f>/tUNY#a<;369EqcdS0Gl9^nHHuSKn.a#Rm)nP7@QZmB.WKI7CReCcmikPONi8*&RW%61jrT=rHe-o-)IbnZ8QJLY:NB-W
%Cfj)j+Sp:dF-/2iPhF=9,*XE64_tD'5GW:2>78M@0pt9ZWp0f]U8I<gHb@RNj3rFd's<s$<DkOGmEWgDjNldQ>2pLT&Ib?SBq]9A
%\<JB"=.P\-OL",@#fQ\O[]=X(PXmP=A^0V2hKE7%4-\]nd,YIp#?cHteB_>c.J3X?\q3a4(^RG'?bS=V@t:cPq\*JPCOiTR*eS2r
%!?&P['kb"o`/K`Hf"0h\TEKeF<pT%fMhrEHIcgP4"a\qSp\OA+:HcJ+jL7L)&fJdYjh9E.g(28M./(@H)#T]@EU3>UmCkC0>CV"+
%IL>ZNS#Ha#oi31sd[HgEPIq9\on!0N3c^Ml#.LO8WM4HN^fdqABTgTmVJXEB$Y0i22qB>s6.B5&e](/h9o#[q`/+HG>u!n'%S<H$
%GZC]-atKHVC*inJKQDb7'(3)Vl3N\G:8@2ggu(JSAu!HI"eF=i1O2R&-Yu2_b\!!cp^Nq_ZtsA"@.PFCLO?%*!%J;9]]*?UE%7@2
%hbL9Y$>bDB.lN,'(YF=5H'0'f8\R!!,5o^t>!8DVN=a_c.u^i%9eJuBcq#.^UI$V#n0PP#BiDN/%?+c]ZM@bjR3B7"Q3M0lFLO%q
%E_"MgR1@Gs]O>HG7`c/O=d^"Q9(F_dDnittC`;ir8SJn=[AW5Q*Sh_?hN&0iD?7,UqV\1CP$lptFHu48M2*j@?I-aVakc:Lmb@46
%Q>)b$qb7"SP]W*j6U$[4CsRf&ZI^1(f=]^d3Lq?g-N.fOVskVkU-hM1d%X7TmHoWlhh2@#jR"%g3>ip]WO9_5,KO-B65>n)LH-Oq
%qF*JB&(kB+7;m6ae8-Hr?%4a%@tB_%E_CH.I8!cEgm`$B4/Mda82Gt_QFqs39*@PpPSJsKc21qEd]Y0@>[+S%.JX=s,>&&`UE!i5
%3`34c>nsTN!MsAT5WkQR6\7;"+<>!,DlF-a?F72U1AN67dQfHU5H(?fB7![TT`4LPG,cS1RdYE7`4kkYS`u4W^[6cg@q,62HF4Kl
%s!S3K-'*1p&'Y3:`Y%d$3_@l)o^d-A%V6Z%L4_@XhL=4lPJh<T;o;c4?#49\fU(%8hNJifZOI,3#IToA8_5N^gpKr@"fp!9CWa0F
%A]$PBS+`<d?OtZ5:93qZZcS7Jdj:=m"O&lIf,q>1$a]OIDOXbaR/II\NP475Aatt+ji1=jI;iZ-3JW-8jqB4a\#`^8VmgpN.<R?8
%-puG-h'/qYa$O'nIM4AKf5P.)<t8OlMh6&OSn:N6-iDDtW\0Alam9_\4+F'V45ktD=s$%BQr+,t`21*!+[sY\h.!h&q='jF.XepW
%=&Z#&O2'O?o?YPKnE'sThb;7F5mqio4k@VmKp%kDYZE?OEfd%-58sE2U]%B]a^uYtJ>_7RTt!T[Y&G2KadWK4)BP\m$TCD8"Jhj9
%(La4/_2oCnjf$[3KmihbS93Is#8Q>$j%EHX%#s@3Ml8X*nJBl$eO3kBQ#Udp#Rrubr39G-nW[Fs%#UG3DeNd>cuobrWu?kY\jJl8
%r\[G,lQi<G#Y!!*Dc11;BZE"=mYUJu:r(1M`O19G:-9^q$]$-bJt]:0;'<cM<^i(-90Lr@o/(=AGS6I>RM\?--sq!LHX[hX9oaad
%r",ciH'fsi4:.n\pch&5,,+(okN$iq/MOUGo=VM%,%sP0?@UZ:iE_g$E9*nji&EH(:e9'f58qG)1t+5]lM)SIZSo&eBU4gYCKBDJ
%qM*<52FiSsYRQNrIU/->SFthpXHb-a>-m_SaJR*L[Q@N:@!Q<.NTZ>=O:Uta*9'h[.9n0tf?gq"I+pSAO-b#8nCuIJ%Y3Zf[d7nt
%7ah8V9CGSSq%:3X<fZ$3PF%=XE:XZ/;Mf_B^d*kH;M!&qWB9Mt#Z3$51gL`T*W$*Ee/rIL=f#9pG(jNrG&oJ:3%Zu,MfgYO^WX`j
%FHYn;cB)G0+T-B@L<'E_6YlT[G\7Z[WQm1SY:Y!QW0F#ZcD+Sr66dt-1aRSrj]SDf^L0IslQ42o&@ZIa__$@Oo&Qs3Dh/.fHFO>2
%93ufR_/s)tfK=t46LEOX]UdDPf&=RB!\oJ,4*YZ_P(4NMqSt)%$a=@&/DalG+u-?$$d%$k/MP6bD>.46=Q[PAXN*\`Ct8osh*1oR
%Q*`R4I0AR7h($?b;_*V>N5^F;IXl<M'h_\FDR\SP*o9-:@*)&)Zmq3>.B?e3\3c%PqN7]J.3rkC`Hhq)ikA9emUAjBL>nE\i&Tk$
%T2@`8=1ZG!Oc?ohrl^AC_\a2bRLMHdK7O7F)%g:'+/WPm^VrR11Trg]9S"_0T+dW`l9[\<ENKokX`:;qA$M#bdZ-4_R;*XRY94@S
%Z0.1:1_tOYqPo8tB.o6[A8SE#MBM"K,Wjjb!0.dF>iAfTWd.Xkora<R%jbbWa.$JWjRrt&p'JQu4jKBQ03(Q1`2A65gF5/d:9*)P
%,M21Y@d$qcP-Bgu,';!`:%QY<KfcdW0.JO)+B@d*8,(H:0qm1&.r55!_n+Q_XsA+&i"0FW8ZE(R:Ze3Z>HD%0+sBWLM8uqFV9^jg
%bI^gjQLq]fS'#It6dcNg"q^@B07jh4h*3.c;6-bg!m#a2q5b>f*[*HV^9B!<i+=9K%Gi=-\L$A)C\m:@o7[W63W;+0#&?`B/uX]P
%o<_b?rO&!@%.ciP2_TCog8ck"fK#,V8tq"-9c2\#5DjW+IK_3LX;RX+UUD9c9j;k/F9?iR!b!mD;5qZH=m-@Qf]R_!\PpZNic@6(
%E92nr7&/;&%+h>d-Rd)BW?RB4eM"4>#Cj741dh7`+CgG]r\qb]:<90)B[MG=9skR5e#.I[,a)0M3<f^Q%"(;M5Jui\-@Pc&r"c>q
%i'ro%Z-;%`)tZH9/?0p)2&6KCl&`#cfm>\'US;tUX?pkcp*Pnh&]r(QV$t>G$r`=><l7(\8?QgtRsYT]DA[p_P'+rj23@c5RF]dc
%>W[SK%-iIB\p.BY)N`n\"`@Wb[`a7gaOjgK%jM81feR$(d.75Gh_LBMLV#:;Y:OIa;6$-C6oY=-h`e_TJ>KC>/3kVL#o)L3ZROIH
%$'@WDA/?8t`="taeP/q0-,IW*/d=8iE8=M;i9YMq1Sj[amgq,,0-#>6a<$!r38/\7iJ/!6TfK@bGR/GU+DR:ZnlS"'f\G?AR#6Q!
%;m$0Td1DXF7oBISf/HP!Blg?68Tl=UK/9<G\9!lc$ghM*WrQK>i7&[*EdEq"qpn.e'39.$g(Ra@Sce&t\s(dG<]iNYCJ\,o6,jIc
%n.XHKTHj(kA+G=m%m@9pW.E/[]2qX/q-i'p9A/4]-=a>>$R&-B_aN;6;PaCT<kL<jRmJo$@KmQ.>/_H*f`^ZWZ*@8%Es?E>hU#/i
%K\j[.2nR4(f4=L0c2>L&H1j]@8oAaT-A[WH>uT"#f$&"3@DgbUm(-tteMuH,F&d$ZX2HF#0!BmV3qNSD]u36D#XnbYe]h8h\eO;l
%`_Uqm2fGW]869`smkI[DW1aWPiAaj/c<AAQ/bqPep^ji0Y.HF/#YRg;/P^jUW0!LOO^GiYUT'a$DcRG0cO:MKn#Pk$LjEA"%,?W)
%mF0Rrj4lG#f445j$#_T]WM%-R,bJuJI2a"AAOO)eY^!#_+BL.<;8FE-ajeeulnRH:%T&BR`.TMO/sN5gk.;2E1\Lkn2liUR4EA_&
%q$R!/'"9hOS1_.I`Gr@Ce99(;g>WXk\:O789A%kG.#`#NqGG)D*\$jgS6$qf!l(YaJ.pj5365i4Q20!CO7-1_%SY`Gju+_l;&L+D
%#;^l\`),>p/Z-.nR\SYi@$WO'!tP_X.tl,\p?V7eA%a;'`jIX%$A_E$!'(%%ACI6POQt<72@$"Ol&r/e#9X&(CN(GpP/=2TCZ%UU
%h1h`!)kW!&d3-Jh8e"*;J(8%XXp0Ol-rH!O)JM?M^P1A)Rh*:V#&rg#5N.@5f'QO/\(i[K6qh<s7^O2K2$e)NgP%$hnDHhE%e0/h
%TOHEF#oHo*JdrC0e"UthOU9'*V1XQ/931-d6A#'i@BbI?7(uB((T-XT*-oi@9`LnT3q[S[QEfJ+21VNm6GFBdIZ<I<:@lXOC*\61
%8iG+CLE60KV*nMfTeOAL<4bmR-P=+KORErO?Gtlf(3AQR67YDEC0W;Y[eNGN:d+$eWjn/>@?$?M>8DFX(f+<6*OWPZj0RaKM5<I`
%$LMd<br=5hrdAh[JYj91"crm"D2)5+fO3]?o!X1Je$[m4%^#S[.iq=QqEVS<S3mL3gJ?Y0FkW.#e(JGL5BM0ZD)]rsVOia*R.)Qt
%GdS\J%au;p-f)"[Jdi/X+'=!Fr_^0D;9-arej*_u_M8>,0hE;j7#!F>h@>h31SRhbB1RJ/R-j1dZ!&e?@Z_f1fZVP\N,>p?hR!r*
%$4&9cK_T;M4biN*CaJ.k6]!-hS[&,^Lirq1d6eYBpX>"-a3SR!"fSH.O,3T135O*Y\%!#6m<!H<?\Ms"IdhHGTg[@L,S[U71rS2b
%jpEjVn3P/T"X2#A2A2>>VM,32<cNqqgkD[44eP'^;m&CWM%<us;AjOT!-DnUF2P8<f]u#8/^9[HfRo\%l:sYZK5M?EZC=V-R$pR<
%`ft[iF7st[cJ5?ioABO+akOGG2aud&C9@Cs`TO!-J'b3Xg9aKL!iK[uY_FtY=\WH6J9).;)R22bBtdg)<p/)qaM"5patbIaY!9&u
%!G8FJD$K6/6I7*UD([,IX[.D&8)Z?XM:CuX4tEZ`Nu%s/3c/N^[B,hK7D39..9_G./^M.Z6@*scKpr-(Fb+HT");B]i*]<*k2(Z=
%L4K0JL`CX<0Y<;lMUGBs'e9,9nE:IaZ^BdF4h-sJ:WtsQ%<,L@0$G(4!&0J'-ror9GV$WsnO&RsnE5hhL<RHuH^QgpQZ:.'QZkNA
%-b.bR)@F:Sm;mT!boX$C+i=]mQ.?fB`IJH`c'&VT'r@tbWsO^ZIsf/ok$09m0E*'oZO#7W(0N1e4PYI$_\81A3BO8VkqlGIZQ3;.
%JH:u='<R.[m7Mr@+GIFF6kqCY.jNa/`p]^+6WoK>!hr2o$ZIses5W14)\aX\W325mL_)K]5#`Xbk/ng#oD7O-M_`)doR(PD+dA0Y
%+@bH&;VVN+Z:LcQEuAeLDd&.!%$4,c[#,E+YDLH2Cb9DL&%T+T?="d>1K'@]hAMs/&O56O0>8l'*]"TR(64J+QIq_eoB%??&NlTd
%6V&tEUTJ38Yl$]?L.pcm`ZL?78;sOVL6dRA'PMo:-J*snWY7^GQRAnu[g1GV;&%.J^@=k\SD2:NY?-')-\Ac]6aZB=a0]?2mW&4T
%F+?lE8W1.8!rV`$I!!7C&`neZ.FWK-J00*%TpUY"Le1SI/HI(/+gDS]J>c(4c+L7?OfH%JFXAI6d-SW_Bi*4PG=n.)P%o[EF3D[*
%d!r7!aN.@XIaHVI@/NW2$?p#jBDs>f4%f_+A@^qN?0EuaV-IjF%cngChem]RDYtqIJ8FiPF.jm@#JcAGCts9T:atL>6k[<h*$P-A
%i%#gPUJ1/qI`j\B(>0I>MUoA'D;.FXbh--I1WOdY6E8;;bR%,[?PR_Vr`25f6@bNV6&AqkPUf?UOs):]&$WN?irK6p\@kAV`C@Yg
%G&N@ALg'm.8CG]%7=KoE@!al!<B>fg^B?b[jOZllm>JR3PXuLBJXS)V=8Z-DlSX4,'`<Q@eO.&#)D>NWap'MQcPaRfKm$WV>S,kr
%\Bp/'Tu4b?RjQRM?>pU]A;KOVqHYHm7YWk]MeG_7kep/Jjpa13&L%2aU#J(UX5Cg)JKPg^"psoYkX[GA=O<a=p@4.GCko`'/:V)e
%B_ao+7E-?-'Mfh1N)oJ9g$s`PM&L5jAmcJ?kd#Kqfrbn5Km*9=#js1:0tABE\CYa?SF\n/?t$=7fpUugXrRV,iJF\HKY_7nn^lY:
%,`gSRd]]n@[7JKp:21?RRm4i+akNKa-MENd@VF`'/OB#R<&V.ah5V)Ll8nhd[9!?Zn>3(Qmhb&);4BU"G`uace^+\u(qu%>\RPDO
%C#uKl=Y0N^jP<\hoV7D(ph@-"[=ITPnJQkKK5mrt%d-CnW>.hLMKXU[jZpNQLn4rR%2q?M,ic63lF4fW$((!iG),->T)boj.(/kP
%;J8A(8-9#+,UA7D/eZ4)\l49D!0Slb:N!RE$s?h*aN0qoguiD]BDg*\3>`L4>16*fH,1r'XBOF4AbE4$r]lo?j<LZbToI$c25bct
%o#P*Wqh%"1U;1j(nKlf+YOS*M7PjSt-Kqr=o^DeIQXBdO%j/RciD4t$l'Hnuo'[1f&,;b=IWN:%c+j)F5Q:Q[`t*[opRd#OqbQgU
%rpc'Lo63Ftld*?DmGE?sIf!K$qYeb?op;<MnBX?!o##Bps6$$Rcd,sIqVr[to]o;frqnFAs7GFI^\n#m?iTcAcX6\L^]3qU&]$bY
%^i+`"O8o#?rpZEW#=%4WJ,~>
%AI9_PrivateDataEnd
